node {
  name: "zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "zeros"
  op: "Fill"
  input: "zeros/shape_as_tensor"
  input: "zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "parallel_read/filenames/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "data\\font_train.tfrecord"
      }
    }
  }
}
node {
  name: "parallel_read/filenames/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "parallel_read/filenames/Greater/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parallel_read/filenames/Greater"
  op: "Greater"
  input: "parallel_read/filenames/Size"
  input: "parallel_read/filenames/Greater/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "parallel_read/filenames/Assert/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "string_input_producer requires a non-null input tensor"
      }
    }
  }
}
node {
  name: "parallel_read/filenames/Assert/Assert/data_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "string_input_producer requires a non-null input tensor"
      }
    }
  }
}
node {
  name: "parallel_read/filenames/Assert/Assert"
  op: "Assert"
  input: "parallel_read/filenames/Greater"
  input: "parallel_read/filenames/Assert/Assert/data_0"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "parallel_read/filenames/Identity"
  op: "Identity"
  input: "parallel_read/filenames/Const"
  input: "^parallel_read/filenames/Assert/Assert"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "parallel_read/filenames/RandomShuffle"
  op: "RandomShuffle"
  input: "parallel_read/filenames/Identity"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "parallel_read/filenames"
  op: "FIFOQueueV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 32
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "parallel_read/filenames/filenames_EnqueueMany"
  op: "QueueEnqueueManyV2"
  input: "parallel_read/filenames"
  input: "parallel_read/filenames/RandomShuffle"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "parallel_read/filenames/filenames_Close"
  op: "QueueCloseV2"
  input: "parallel_read/filenames"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "parallel_read/filenames/filenames_Close_1"
  op: "QueueCloseV2"
  input: "parallel_read/filenames"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "parallel_read/filenames/filenames_Size"
  op: "QueueSizeV2"
  input: "parallel_read/filenames"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "parallel_read/filenames/ToFloat"
  op: "Cast"
  input: "parallel_read/filenames/filenames_Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "parallel_read/filenames/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03125
      }
    }
  }
}
node {
  name: "parallel_read/filenames/mul"
  op: "Mul"
  input: "parallel_read/filenames/ToFloat"
  input: "parallel_read/filenames/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "parallel_read/filenames/fraction_of_32_full/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "parallel_read/filenames/fraction_of_32_full"
      }
    }
  }
}
node {
  name: "parallel_read/filenames/fraction_of_32_full"
  op: "ScalarSummary"
  input: "parallel_read/filenames/fraction_of_32_full/tags"
  input: "parallel_read/filenames/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "parallel_read/common_queue"
  op: "RandomShuffleQueueV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 32
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "min_after_dequeue"
    value {
      i: 16
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
  attr {
    key: "shapes"
    value {
      list {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "parallel_read/common_queue_Size"
  op: "QueueSizeV2"
  input: "parallel_read/common_queue"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "parallel_read/ToFloat"
  op: "Cast"
  input: "parallel_read/common_queue_Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "parallel_read/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03125
      }
    }
  }
}
node {
  name: "parallel_read/mul"
  op: "Mul"
  input: "parallel_read/ToFloat"
  input: "parallel_read/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "parallel_read/fraction_of_32_full/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "parallel_read/fraction_of_32_full"
      }
    }
  }
}
node {
  name: "parallel_read/fraction_of_32_full"
  op: "ScalarSummary"
  input: "parallel_read/fraction_of_32_full/tags"
  input: "parallel_read/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "parallel_read/TFRecordReaderV2"
  op: "TFRecordReaderV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "compression_type"
    value {
      s: ""
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "parallel_read/ReaderReadV2"
  op: "ReaderReadV2"
  input: "parallel_read/TFRecordReaderV2"
  input: "parallel_read/filenames"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "parallel_read/common_queue_enqueue"
  op: "QueueEnqueueV2"
  input: "parallel_read/common_queue"
  input: "parallel_read/ReaderReadV2"
  input: "parallel_read/ReaderReadV2:1"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "parallel_read/common_queue_Close"
  op: "QueueCloseV2"
  input: "parallel_read/common_queue"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "parallel_read/common_queue_Close_1"
  op: "QueueCloseV2"
  input: "parallel_read/common_queue"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "parallel_read/common_queue_Dequeue"
  op: "QueueDequeueV2"
  input: "parallel_read/common_queue"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "ParseSingleExample/key_image/encoded"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "ParseSingleExample/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ParseSingleExample/Reshape"
  op: "Reshape"
  input: "ParseSingleExample/key_image/encoded"
  input: "ParseSingleExample/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ParseSingleExample/key_image/format"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "png"
      }
    }
  }
}
node {
  name: "ParseSingleExample/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ParseSingleExample/Reshape_1"
  op: "Reshape"
  input: "ParseSingleExample/key_image/format"
  input: "ParseSingleExample/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ParseSingleExample/ParseSingleExample"
  op: "ParseSingleExample"
  input: "parallel_read/common_queue_Dequeue:1"
  input: "zeros"
  input: "ParseSingleExample/Reshape"
  input: "ParseSingleExample/Reshape_1"
  attr {
    key: "Tdense"
    value {
      list {
        type: DT_INT64
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "dense_keys"
    value {
      list {
        s: "image/class/label"
        s: "image/encoded"
        s: "image/format"
      }
    }
  }
  attr {
    key: "dense_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "num_sparse"
    value {
      i: 0
    }
  }
  attr {
    key: "sparse_keys"
    value {
      list {
      }
    }
  }
  attr {
    key: "sparse_types"
    value {
      list {
      }
    }
  }
}
node {
  name: "Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Reshape"
  op: "Reshape"
  input: "ParseSingleExample/ParseSingleExample"
  input: "Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Reshape_1"
  op: "Reshape"
  input: "ParseSingleExample/ParseSingleExample:1"
  input: "Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Reshape_2/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Reshape_2"
  op: "Reshape"
  input: "ParseSingleExample/ParseSingleExample:2"
  input: "Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Equal/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "raw"
      }
    }
  }
}
node {
  name: "Equal"
  op: "Equal"
  input: "Reshape_2"
  input: "Equal/y"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Equal_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "RAW"
      }
    }
  }
}
node {
  name: "Equal_1"
  op: "Equal"
  input: "Reshape_2"
  input: "Equal_1/y"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "LogicalOr"
  op: "LogicalOr"
  input: "Equal"
  input: "Equal_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "case/preds_c"
  op: "Pack"
  input: "LogicalOr"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "case/Cast"
  op: "Cast"
  input: "case/preds_c"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "case/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "case/num_true_conds"
  op: "Sum"
  input: "case/Cast"
  input: "case/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "case/n_true_conds"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "case/LessEqual"
  op: "LessEqual"
  input: "case/num_true_conds"
  input: "case/n_true_conds"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "case/Assert/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Input error: exclusive=True: more than 1 conditions (LogicalOr:0) evaluated as True:"
      }
    }
  }
}
node {
  name: "case/Assert/AssertGuard/Switch"
  op: "Switch"
  input: "case/LessEqual"
  input: "case/LessEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "case/Assert/AssertGuard/switch_t"
  op: "Identity"
  input: "case/Assert/AssertGuard/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "case/Assert/AssertGuard/switch_f"
  op: "Identity"
  input: "case/Assert/AssertGuard/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "case/Assert/AssertGuard/pred_id"
  op: "Identity"
  input: "case/LessEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "case/Assert/AssertGuard/NoOp"
  op: "NoOp"
  input: "^case/Assert/AssertGuard/switch_t"
}
node {
  name: "case/Assert/AssertGuard/control_dependency"
  op: "Identity"
  input: "case/Assert/AssertGuard/switch_t"
  input: "^case/Assert/AssertGuard/NoOp"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@case/Assert/AssertGuard/switch_t"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "case/Assert/AssertGuard/Assert/data_0"
  op: "Const"
  input: "^case/Assert/AssertGuard/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Input error: exclusive=True: more than 1 conditions (LogicalOr:0) evaluated as True:"
      }
    }
  }
}
node {
  name: "case/Assert/AssertGuard/Assert"
  op: "Assert"
  input: "case/Assert/AssertGuard/Assert/Switch"
  input: "case/Assert/AssertGuard/Assert/data_0"
  input: "case/Assert/AssertGuard/Assert/Switch_1"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_BOOL
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 1
    }
  }
}
node {
  name: "case/Assert/AssertGuard/Assert/Switch"
  op: "Switch"
  input: "case/LessEqual"
  input: "case/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@case/LessEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "case/Assert/AssertGuard/Assert/Switch_1"
  op: "Switch"
  input: "case/preds_c"
  input: "case/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@case/preds_c"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "case/Assert/AssertGuard/control_dependency_1"
  op: "Identity"
  input: "case/Assert/AssertGuard/switch_f"
  input: "^case/Assert/AssertGuard/Assert"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@case/Assert/AssertGuard/switch_f"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "case/Assert/AssertGuard/Merge"
  op: "Merge"
  input: "case/Assert/AssertGuard/control_dependency_1"
  input: "case/Assert/AssertGuard/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "case/cond/Switch"
  op: "Switch"
  input: "LogicalOr"
  input: "LogicalOr"
  input: "^case/Assert/AssertGuard/Merge"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "case/cond/switch_t"
  op: "Identity"
  input: "case/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "case/cond/switch_f"
  op: "Identity"
  input: "case/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "case/cond/pred_id"
  op: "Identity"
  input: "LogicalOr"
  input: "^case/Assert/AssertGuard/Merge"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "case/cond/DecodeRaw"
  op: "DecodeRaw"
  input: "case/cond/DecodeRaw/Switch:1"
  input: "^case/Assert/AssertGuard/Merge"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "little_endian"
    value {
      b: true
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_UINT8
    }
  }
}
node {
  name: "case/cond/DecodeRaw/Switch"
  op: "Switch"
  input: "Reshape_1"
  input: "case/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "case/cond/is_jpeg/Substr/pos"
  op: "Const"
  input: "^case/Assert/AssertGuard/Merge"
  input: "^case/cond/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "case/cond/is_jpeg/Substr/len"
  op: "Const"
  input: "^case/Assert/AssertGuard/Merge"
  input: "^case/cond/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "case/cond/is_jpeg/Substr"
  op: "Substr"
  input: "case/cond/is_jpeg/Substr/Switch"
  input: "case/cond/is_jpeg/Substr/pos"
  input: "case/cond/is_jpeg/Substr/len"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "case/cond/is_jpeg/Substr/Switch"
  op: "Switch"
  input: "Reshape_1"
  input: "case/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "case/cond/is_jpeg/Equal/y"
  op: "Const"
  input: "^case/Assert/AssertGuard/Merge"
  input: "^case/cond/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "\377\330\377"
      }
    }
  }
}
node {
  name: "case/cond/is_jpeg/Equal"
  op: "Equal"
  input: "case/cond/is_jpeg/Substr"
  input: "case/cond/is_jpeg/Equal/y"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "case/cond/cond_jpeg/Switch"
  op: "Switch"
  input: "case/cond/is_jpeg/Equal"
  input: "case/cond/is_jpeg/Equal"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "case/cond/cond_jpeg/switch_t"
  op: "Identity"
  input: "case/cond/cond_jpeg/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "case/cond/cond_jpeg/switch_f"
  op: "Identity"
  input: "case/cond/cond_jpeg/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "case/cond/cond_jpeg/pred_id"
  op: "Identity"
  input: "case/cond/is_jpeg/Equal"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "case/cond/cond_jpeg/DecodeJpeg"
  op: "DecodeJpeg"
  input: "case/cond/cond_jpeg/DecodeJpeg/Switch:1"
  input: "^case/Assert/AssertGuard/Merge"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "acceptable_fraction"
    value {
      f: 1.0
    }
  }
  attr {
    key: "channels"
    value {
      i: 3
    }
  }
  attr {
    key: "dct_method"
    value {
      s: ""
    }
  }
  attr {
    key: "fancy_upscaling"
    value {
      b: true
    }
  }
  attr {
    key: "ratio"
    value {
      i: 1
    }
  }
  attr {
    key: "try_recover_truncated"
    value {
      b: false
    }
  }
}
node {
  name: "case/cond/cond_jpeg/DecodeJpeg/Switch"
  op: "Switch"
  input: "case/cond/is_jpeg/Substr/Switch"
  input: "case/cond/cond_jpeg/pred_id"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "case/cond/cond_jpeg/decode_image/Substr/pos"
  op: "Const"
  input: "^case/Assert/AssertGuard/Merge"
  input: "^case/cond/cond_jpeg/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "case/cond/cond_jpeg/decode_image/Substr/len"
  op: "Const"
  input: "^case/Assert/AssertGuard/Merge"
  input: "^case/cond/cond_jpeg/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "case/cond/cond_jpeg/decode_image/Substr"
  op: "Substr"
  input: "case/cond/cond_jpeg/decode_image/Substr/Switch"
  input: "case/cond/cond_jpeg/decode_image/Substr/pos"
  input: "case/cond/cond_jpeg/decode_image/Substr/len"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "case/cond/cond_jpeg/decode_image/Substr/Switch"
  op: "Switch"
  input: "case/cond/is_jpeg/Substr/Switch"
  input: "case/cond/cond_jpeg/pred_id"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "case/cond/cond_jpeg/decode_image/is_jpeg/Substr/pos"
  op: "Const"
  input: "^case/Assert/AssertGuard/Merge"
  input: "^case/cond/cond_jpeg/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "case/cond/cond_jpeg/decode_image/is_jpeg/Substr/len"
  op: "Const"
  input: "^case/Assert/AssertGuard/Merge"
  input: "^case/cond/cond_jpeg/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "case/cond/cond_jpeg/decode_image/is_jpeg/Substr"
  op: "Substr"
  input: "case/cond/cond_jpeg/decode_image/Substr/Switch"
  input: "case/cond/cond_jpeg/decode_image/is_jpeg/Substr/pos"
  input: "case/cond/cond_jpeg/decode_image/is_jpeg/Substr/len"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "case/cond/cond_jpeg/decode_image/is_jpeg/Equal/y"
  op: "Const"
  input: "^case/Assert/AssertGuard/Merge"
  input: "^case/cond/cond_jpeg/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "\377\330\377"
      }
    }
  }
}
node {
  name: "case/cond/cond_jpeg/decode_image/is_jpeg/Equal"
  op: "Equal"
  input: "case/cond/cond_jpeg/decode_image/is_jpeg/Substr"
  input: "case/cond/cond_jpeg/decode_image/is_jpeg/Equal/y"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "case/cond/cond_jpeg/decode_image/cond_jpeg/Switch"
  op: "Switch"
  input: "case/cond/cond_jpeg/decode_image/is_jpeg/Equal"
  input: "case/cond/cond_jpeg/decode_image/is_jpeg/Equal"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "case/cond/cond_jpeg/decode_image/cond_jpeg/switch_t"
  op: "Identity"
  input: "case/cond/cond_jpeg/decode_image/cond_jpeg/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "case/cond/cond_jpeg/decode_image/cond_jpeg/switch_f"
  op: "Identity"
  input: "case/cond/cond_jpeg/decode_image/cond_jpeg/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "case/cond/cond_jpeg/decode_image/cond_jpeg/pred_id"
  op: "Identity"
  input: "case/cond/cond_jpeg/decode_image/is_jpeg/Equal"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "case/cond/cond_jpeg/decode_image/cond_jpeg/check_jpeg_channels/x"
  op: "Const"
  input: "^case/Assert/AssertGuard/Merge"
  input: "^case/cond/cond_jpeg/decode_image/cond_jpeg/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "case/cond/cond_jpeg/decode_image/cond_jpeg/check_jpeg_channels/y"
  op: "Const"
  input: "^case/Assert/AssertGuard/Merge"
  input: "^case/cond/cond_jpeg/decode_image/cond_jpeg/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "case/cond/cond_jpeg/decode_image/cond_jpeg/check_jpeg_channels"
  op: "NotEqual"
  input: "case/cond/cond_jpeg/decode_image/cond_jpeg/check_jpeg_channels/x"
  input: "case/cond/cond_jpeg/decode_image/cond_jpeg/check_jpeg_channels/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "case/cond/cond_jpeg/decode_image/cond_jpeg/Assert/Const"
  op: "Const"
  input: "^case/Assert/AssertGuard/Merge"
  input: "^case/cond/cond_jpeg/decode_image/cond_jpeg/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Channels must be in (None, 0, 1, 3) when decoding JPEG images"
      }
    }
  }
}
node {
  name: "case/cond/cond_jpeg/decode_image/cond_jpeg/Assert/Assert/data_0"
  op: "Const"
  input: "^case/Assert/AssertGuard/Merge"
  input: "^case/cond/cond_jpeg/decode_image/cond_jpeg/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Channels must be in (None, 0, 1, 3) when decoding JPEG images"
      }
    }
  }
}
node {
  name: "case/cond/cond_jpeg/decode_image/cond_jpeg/Assert/Assert"
  op: "Assert"
  input: "case/cond/cond_jpeg/decode_image/cond_jpeg/check_jpeg_channels"
  input: "case/cond/cond_jpeg/decode_image/cond_jpeg/Assert/Assert/data_0"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "case/cond/cond_jpeg/decode_image/cond_jpeg/DecodeJpeg"
  op: "DecodeJpeg"
  input: "case/cond/cond_jpeg/decode_image/cond_jpeg/DecodeJpeg/Switch:1"
  input: "^case/Assert/AssertGuard/Merge"
  input: "^case/cond/cond_jpeg/decode_image/cond_jpeg/Assert/Assert"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "acceptable_fraction"
    value {
      f: 1.0
    }
  }
  attr {
    key: "channels"
    value {
      i: 3
    }
  }
  attr {
    key: "dct_method"
    value {
      s: ""
    }
  }
  attr {
    key: "fancy_upscaling"
    value {
      b: true
    }
  }
  attr {
    key: "ratio"
    value {
      i: 1
    }
  }
  attr {
    key: "try_recover_truncated"
    value {
      b: false
    }
  }
}
node {
  name: "case/cond/cond_jpeg/decode_image/cond_jpeg/DecodeJpeg/Switch"
  op: "Switch"
  input: "case/cond/cond_jpeg/decode_image/Substr/Switch"
  input: "case/cond/cond_jpeg/decode_image/cond_jpeg/pred_id"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "case/cond/cond_jpeg/decode_image/cond_jpeg/is_png/y"
  op: "Const"
  input: "^case/Assert/AssertGuard/Merge"
  input: "^case/cond/cond_jpeg/decode_image/cond_jpeg/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "\211PN"
      }
    }
  }
}
node {
  name: "case/cond/cond_jpeg/decode_image/cond_jpeg/is_png"
  op: "Equal"
  input: "case/cond/cond_jpeg/decode_image/cond_jpeg/is_png/Switch"
  input: "case/cond/cond_jpeg/decode_image/cond_jpeg/is_png/y"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "case/cond/cond_jpeg/decode_image/cond_jpeg/is_png/Switch"
  op: "Switch"
  input: "case/cond/cond_jpeg/decode_image/Substr"
  input: "case/cond/cond_jpeg/decode_image/cond_jpeg/pred_id"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@case/cond/cond_jpeg/decode_image/Substr"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/Switch"
  op: "Switch"
  input: "case/cond/cond_jpeg/decode_image/cond_jpeg/is_png"
  input: "case/cond/cond_jpeg/decode_image/cond_jpeg/is_png"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/switch_t"
  op: "Identity"
  input: "case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/switch_f"
  op: "Identity"
  input: "case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/pred_id"
  op: "Identity"
  input: "case/cond/cond_jpeg/decode_image/cond_jpeg/is_png"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/DecodePng"
  op: "DecodePng"
  input: "case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/DecodePng/Switch_1:1"
  input: "^case/Assert/AssertGuard/Merge"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "channels"
    value {
      i: 3
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_UINT8
    }
  }
}
node {
  name: "case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/DecodePng/Switch"
  op: "Switch"
  input: "case/cond/cond_jpeg/decode_image/Substr/Switch"
  input: "case/cond/cond_jpeg/decode_image/cond_jpeg/pred_id"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/DecodePng/Switch_1"
  op: "Switch"
  input: "case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/DecodePng/Switch"
  input: "case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/pred_id"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/is_gif/y"
  op: "Const"
  input: "^case/Assert/AssertGuard/Merge"
  input: "^case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "GIF"
      }
    }
  }
}
node {
  name: "case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/is_gif"
  op: "Equal"
  input: "case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/is_gif/Switch"
  input: "case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/is_gif/y"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/is_gif/Switch"
  op: "Switch"
  input: "case/cond/cond_jpeg/decode_image/cond_jpeg/is_png/Switch"
  input: "case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/pred_id"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@case/cond/cond_jpeg/decode_image/Substr"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/Switch"
  op: "Switch"
  input: "case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/is_gif"
  input: "case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/is_gif"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/switch_t"
  op: "Identity"
  input: "case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/switch_f"
  op: "Identity"
  input: "case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/pred_id"
  op: "Identity"
  input: "case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/is_gif"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/check_gif_channels/x"
  op: "Const"
  input: "^case/Assert/AssertGuard/Merge"
  input: "^case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/check_gif_channels/y"
  op: "Const"
  input: "^case/Assert/AssertGuard/Merge"
  input: "^case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/check_gif_channels"
  op: "NotEqual"
  input: "case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/check_gif_channels/x"
  input: "case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/check_gif_channels/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/check_gif_channels_1/x"
  op: "Const"
  input: "^case/Assert/AssertGuard/Merge"
  input: "^case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/check_gif_channels_1/y"
  op: "Const"
  input: "^case/Assert/AssertGuard/Merge"
  input: "^case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/check_gif_channels_1"
  op: "NotEqual"
  input: "case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/check_gif_channels_1/x"
  input: "case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/check_gif_channels_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/LogicalAnd"
  op: "LogicalAnd"
  input: "case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/check_gif_channels"
  input: "case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/check_gif_channels_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/Assert/Const"
  op: "Const"
  input: "^case/Assert/AssertGuard/Merge"
  input: "^case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Channels must be in (None, 0, 3) when decoding GIF images"
      }
    }
  }
}
node {
  name: "case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/Assert/Assert/data_0"
  op: "Const"
  input: "^case/Assert/AssertGuard/Merge"
  input: "^case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Channels must be in (None, 0, 3) when decoding GIF images"
      }
    }
  }
}
node {
  name: "case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/Assert/Assert"
  op: "Assert"
  input: "case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/LogicalAnd"
  input: "case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/Assert/Assert/data_0"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/DecodeGif"
  op: "DecodeGif"
  input: "case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/DecodeGif/Switch_1:1"
  input: "^case/Assert/AssertGuard/Merge"
  input: "^case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/Assert/Assert"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/DecodeGif/Switch"
  op: "Switch"
  input: "case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/DecodePng/Switch"
  input: "case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/pred_id"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/DecodeGif/Switch_1"
  op: "Switch"
  input: "case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/DecodeGif/Switch"
  input: "case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/pred_id"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/Substr/pos"
  op: "Const"
  input: "^case/Assert/AssertGuard/Merge"
  input: "^case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/Substr/len"
  op: "Const"
  input: "^case/Assert/AssertGuard/Merge"
  input: "^case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/Substr"
  op: "Substr"
  input: "case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/Substr/Switch"
  input: "case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/Substr/pos"
  input: "case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/Substr/len"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/Substr/Switch"
  op: "Switch"
  input: "case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/DecodeGif/Switch"
  input: "case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/pred_id"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/is_bmp/y"
  op: "Const"
  input: "^case/Assert/AssertGuard/Merge"
  input: "^case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "BM"
      }
    }
  }
}
node {
  name: "case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/is_bmp"
  op: "Equal"
  input: "case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/Substr"
  input: "case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/is_bmp/y"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/Assert_1/Const"
  op: "Const"
  input: "^case/Assert/AssertGuard/Merge"
  input: "^case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Unable to decode bytes as JPEG, PNG, GIF, or BMP"
      }
    }
  }
}
node {
  name: "case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/Assert_1/Assert/data_0"
  op: "Const"
  input: "^case/Assert/AssertGuard/Merge"
  input: "^case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Unable to decode bytes as JPEG, PNG, GIF, or BMP"
      }
    }
  }
}
node {
  name: "case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/Assert_1/Assert"
  op: "Assert"
  input: "case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/is_bmp"
  input: "case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/Assert_1/Assert/data_0"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/check_channels/x"
  op: "Const"
  input: "^case/Assert/AssertGuard/Merge"
  input: "^case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/check_channels/y"
  op: "Const"
  input: "^case/Assert/AssertGuard/Merge"
  input: "^case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/check_channels"
  op: "NotEqual"
  input: "case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/check_channels/x"
  input: "case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/check_channels/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/Assert_2/Const"
  op: "Const"
  input: "^case/Assert/AssertGuard/Merge"
  input: "^case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Channels must be in (None, 0, 3) when decoding BMP images"
      }
    }
  }
}
node {
  name: "case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/Assert_2/Assert/data_0"
  op: "Const"
  input: "^case/Assert/AssertGuard/Merge"
  input: "^case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Channels must be in (None, 0, 3) when decoding BMP images"
      }
    }
  }
}
node {
  name: "case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/Assert_2/Assert"
  op: "Assert"
  input: "case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/check_channels"
  input: "case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/Assert_2/Assert/data_0"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/DecodeBmp"
  op: "DecodeBmp"
  input: "case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/Substr/Switch"
  input: "^case/Assert/AssertGuard/Merge"
  input: "^case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/Assert_1/Assert"
  input: "^case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/Assert_2/Assert"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "channels"
    value {
      i: 0
    }
  }
}
node {
  name: "case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/Merge"
  op: "Merge"
  input: "case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/DecodeBmp"
  input: "case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/DecodeGif"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/Merge"
  op: "Merge"
  input: "case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/Merge"
  input: "case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/DecodePng"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "case/cond/cond_jpeg/decode_image/cond_jpeg/Merge"
  op: "Merge"
  input: "case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/Merge"
  input: "case/cond/cond_jpeg/decode_image/cond_jpeg/DecodeJpeg"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "case/cond/cond_jpeg/Merge"
  op: "Merge"
  input: "case/cond/cond_jpeg/decode_image/cond_jpeg/Merge"
  input: "case/cond/cond_jpeg/DecodeJpeg"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "case/cond/Merge"
  op: "Merge"
  input: "case/cond/cond_jpeg/Merge"
  input: "case/cond/DecodeRaw"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Reshape_3/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Reshape_3"
  op: "Reshape"
  input: "case/cond/Merge"
  input: "Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "distort_image/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\200?\000\000\200?"
      }
    }
  }
}
node {
  name: "distort_image/convert_image/Cast"
  op: "Cast"
  input: "Reshape_3"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "distort_image/convert_image/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.003921568859368563
      }
    }
  }
}
node {
  name: "distort_image/convert_image"
  op: "Mul"
  input: "distort_image/convert_image/Cast"
  input: "distort_image/convert_image/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "distort_image/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "distort_image/ExpandDims"
  op: "ExpandDims"
  input: "distort_image/convert_image"
  input: "distort_image/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "distort_image/DrawBoundingBoxes"
  op: "DrawBoundingBoxes"
  input: "distort_image/ExpandDims"
  input: "distort_image/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "distort_image/image_with_bounding_boxes/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "distort_image/image_with_bounding_boxes"
      }
    }
  }
}
node {
  name: "distort_image/image_with_bounding_boxes"
  op: "ImageSummary"
  input: "distort_image/image_with_bounding_boxes/tag"
  input: "distort_image/DrawBoundingBoxes"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "bad_color"
    value {
      tensor {
        dtype: DT_UINT8
        tensor_shape {
          dim {
            size: 4
          }
        }
        int_val: 255
        int_val: 0
        int_val: 0
        int_val: 255
      }
    }
  }
  attr {
    key: "max_images"
    value {
      i: 3
    }
  }
}
node {
  name: "distort_image/distorted_bounding_box_crop/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "distort_image/distorted_bounding_box_crop/sample_distorted_bounding_box/SampleDistortedBoundingBoxV2/min_object_covered"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "distort_image/distorted_bounding_box_crop/sample_distorted_bounding_box/SampleDistortedBoundingBoxV2"
  op: "SampleDistortedBoundingBoxV2"
  input: "distort_image/distorted_bounding_box_crop/Shape"
  input: "distort_image/Const"
  input: "distort_image/distorted_bounding_box_crop/sample_distorted_bounding_box/SampleDistortedBoundingBoxV2/min_object_covered"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "area_range"
    value {
      list {
        f: 0.30000001192092896
        f: 1.0
      }
    }
  }
  attr {
    key: "aspect_ratio_range"
    value {
      list {
        f: 0.75
        f: 1.3300000429153442
      }
    }
  }
  attr {
    key: "max_attempts"
    value {
      i: 100
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
  attr {
    key: "use_image_if_no_bounding_boxes"
    value {
      b: true
    }
  }
}
node {
  name: "distort_image/distorted_bounding_box_crop/Slice"
  op: "Slice"
  input: "distort_image/convert_image"
  input: "distort_image/distorted_bounding_box_crop/sample_distorted_bounding_box/SampleDistortedBoundingBoxV2"
  input: "distort_image/distorted_bounding_box_crop/sample_distorted_bounding_box/SampleDistortedBoundingBoxV2:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "distort_image/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "distort_image/ExpandDims_1"
  op: "ExpandDims"
  input: "distort_image/convert_image"
  input: "distort_image/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "distort_image/DrawBoundingBoxes_1"
  op: "DrawBoundingBoxes"
  input: "distort_image/ExpandDims_1"
  input: "distort_image/distorted_bounding_box_crop/sample_distorted_bounding_box/SampleDistortedBoundingBoxV2:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "distort_image/images_with_distorted_bounding_box/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "distort_image/images_with_distorted_bounding_box"
      }
    }
  }
}
node {
  name: "distort_image/images_with_distorted_bounding_box"
  op: "ImageSummary"
  input: "distort_image/images_with_distorted_bounding_box/tag"
  input: "distort_image/DrawBoundingBoxes_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "bad_color"
    value {
      tensor {
        dtype: DT_UINT8
        tensor_shape {
          dim {
            size: 4
          }
        }
        int_val: 255
        int_val: 0
        int_val: 0
        int_val: 255
      }
    }
  }
  attr {
    key: "max_images"
    value {
      i: 3
    }
  }
}
node {
  name: "distort_image/random_uniform/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "distort_image/random_uniform/min"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "distort_image/random_uniform/max"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "distort_image/random_uniform"
  op: "RandomUniformInt"
  input: "distort_image/random_uniform/shape"
  input: "distort_image/random_uniform/min"
  input: "distort_image/random_uniform/max"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "distort_image/Equal/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "distort_image/Equal"
  op: "Equal"
  input: "distort_image/random_uniform"
  input: "distort_image/Equal/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "distort_image/Switch"
  op: "Switch"
  input: "distort_image/distorted_bounding_box_crop/Slice"
  input: "distort_image/Equal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "distort_image/resize_images/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "distort_image/resize_images/ExpandDims"
  op: "ExpandDims"
  input: "distort_image/Switch:1"
  input: "distort_image/resize_images/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "distort_image/resize_images/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "distort_image/resize_images/ResizeBilinear"
  op: "ResizeBilinear"
  input: "distort_image/resize_images/ExpandDims"
  input: "distort_image/resize_images/size"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "align_corners"
    value {
      b: false
    }
  }
}
node {
  name: "distort_image/resize_images/Squeeze"
  op: "Squeeze"
  input: "distort_image/resize_images/ResizeBilinear"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
      }
    }
  }
}
node {
  name: "distort_image/Merge"
  op: "Merge"
  input: "distort_image/resize_images/Squeeze"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "distort_image/ExpandDims_2/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "distort_image/ExpandDims_2"
  op: "ExpandDims"
  input: "distort_image/Merge"
  input: "distort_image/ExpandDims_2/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "distort_image/cropped_resized_image/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "distort_image/cropped_resized_image"
      }
    }
  }
}
node {
  name: "distort_image/cropped_resized_image"
  op: "ImageSummary"
  input: "distort_image/cropped_resized_image/tag"
  input: "distort_image/ExpandDims_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "bad_color"
    value {
      tensor {
        dtype: DT_UINT8
        tensor_shape {
          dim {
            size: 4
          }
        }
        int_val: 255
        int_val: 0
        int_val: 0
        int_val: 255
      }
    }
  }
  attr {
    key: "max_images"
    value {
      i: 3
    }
  }
}
node {
  name: "distort_image/random_flip_left_right/control_dependency"
  op: "Identity"
  input: "distort_image/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@distort_image/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "distort_image/random_flip_left_right/random_uniform/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "distort_image/random_flip_left_right/random_uniform/min"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "distort_image/random_flip_left_right/random_uniform/max"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "distort_image/random_flip_left_right/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "distort_image/random_flip_left_right/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "distort_image/random_flip_left_right/random_uniform/sub"
  op: "Sub"
  input: "distort_image/random_flip_left_right/random_uniform/max"
  input: "distort_image/random_flip_left_right/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "distort_image/random_flip_left_right/random_uniform/mul"
  op: "Mul"
  input: "distort_image/random_flip_left_right/random_uniform/RandomUniform"
  input: "distort_image/random_flip_left_right/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "distort_image/random_flip_left_right/random_uniform"
  op: "Add"
  input: "distort_image/random_flip_left_right/random_uniform/mul"
  input: "distort_image/random_flip_left_right/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "distort_image/random_flip_left_right/Less/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "distort_image/random_flip_left_right/Less"
  op: "Less"
  input: "distort_image/random_flip_left_right/random_uniform"
  input: "distort_image/random_flip_left_right/Less/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "distort_image/random_flip_left_right/Switch"
  op: "Switch"
  input: "distort_image/random_flip_left_right/Less"
  input: "distort_image/random_flip_left_right/Less"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "distort_image/random_flip_left_right/switch_t"
  op: "Identity"
  input: "distort_image/random_flip_left_right/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "distort_image/random_flip_left_right/switch_f"
  op: "Identity"
  input: "distort_image/random_flip_left_right/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "distort_image/random_flip_left_right/pred_id"
  op: "Identity"
  input: "distort_image/random_flip_left_right/Less"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "distort_image/random_flip_left_right/ReverseV2/axis"
  op: "Const"
  input: "^distort_image/random_flip_left_right/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "distort_image/random_flip_left_right/ReverseV2"
  op: "ReverseV2"
  input: "distort_image/random_flip_left_right/ReverseV2/Switch:1"
  input: "distort_image/random_flip_left_right/ReverseV2/axis"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "distort_image/random_flip_left_right/ReverseV2/Switch"
  op: "Switch"
  input: "distort_image/random_flip_left_right/control_dependency"
  input: "distort_image/random_flip_left_right/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@distort_image/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "distort_image/random_flip_left_right/Switch_1"
  op: "Switch"
  input: "distort_image/random_flip_left_right/control_dependency"
  input: "distort_image/random_flip_left_right/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@distort_image/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "distort_image/random_flip_left_right/Merge"
  op: "Merge"
  input: "distort_image/random_flip_left_right/Switch_1"
  input: "distort_image/random_flip_left_right/ReverseV2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "distort_image/random_uniform_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "distort_image/random_uniform_1/min"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "distort_image/random_uniform_1/max"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "distort_image/random_uniform_1"
  op: "RandomUniformInt"
  input: "distort_image/random_uniform_1/shape"
  input: "distort_image/random_uniform_1/min"
  input: "distort_image/random_uniform_1/max"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "distort_image/Equal_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "distort_image/Equal_1"
  op: "Equal"
  input: "distort_image/random_uniform_1"
  input: "distort_image/Equal_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "distort_image/Switch_1"
  op: "Switch"
  input: "distort_image/random_flip_left_right/Merge"
  input: "distort_image/Equal_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "distort_image/distort_color/random_uniform/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "distort_image/distort_color/random_uniform/min"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.125490203499794
      }
    }
  }
}
node {
  name: "distort_image/distort_color/random_uniform/max"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125490203499794
      }
    }
  }
}
node {
  name: "distort_image/distort_color/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "distort_image/distort_color/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "distort_image/distort_color/random_uniform/sub"
  op: "Sub"
  input: "distort_image/distort_color/random_uniform/max"
  input: "distort_image/distort_color/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "distort_image/distort_color/random_uniform/mul"
  op: "Mul"
  input: "distort_image/distort_color/random_uniform/RandomUniform"
  input: "distort_image/distort_color/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "distort_image/distort_color/random_uniform"
  op: "Add"
  input: "distort_image/distort_color/random_uniform/mul"
  input: "distort_image/distort_color/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "distort_image/distort_color/adjust_brightness/Identity"
  op: "Identity"
  input: "distort_image/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "distort_image/distort_color/adjust_brightness"
  op: "Add"
  input: "distort_image/distort_color/adjust_brightness/Identity"
  input: "distort_image/distort_color/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "distort_image/distort_color/adjust_brightness/Identity_1"
  op: "Identity"
  input: "distort_image/distort_color/adjust_brightness"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "distort_image/distort_color/random_uniform_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "distort_image/distort_color/random_uniform_1/min"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "distort_image/distort_color/random_uniform_1/max"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.5
      }
    }
  }
}
node {
  name: "distort_image/distort_color/random_uniform_1/RandomUniform"
  op: "RandomUniform"
  input: "distort_image/distort_color/random_uniform_1/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "distort_image/distort_color/random_uniform_1/sub"
  op: "Sub"
  input: "distort_image/distort_color/random_uniform_1/max"
  input: "distort_image/distort_color/random_uniform_1/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "distort_image/distort_color/random_uniform_1/mul"
  op: "Mul"
  input: "distort_image/distort_color/random_uniform_1/RandomUniform"
  input: "distort_image/distort_color/random_uniform_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "distort_image/distort_color/random_uniform_1"
  op: "Add"
  input: "distort_image/distort_color/random_uniform_1/mul"
  input: "distort_image/distort_color/random_uniform_1/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "distort_image/distort_color/adjust_saturation/Identity"
  op: "Identity"
  input: "distort_image/distort_color/adjust_brightness/Identity_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "distort_image/distort_color/adjust_saturation/AdjustSaturation"
  op: "AdjustSaturation"
  input: "distort_image/distort_color/adjust_saturation/Identity"
  input: "distort_image/distort_color/random_uniform_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "distort_image/distort_color/adjust_saturation/Identity_1"
  op: "Identity"
  input: "distort_image/distort_color/adjust_saturation/AdjustSaturation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "distort_image/distort_color/clip_by_value/Minimum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "distort_image/distort_color/clip_by_value/Minimum"
  op: "Minimum"
  input: "distort_image/distort_color/adjust_saturation/Identity_1"
  input: "distort_image/distort_color/clip_by_value/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "distort_image/distort_color/clip_by_value/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "distort_image/distort_color/clip_by_value"
  op: "Maximum"
  input: "distort_image/distort_color/clip_by_value/Minimum"
  input: "distort_image/distort_color/clip_by_value/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "distort_image/Merge_1"
  op: "Merge"
  input: "distort_image/distort_color/clip_by_value"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "distort_image/ExpandDims_3/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "distort_image/ExpandDims_3"
  op: "ExpandDims"
  input: "distort_image/Merge_1"
  input: "distort_image/ExpandDims_3/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "distort_image/final_distorted_image/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "distort_image/final_distorted_image"
      }
    }
  }
}
node {
  name: "distort_image/final_distorted_image"
  op: "ImageSummary"
  input: "distort_image/final_distorted_image/tag"
  input: "distort_image/ExpandDims_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "bad_color"
    value {
      tensor {
        dtype: DT_UINT8
        tensor_shape {
          dim {
            size: 4
          }
        }
        int_val: 255
        int_val: 0
        int_val: 0
        int_val: 255
      }
    }
  }
  attr {
    key: "max_images"
    value {
      i: 3
    }
  }
}
node {
  name: "distort_image/Sub/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "distort_image/Sub"
  op: "Sub"
  input: "distort_image/Merge_1"
  input: "distort_image/Sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "distort_image/Mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "distort_image/Mul"
  op: "Mul"
  input: "distort_image/Sub"
  input: "distort_image/Mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "batch/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "batch/fifo_queue"
  op: "FIFOQueueV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 80
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_FLOAT
        type: DT_INT64
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch/fifo_queue_enqueue"
  op: "QueueEnqueueV2"
  input: "batch/fifo_queue"
  input: "distort_image/Mul"
  input: "Reshape"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_FLOAT
        type: DT_INT64
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "batch/fifo_queue_Close"
  op: "QueueCloseV2"
  input: "batch/fifo_queue"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "batch/fifo_queue_Close_1"
  op: "QueueCloseV2"
  input: "batch/fifo_queue"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "batch/fifo_queue_Size"
  op: "QueueSizeV2"
  input: "batch/fifo_queue"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch/ToFloat"
  op: "Cast"
  input: "batch/fifo_queue_Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.012500000186264515
      }
    }
  }
}
node {
  name: "batch/mul"
  op: "Mul"
  input: "batch/ToFloat"
  input: "batch/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch/fraction_of_80_full/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "batch/fraction_of_80_full"
      }
    }
  }
}
node {
  name: "batch/fraction_of_80_full"
  op: "ScalarSummary"
  input: "batch/fraction_of_80_full/tags"
  input: "batch/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch/n"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "batch"
  op: "QueueDequeueManyV2"
  input: "batch/fifo_queue"
  input: "batch/n"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_FLOAT
        type: DT_INT64
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "OneHotEncoding/one_hot/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "OneHotEncoding/one_hot/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OneHotEncoding/one_hot/depth"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 36
      }
    }
  }
}
node {
  name: "OneHotEncoding/one_hot/on_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "OneHotEncoding/one_hot/off_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OneHotEncoding/one_hot"
  op: "OneHot"
  input: "batch:1"
  input: "OneHotEncoding/one_hot/depth"
  input: "OneHotEncoding/one_hot/on_value"
  input: "OneHotEncoding/one_hot/off_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "TI"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 36
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: -1
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_0/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_0/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_0/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_0/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_0/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_0/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_0/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "MobilenetV1/Conv2d_0/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_0/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_0/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "MobilenetV1/Conv2d_0/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "MobilenetV1/Conv2d_0/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_0/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_0/weights/Initializer/truncated_normal"
  op: "Add"
  input: "MobilenetV1/Conv2d_0/weights/Initializer/truncated_normal/mul"
  input: "MobilenetV1/Conv2d_0/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_0/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_0/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_0/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_0/weights/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_0/weights"
  input: "MobilenetV1/Conv2d_0/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_0/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_0/weights/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_0/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_0/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_0/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_0/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_0/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "MobilenetV1/Conv2d_0/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_0/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_0/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "MobilenetV1/MobilenetV1/Conv2d_0/kernel/Regularizer/l2_regularizer/scale"
  input: "MobilenetV1/MobilenetV1/Conv2d_0/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_0/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_0/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_0/Conv2D"
  op: "Conv2D"
  input: "batch"
  input: "MobilenetV1/Conv2d_0/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_0/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_0/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 24
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_0/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_0/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_0/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "MobilenetV1/Conv2d_0/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "MobilenetV1/Conv2d_0/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_0/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_0/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_0/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_0/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_0/BatchNorm/gamma"
  input: "MobilenetV1/Conv2d_0/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_0/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_0/BatchNorm/gamma/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_0/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_0/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_0/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_0/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 24
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_0/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_0/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_0/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "MobilenetV1/Conv2d_0/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "MobilenetV1/Conv2d_0/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_0/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_0/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_0/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_0/BatchNorm/beta/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_0/BatchNorm/beta"
  input: "MobilenetV1/Conv2d_0/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_0/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_0/BatchNorm/beta/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_0/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_0/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_0/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_0/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 24
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_0/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_0/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_0/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "MobilenetV1/Conv2d_0/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "MobilenetV1/Conv2d_0/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_0/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_0/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_0/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_0/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_0/BatchNorm/moving_mean"
  input: "MobilenetV1/Conv2d_0/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_0/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_0/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_0/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_0/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_0/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_0/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 24
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_0/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_0/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_0/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "MobilenetV1/Conv2d_0/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "MobilenetV1/Conv2d_0/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_0/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_0/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_0/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_0/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_0/BatchNorm/moving_variance"
  input: "MobilenetV1/Conv2d_0/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_0/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_0/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_0/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_0/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_0/BatchNorm/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_0/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_0/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "MobilenetV1/MobilenetV1/Conv2d_0/Conv2D"
  input: "MobilenetV1/Conv2d_0/BatchNorm/gamma/read"
  input: "MobilenetV1/Conv2d_0/BatchNorm/beta/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_0/BatchNorm/Const"
  input: "MobilenetV1/MobilenetV1/Conv2d_0/BatchNorm/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 24
          }
        }
        shape {
          dim {
            size: 24
          }
        }
        shape {
          dim {
            size: 24
          }
        }
        shape {
          dim {
            size: 24
          }
        }
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_0/BatchNorm/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0003000000142492354
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_0/BatchNorm/AssignMovingAvg/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_0/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_0/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_0/BatchNorm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_0/BatchNorm/AssignMovingAvg/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_0/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_0/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_0/BatchNorm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "MobilenetV1/MobilenetV1/Conv2d_0/BatchNorm/AssignMovingAvg/Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_0/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_0/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_0/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "MobilenetV1/Conv2d_0/BatchNorm/moving_mean"
  input: "MobilenetV1/MobilenetV1/Conv2d_0/BatchNorm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_0/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_0/BatchNorm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_0/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_0/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_0/BatchNorm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_0/BatchNorm/AssignMovingAvg_1/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_0/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_0/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_0/BatchNorm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "MobilenetV1/MobilenetV1/Conv2d_0/BatchNorm/AssignMovingAvg_1/Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_0/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_0/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_0/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "MobilenetV1/Conv2d_0/BatchNorm/moving_variance"
  input: "MobilenetV1/MobilenetV1/Conv2d_0/BatchNorm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_0/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_0/Relu6"
  op: "Relu6"
  input: "MobilenetV1/MobilenetV1/Conv2d_0/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_depthwise/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\030\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_depthwise/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "MobilenetV1/Conv2d_1_depthwise/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 24
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_depthwise/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "MobilenetV1/Conv2d_1_depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "MobilenetV1/Conv2d_1_depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 24
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_depthwise/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "MobilenetV1/Conv2d_1_depthwise/depthwise_weights/Initializer/truncated_normal/mul"
  input: "MobilenetV1/Conv2d_1_depthwise/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 24
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 24
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 24
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_1_depthwise/depthwise_weights"
  input: "MobilenetV1/Conv2d_1_depthwise/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 24
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_1_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 24
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_1_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\030\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_1_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_1_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "MobilenetV1/MobilenetV1/Conv2d_0/Relu6"
  input: "MobilenetV1/Conv2d_1_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_depthwise/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 24
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_depthwise/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_depthwise/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "MobilenetV1/Conv2d_1_depthwise/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "MobilenetV1/Conv2d_1_depthwise/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_depthwise/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_depthwise/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_1_depthwise/BatchNorm/gamma"
  input: "MobilenetV1/Conv2d_1_depthwise/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_depthwise/BatchNorm/gamma/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_1_depthwise/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_depthwise/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 24
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_depthwise/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_depthwise/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "MobilenetV1/Conv2d_1_depthwise/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "MobilenetV1/Conv2d_1_depthwise/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_depthwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_depthwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_1_depthwise/BatchNorm/beta"
  input: "MobilenetV1/Conv2d_1_depthwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_1_depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_depthwise/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 24
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_depthwise/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_depthwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "MobilenetV1/Conv2d_1_depthwise/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "MobilenetV1/Conv2d_1_depthwise/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_depthwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_depthwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_1_depthwise/BatchNorm/moving_mean"
  input: "MobilenetV1/Conv2d_1_depthwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_1_depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_depthwise/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 24
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_depthwise/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_depthwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "MobilenetV1/Conv2d_1_depthwise/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "MobilenetV1/Conv2d_1_depthwise/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_depthwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_depthwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_1_depthwise/BatchNorm/moving_variance"
  input: "MobilenetV1/Conv2d_1_depthwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_1_depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_1_depthwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_1_depthwise/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_1_depthwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "MobilenetV1/MobilenetV1/Conv2d_1_depthwise/depthwise"
  input: "MobilenetV1/Conv2d_1_depthwise/BatchNorm/gamma/read"
  input: "MobilenetV1/Conv2d_1_depthwise/BatchNorm/beta/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_1_depthwise/BatchNorm/Const"
  input: "MobilenetV1/MobilenetV1/Conv2d_1_depthwise/BatchNorm/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 24
          }
        }
        shape {
          dim {
            size: 24
          }
        }
        shape {
          dim {
            size: 24
          }
        }
        shape {
          dim {
            size: 24
          }
        }
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_1_depthwise/BatchNorm/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0003000000142492354
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_1_depthwise/BatchNorm/AssignMovingAvg/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_1_depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_1_depthwise/BatchNorm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_1_depthwise/BatchNorm/AssignMovingAvg/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_1_depthwise/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_1_depthwise/BatchNorm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "MobilenetV1/MobilenetV1/Conv2d_1_depthwise/BatchNorm/AssignMovingAvg/Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_1_depthwise/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_1_depthwise/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "MobilenetV1/Conv2d_1_depthwise/BatchNorm/moving_mean"
  input: "MobilenetV1/MobilenetV1/Conv2d_1_depthwise/BatchNorm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_1_depthwise/BatchNorm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_1_depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_1_depthwise/BatchNorm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_1_depthwise/BatchNorm/AssignMovingAvg_1/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_1_depthwise/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_1_depthwise/BatchNorm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "MobilenetV1/MobilenetV1/Conv2d_1_depthwise/BatchNorm/AssignMovingAvg_1/Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_1_depthwise/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_1_depthwise/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "MobilenetV1/Conv2d_1_depthwise/BatchNorm/moving_variance"
  input: "MobilenetV1/MobilenetV1/Conv2d_1_depthwise/BatchNorm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_1_depthwise/Relu6"
  op: "Relu6"
  input: "MobilenetV1/MobilenetV1/Conv2d_1_depthwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_pointwise/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\030\000\000\0000\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_pointwise/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_pointwise/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_pointwise/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "MobilenetV1/Conv2d_1_pointwise/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 24
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_pointwise/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "MobilenetV1/Conv2d_1_pointwise/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "MobilenetV1/Conv2d_1_pointwise/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 24
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_pointwise/weights/Initializer/truncated_normal"
  op: "Add"
  input: "MobilenetV1/Conv2d_1_pointwise/weights/Initializer/truncated_normal/mul"
  input: "MobilenetV1/Conv2d_1_pointwise/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 24
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_pointwise/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 24
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 24
        }
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_pointwise/weights/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_1_pointwise/weights"
  input: "MobilenetV1/Conv2d_1_pointwise/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 24
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_pointwise/weights/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_1_pointwise/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 24
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_1_pointwise/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_1_pointwise/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "MobilenetV1/Conv2d_1_pointwise/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_1_pointwise/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "MobilenetV1/MobilenetV1/Conv2d_1_pointwise/kernel/Regularizer/l2_regularizer/scale"
  input: "MobilenetV1/MobilenetV1/Conv2d_1_pointwise/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_1_pointwise/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_1_pointwise/Conv2D"
  op: "Conv2D"
  input: "MobilenetV1/MobilenetV1/Conv2d_1_depthwise/Relu6"
  input: "MobilenetV1/Conv2d_1_pointwise/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 48
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/gamma"
  input: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/gamma/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 48
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/beta"
  input: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/beta/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 48
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_mean"
  input: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 48
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_variance"
  input: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_1_pointwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_1_pointwise/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_1_pointwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "MobilenetV1/MobilenetV1/Conv2d_1_pointwise/Conv2D"
  input: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/gamma/read"
  input: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/beta/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_1_pointwise/BatchNorm/Const"
  input: "MobilenetV1/MobilenetV1/Conv2d_1_pointwise/BatchNorm/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 48
          }
        }
        shape {
          dim {
            size: 48
          }
        }
        shape {
          dim {
            size: 48
          }
        }
        shape {
          dim {
            size: 48
          }
        }
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_1_pointwise/BatchNorm/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0003000000142492354
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_1_pointwise/BatchNorm/AssignMovingAvg/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_1_pointwise/BatchNorm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_1_pointwise/BatchNorm/AssignMovingAvg/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_1_pointwise/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_1_pointwise/BatchNorm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "MobilenetV1/MobilenetV1/Conv2d_1_pointwise/BatchNorm/AssignMovingAvg/Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_1_pointwise/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_1_pointwise/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_mean"
  input: "MobilenetV1/MobilenetV1/Conv2d_1_pointwise/BatchNorm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_1_pointwise/BatchNorm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_1_pointwise/BatchNorm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_1_pointwise/BatchNorm/AssignMovingAvg_1/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_1_pointwise/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_1_pointwise/BatchNorm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "MobilenetV1/MobilenetV1/Conv2d_1_pointwise/BatchNorm/AssignMovingAvg_1/Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_1_pointwise/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_1_pointwise/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_variance"
  input: "MobilenetV1/MobilenetV1/Conv2d_1_pointwise/BatchNorm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_1_pointwise/Relu6"
  op: "Relu6"
  input: "MobilenetV1/MobilenetV1/Conv2d_1_pointwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_depthwise/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\0000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_depthwise/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "MobilenetV1/Conv2d_2_depthwise/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 48
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_depthwise/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "MobilenetV1/Conv2d_2_depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "MobilenetV1/Conv2d_2_depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 48
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_depthwise/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "MobilenetV1/Conv2d_2_depthwise/depthwise_weights/Initializer/truncated_normal/mul"
  input: "MobilenetV1/Conv2d_2_depthwise/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 48
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 48
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 48
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_2_depthwise/depthwise_weights"
  input: "MobilenetV1/Conv2d_2_depthwise/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 48
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_2_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 48
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_2_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\0000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_2_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_2_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "MobilenetV1/MobilenetV1/Conv2d_1_pointwise/Relu6"
  input: "MobilenetV1/Conv2d_2_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_depthwise/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 48
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_depthwise/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_depthwise/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "MobilenetV1/Conv2d_2_depthwise/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "MobilenetV1/Conv2d_2_depthwise/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_depthwise/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_depthwise/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_2_depthwise/BatchNorm/gamma"
  input: "MobilenetV1/Conv2d_2_depthwise/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_depthwise/BatchNorm/gamma/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_2_depthwise/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_depthwise/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 48
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_depthwise/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_depthwise/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "MobilenetV1/Conv2d_2_depthwise/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "MobilenetV1/Conv2d_2_depthwise/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_depthwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_depthwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_2_depthwise/BatchNorm/beta"
  input: "MobilenetV1/Conv2d_2_depthwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_2_depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_depthwise/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 48
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_depthwise/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_depthwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "MobilenetV1/Conv2d_2_depthwise/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "MobilenetV1/Conv2d_2_depthwise/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_depthwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_depthwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_2_depthwise/BatchNorm/moving_mean"
  input: "MobilenetV1/Conv2d_2_depthwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_2_depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_depthwise/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 48
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_depthwise/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_depthwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "MobilenetV1/Conv2d_2_depthwise/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "MobilenetV1/Conv2d_2_depthwise/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_depthwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_depthwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_2_depthwise/BatchNorm/moving_variance"
  input: "MobilenetV1/Conv2d_2_depthwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_2_depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_2_depthwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_2_depthwise/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_2_depthwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "MobilenetV1/MobilenetV1/Conv2d_2_depthwise/depthwise"
  input: "MobilenetV1/Conv2d_2_depthwise/BatchNorm/gamma/read"
  input: "MobilenetV1/Conv2d_2_depthwise/BatchNorm/beta/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_2_depthwise/BatchNorm/Const"
  input: "MobilenetV1/MobilenetV1/Conv2d_2_depthwise/BatchNorm/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 48
          }
        }
        shape {
          dim {
            size: 48
          }
        }
        shape {
          dim {
            size: 48
          }
        }
        shape {
          dim {
            size: 48
          }
        }
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_2_depthwise/BatchNorm/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0003000000142492354
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_2_depthwise/BatchNorm/AssignMovingAvg/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_2_depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_2_depthwise/BatchNorm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_2_depthwise/BatchNorm/AssignMovingAvg/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_2_depthwise/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_2_depthwise/BatchNorm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "MobilenetV1/MobilenetV1/Conv2d_2_depthwise/BatchNorm/AssignMovingAvg/Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_2_depthwise/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_2_depthwise/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "MobilenetV1/Conv2d_2_depthwise/BatchNorm/moving_mean"
  input: "MobilenetV1/MobilenetV1/Conv2d_2_depthwise/BatchNorm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_2_depthwise/BatchNorm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_2_depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_2_depthwise/BatchNorm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_2_depthwise/BatchNorm/AssignMovingAvg_1/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_2_depthwise/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_2_depthwise/BatchNorm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "MobilenetV1/MobilenetV1/Conv2d_2_depthwise/BatchNorm/AssignMovingAvg_1/Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_2_depthwise/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_2_depthwise/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "MobilenetV1/Conv2d_2_depthwise/BatchNorm/moving_variance"
  input: "MobilenetV1/MobilenetV1/Conv2d_2_depthwise/BatchNorm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_2_depthwise/Relu6"
  op: "Relu6"
  input: "MobilenetV1/MobilenetV1/Conv2d_2_depthwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_pointwise/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\0000\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_pointwise/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_pointwise/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_pointwise/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "MobilenetV1/Conv2d_2_pointwise/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 48
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_pointwise/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "MobilenetV1/Conv2d_2_pointwise/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "MobilenetV1/Conv2d_2_pointwise/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 48
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_pointwise/weights/Initializer/truncated_normal"
  op: "Add"
  input: "MobilenetV1/Conv2d_2_pointwise/weights/Initializer/truncated_normal/mul"
  input: "MobilenetV1/Conv2d_2_pointwise/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 48
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_pointwise/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 48
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 48
        }
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_pointwise/weights/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_2_pointwise/weights"
  input: "MobilenetV1/Conv2d_2_pointwise/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 48
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_pointwise/weights/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_2_pointwise/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 48
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_2_pointwise/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_2_pointwise/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "MobilenetV1/Conv2d_2_pointwise/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_2_pointwise/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "MobilenetV1/MobilenetV1/Conv2d_2_pointwise/kernel/Regularizer/l2_regularizer/scale"
  input: "MobilenetV1/MobilenetV1/Conv2d_2_pointwise/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_2_pointwise/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_2_pointwise/Conv2D"
  op: "Conv2D"
  input: "MobilenetV1/MobilenetV1/Conv2d_2_depthwise/Relu6"
  input: "MobilenetV1/Conv2d_2_pointwise/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 96
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/gamma"
  input: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/gamma/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 96
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/beta"
  input: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/beta/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 96
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_mean"
  input: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 96
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_variance"
  input: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_2_pointwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_2_pointwise/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_2_pointwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "MobilenetV1/MobilenetV1/Conv2d_2_pointwise/Conv2D"
  input: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/gamma/read"
  input: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/beta/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_2_pointwise/BatchNorm/Const"
  input: "MobilenetV1/MobilenetV1/Conv2d_2_pointwise/BatchNorm/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 96
          }
        }
        shape {
          dim {
            size: 96
          }
        }
        shape {
          dim {
            size: 96
          }
        }
        shape {
          dim {
            size: 96
          }
        }
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_2_pointwise/BatchNorm/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0003000000142492354
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_2_pointwise/BatchNorm/AssignMovingAvg/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_2_pointwise/BatchNorm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_2_pointwise/BatchNorm/AssignMovingAvg/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_2_pointwise/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_2_pointwise/BatchNorm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "MobilenetV1/MobilenetV1/Conv2d_2_pointwise/BatchNorm/AssignMovingAvg/Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_2_pointwise/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_2_pointwise/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_mean"
  input: "MobilenetV1/MobilenetV1/Conv2d_2_pointwise/BatchNorm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_2_pointwise/BatchNorm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_2_pointwise/BatchNorm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_2_pointwise/BatchNorm/AssignMovingAvg_1/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_2_pointwise/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_2_pointwise/BatchNorm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "MobilenetV1/MobilenetV1/Conv2d_2_pointwise/BatchNorm/AssignMovingAvg_1/Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_2_pointwise/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_2_pointwise/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_variance"
  input: "MobilenetV1/MobilenetV1/Conv2d_2_pointwise/BatchNorm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_2_pointwise/Relu6"
  op: "Relu6"
  input: "MobilenetV1/MobilenetV1/Conv2d_2_pointwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_depthwise/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_depthwise/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "MobilenetV1/Conv2d_3_depthwise/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_depthwise/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "MobilenetV1/Conv2d_3_depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "MobilenetV1/Conv2d_3_depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_depthwise/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "MobilenetV1/Conv2d_3_depthwise/depthwise_weights/Initializer/truncated_normal/mul"
  input: "MobilenetV1/Conv2d_3_depthwise/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 96
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_3_depthwise/depthwise_weights"
  input: "MobilenetV1/Conv2d_3_depthwise/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_3_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_3_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_3_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_3_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "MobilenetV1/MobilenetV1/Conv2d_2_pointwise/Relu6"
  input: "MobilenetV1/Conv2d_3_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_depthwise/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 96
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_depthwise/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_depthwise/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "MobilenetV1/Conv2d_3_depthwise/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "MobilenetV1/Conv2d_3_depthwise/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_depthwise/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_depthwise/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_3_depthwise/BatchNorm/gamma"
  input: "MobilenetV1/Conv2d_3_depthwise/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_depthwise/BatchNorm/gamma/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_3_depthwise/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_depthwise/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 96
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_depthwise/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_depthwise/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "MobilenetV1/Conv2d_3_depthwise/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "MobilenetV1/Conv2d_3_depthwise/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_depthwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_depthwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_3_depthwise/BatchNorm/beta"
  input: "MobilenetV1/Conv2d_3_depthwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_3_depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_depthwise/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 96
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_depthwise/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_depthwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "MobilenetV1/Conv2d_3_depthwise/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "MobilenetV1/Conv2d_3_depthwise/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_depthwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_depthwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_3_depthwise/BatchNorm/moving_mean"
  input: "MobilenetV1/Conv2d_3_depthwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_3_depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_depthwise/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 96
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_depthwise/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_depthwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "MobilenetV1/Conv2d_3_depthwise/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "MobilenetV1/Conv2d_3_depthwise/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_depthwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_depthwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_3_depthwise/BatchNorm/moving_variance"
  input: "MobilenetV1/Conv2d_3_depthwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_3_depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_3_depthwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_3_depthwise/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_3_depthwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "MobilenetV1/MobilenetV1/Conv2d_3_depthwise/depthwise"
  input: "MobilenetV1/Conv2d_3_depthwise/BatchNorm/gamma/read"
  input: "MobilenetV1/Conv2d_3_depthwise/BatchNorm/beta/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_3_depthwise/BatchNorm/Const"
  input: "MobilenetV1/MobilenetV1/Conv2d_3_depthwise/BatchNorm/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 96
          }
        }
        shape {
          dim {
            size: 96
          }
        }
        shape {
          dim {
            size: 96
          }
        }
        shape {
          dim {
            size: 96
          }
        }
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_3_depthwise/BatchNorm/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0003000000142492354
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_3_depthwise/BatchNorm/AssignMovingAvg/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_3_depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_3_depthwise/BatchNorm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_3_depthwise/BatchNorm/AssignMovingAvg/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_3_depthwise/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_3_depthwise/BatchNorm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "MobilenetV1/MobilenetV1/Conv2d_3_depthwise/BatchNorm/AssignMovingAvg/Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_3_depthwise/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_3_depthwise/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "MobilenetV1/Conv2d_3_depthwise/BatchNorm/moving_mean"
  input: "MobilenetV1/MobilenetV1/Conv2d_3_depthwise/BatchNorm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_3_depthwise/BatchNorm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_3_depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_3_depthwise/BatchNorm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_3_depthwise/BatchNorm/AssignMovingAvg_1/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_3_depthwise/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_3_depthwise/BatchNorm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "MobilenetV1/MobilenetV1/Conv2d_3_depthwise/BatchNorm/AssignMovingAvg_1/Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_3_depthwise/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_3_depthwise/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "MobilenetV1/Conv2d_3_depthwise/BatchNorm/moving_variance"
  input: "MobilenetV1/MobilenetV1/Conv2d_3_depthwise/BatchNorm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_3_depthwise/Relu6"
  op: "Relu6"
  input: "MobilenetV1/MobilenetV1/Conv2d_3_depthwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_pointwise/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_pointwise/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_pointwise/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_pointwise/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "MobilenetV1/Conv2d_3_pointwise/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_pointwise/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "MobilenetV1/Conv2d_3_pointwise/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "MobilenetV1/Conv2d_3_pointwise/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_pointwise/weights/Initializer/truncated_normal"
  op: "Add"
  input: "MobilenetV1/Conv2d_3_pointwise/weights/Initializer/truncated_normal/mul"
  input: "MobilenetV1/Conv2d_3_pointwise/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_pointwise/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 96
        }
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_pointwise/weights/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_3_pointwise/weights"
  input: "MobilenetV1/Conv2d_3_pointwise/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_pointwise/weights/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_3_pointwise/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_3_pointwise/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_3_pointwise/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "MobilenetV1/Conv2d_3_pointwise/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_3_pointwise/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "MobilenetV1/MobilenetV1/Conv2d_3_pointwise/kernel/Regularizer/l2_regularizer/scale"
  input: "MobilenetV1/MobilenetV1/Conv2d_3_pointwise/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_3_pointwise/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_3_pointwise/Conv2D"
  op: "Conv2D"
  input: "MobilenetV1/MobilenetV1/Conv2d_3_depthwise/Relu6"
  input: "MobilenetV1/Conv2d_3_pointwise/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 96
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/gamma"
  input: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/gamma/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 96
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/beta"
  input: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/beta/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 96
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_mean"
  input: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 96
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_variance"
  input: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_3_pointwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_3_pointwise/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_3_pointwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "MobilenetV1/MobilenetV1/Conv2d_3_pointwise/Conv2D"
  input: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/gamma/read"
  input: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/beta/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_3_pointwise/BatchNorm/Const"
  input: "MobilenetV1/MobilenetV1/Conv2d_3_pointwise/BatchNorm/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 96
          }
        }
        shape {
          dim {
            size: 96
          }
        }
        shape {
          dim {
            size: 96
          }
        }
        shape {
          dim {
            size: 96
          }
        }
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_3_pointwise/BatchNorm/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0003000000142492354
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_3_pointwise/BatchNorm/AssignMovingAvg/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_3_pointwise/BatchNorm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_3_pointwise/BatchNorm/AssignMovingAvg/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_3_pointwise/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_3_pointwise/BatchNorm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "MobilenetV1/MobilenetV1/Conv2d_3_pointwise/BatchNorm/AssignMovingAvg/Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_3_pointwise/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_3_pointwise/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_mean"
  input: "MobilenetV1/MobilenetV1/Conv2d_3_pointwise/BatchNorm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_3_pointwise/BatchNorm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_3_pointwise/BatchNorm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_3_pointwise/BatchNorm/AssignMovingAvg_1/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_3_pointwise/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_3_pointwise/BatchNorm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "MobilenetV1/MobilenetV1/Conv2d_3_pointwise/BatchNorm/AssignMovingAvg_1/Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_3_pointwise/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_3_pointwise/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_variance"
  input: "MobilenetV1/MobilenetV1/Conv2d_3_pointwise/BatchNorm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_3_pointwise/Relu6"
  op: "Relu6"
  input: "MobilenetV1/MobilenetV1/Conv2d_3_pointwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_depthwise/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_depthwise/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "MobilenetV1/Conv2d_4_depthwise/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_depthwise/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "MobilenetV1/Conv2d_4_depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "MobilenetV1/Conv2d_4_depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_depthwise/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "MobilenetV1/Conv2d_4_depthwise/depthwise_weights/Initializer/truncated_normal/mul"
  input: "MobilenetV1/Conv2d_4_depthwise/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 96
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_4_depthwise/depthwise_weights"
  input: "MobilenetV1/Conv2d_4_depthwise/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_4_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_4_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_4_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_4_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "MobilenetV1/MobilenetV1/Conv2d_3_pointwise/Relu6"
  input: "MobilenetV1/Conv2d_4_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_depthwise/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 96
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_depthwise/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_depthwise/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "MobilenetV1/Conv2d_4_depthwise/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "MobilenetV1/Conv2d_4_depthwise/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_depthwise/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_depthwise/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_4_depthwise/BatchNorm/gamma"
  input: "MobilenetV1/Conv2d_4_depthwise/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_depthwise/BatchNorm/gamma/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_4_depthwise/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_depthwise/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 96
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_depthwise/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_depthwise/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "MobilenetV1/Conv2d_4_depthwise/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "MobilenetV1/Conv2d_4_depthwise/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_depthwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_depthwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_4_depthwise/BatchNorm/beta"
  input: "MobilenetV1/Conv2d_4_depthwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_4_depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_depthwise/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 96
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_depthwise/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_depthwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "MobilenetV1/Conv2d_4_depthwise/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "MobilenetV1/Conv2d_4_depthwise/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_depthwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_depthwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_4_depthwise/BatchNorm/moving_mean"
  input: "MobilenetV1/Conv2d_4_depthwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_4_depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_depthwise/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 96
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_depthwise/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_depthwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "MobilenetV1/Conv2d_4_depthwise/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "MobilenetV1/Conv2d_4_depthwise/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_depthwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_depthwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_4_depthwise/BatchNorm/moving_variance"
  input: "MobilenetV1/Conv2d_4_depthwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_4_depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_4_depthwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_4_depthwise/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_4_depthwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "MobilenetV1/MobilenetV1/Conv2d_4_depthwise/depthwise"
  input: "MobilenetV1/Conv2d_4_depthwise/BatchNorm/gamma/read"
  input: "MobilenetV1/Conv2d_4_depthwise/BatchNorm/beta/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_4_depthwise/BatchNorm/Const"
  input: "MobilenetV1/MobilenetV1/Conv2d_4_depthwise/BatchNorm/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 96
          }
        }
        shape {
          dim {
            size: 96
          }
        }
        shape {
          dim {
            size: 96
          }
        }
        shape {
          dim {
            size: 96
          }
        }
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_4_depthwise/BatchNorm/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0003000000142492354
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_4_depthwise/BatchNorm/AssignMovingAvg/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_4_depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_4_depthwise/BatchNorm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_4_depthwise/BatchNorm/AssignMovingAvg/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_4_depthwise/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_4_depthwise/BatchNorm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "MobilenetV1/MobilenetV1/Conv2d_4_depthwise/BatchNorm/AssignMovingAvg/Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_4_depthwise/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_4_depthwise/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "MobilenetV1/Conv2d_4_depthwise/BatchNorm/moving_mean"
  input: "MobilenetV1/MobilenetV1/Conv2d_4_depthwise/BatchNorm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_4_depthwise/BatchNorm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_4_depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_4_depthwise/BatchNorm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_4_depthwise/BatchNorm/AssignMovingAvg_1/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_4_depthwise/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_4_depthwise/BatchNorm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "MobilenetV1/MobilenetV1/Conv2d_4_depthwise/BatchNorm/AssignMovingAvg_1/Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_4_depthwise/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_4_depthwise/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "MobilenetV1/Conv2d_4_depthwise/BatchNorm/moving_variance"
  input: "MobilenetV1/MobilenetV1/Conv2d_4_depthwise/BatchNorm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_4_depthwise/Relu6"
  op: "Relu6"
  input: "MobilenetV1/MobilenetV1/Conv2d_4_depthwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_pointwise/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_pointwise/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_pointwise/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_pointwise/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "MobilenetV1/Conv2d_4_pointwise/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_pointwise/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "MobilenetV1/Conv2d_4_pointwise/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "MobilenetV1/Conv2d_4_pointwise/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_pointwise/weights/Initializer/truncated_normal"
  op: "Add"
  input: "MobilenetV1/Conv2d_4_pointwise/weights/Initializer/truncated_normal/mul"
  input: "MobilenetV1/Conv2d_4_pointwise/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_pointwise/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 96
        }
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_pointwise/weights/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_4_pointwise/weights"
  input: "MobilenetV1/Conv2d_4_pointwise/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_pointwise/weights/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_4_pointwise/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_4_pointwise/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_4_pointwise/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "MobilenetV1/Conv2d_4_pointwise/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_4_pointwise/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "MobilenetV1/MobilenetV1/Conv2d_4_pointwise/kernel/Regularizer/l2_regularizer/scale"
  input: "MobilenetV1/MobilenetV1/Conv2d_4_pointwise/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_4_pointwise/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_4_pointwise/Conv2D"
  op: "Conv2D"
  input: "MobilenetV1/MobilenetV1/Conv2d_4_depthwise/Relu6"
  input: "MobilenetV1/Conv2d_4_pointwise/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 192
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/gamma"
  input: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/gamma/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 192
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/beta"
  input: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/beta/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 192
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_mean"
  input: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 192
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_variance"
  input: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_4_pointwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_4_pointwise/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_4_pointwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "MobilenetV1/MobilenetV1/Conv2d_4_pointwise/Conv2D"
  input: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/gamma/read"
  input: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/beta/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_4_pointwise/BatchNorm/Const"
  input: "MobilenetV1/MobilenetV1/Conv2d_4_pointwise/BatchNorm/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 192
          }
        }
        shape {
          dim {
            size: 192
          }
        }
        shape {
          dim {
            size: 192
          }
        }
        shape {
          dim {
            size: 192
          }
        }
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_4_pointwise/BatchNorm/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0003000000142492354
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_4_pointwise/BatchNorm/AssignMovingAvg/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_4_pointwise/BatchNorm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_4_pointwise/BatchNorm/AssignMovingAvg/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_4_pointwise/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_4_pointwise/BatchNorm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "MobilenetV1/MobilenetV1/Conv2d_4_pointwise/BatchNorm/AssignMovingAvg/Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_4_pointwise/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_4_pointwise/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_mean"
  input: "MobilenetV1/MobilenetV1/Conv2d_4_pointwise/BatchNorm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_4_pointwise/BatchNorm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_4_pointwise/BatchNorm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_4_pointwise/BatchNorm/AssignMovingAvg_1/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_4_pointwise/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_4_pointwise/BatchNorm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "MobilenetV1/MobilenetV1/Conv2d_4_pointwise/BatchNorm/AssignMovingAvg_1/Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_4_pointwise/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_4_pointwise/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_variance"
  input: "MobilenetV1/MobilenetV1/Conv2d_4_pointwise/BatchNorm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_4_pointwise/Relu6"
  op: "Relu6"
  input: "MobilenetV1/MobilenetV1/Conv2d_4_pointwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_depthwise/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_depthwise/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "MobilenetV1/Conv2d_5_depthwise/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 192
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_depthwise/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "MobilenetV1/Conv2d_5_depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "MobilenetV1/Conv2d_5_depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 192
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_depthwise/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "MobilenetV1/Conv2d_5_depthwise/depthwise_weights/Initializer/truncated_normal/mul"
  input: "MobilenetV1/Conv2d_5_depthwise/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 192
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 192
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 192
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_5_depthwise/depthwise_weights"
  input: "MobilenetV1/Conv2d_5_depthwise/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 192
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_5_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 192
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_5_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_5_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_5_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "MobilenetV1/MobilenetV1/Conv2d_4_pointwise/Relu6"
  input: "MobilenetV1/Conv2d_5_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_depthwise/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 192
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_depthwise/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_depthwise/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "MobilenetV1/Conv2d_5_depthwise/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "MobilenetV1/Conv2d_5_depthwise/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_depthwise/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_depthwise/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_5_depthwise/BatchNorm/gamma"
  input: "MobilenetV1/Conv2d_5_depthwise/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_depthwise/BatchNorm/gamma/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_5_depthwise/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_depthwise/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 192
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_depthwise/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_depthwise/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "MobilenetV1/Conv2d_5_depthwise/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "MobilenetV1/Conv2d_5_depthwise/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_depthwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_depthwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_5_depthwise/BatchNorm/beta"
  input: "MobilenetV1/Conv2d_5_depthwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_5_depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_depthwise/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 192
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_depthwise/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_depthwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "MobilenetV1/Conv2d_5_depthwise/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "MobilenetV1/Conv2d_5_depthwise/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_depthwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_depthwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_5_depthwise/BatchNorm/moving_mean"
  input: "MobilenetV1/Conv2d_5_depthwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_5_depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_depthwise/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 192
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_depthwise/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_depthwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "MobilenetV1/Conv2d_5_depthwise/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "MobilenetV1/Conv2d_5_depthwise/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_depthwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_depthwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_5_depthwise/BatchNorm/moving_variance"
  input: "MobilenetV1/Conv2d_5_depthwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_5_depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_5_depthwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_5_depthwise/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_5_depthwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "MobilenetV1/MobilenetV1/Conv2d_5_depthwise/depthwise"
  input: "MobilenetV1/Conv2d_5_depthwise/BatchNorm/gamma/read"
  input: "MobilenetV1/Conv2d_5_depthwise/BatchNorm/beta/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_5_depthwise/BatchNorm/Const"
  input: "MobilenetV1/MobilenetV1/Conv2d_5_depthwise/BatchNorm/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 192
          }
        }
        shape {
          dim {
            size: 192
          }
        }
        shape {
          dim {
            size: 192
          }
        }
        shape {
          dim {
            size: 192
          }
        }
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_5_depthwise/BatchNorm/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0003000000142492354
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_5_depthwise/BatchNorm/AssignMovingAvg/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_5_depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_5_depthwise/BatchNorm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_5_depthwise/BatchNorm/AssignMovingAvg/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_5_depthwise/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_5_depthwise/BatchNorm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "MobilenetV1/MobilenetV1/Conv2d_5_depthwise/BatchNorm/AssignMovingAvg/Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_5_depthwise/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_5_depthwise/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "MobilenetV1/Conv2d_5_depthwise/BatchNorm/moving_mean"
  input: "MobilenetV1/MobilenetV1/Conv2d_5_depthwise/BatchNorm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_5_depthwise/BatchNorm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_5_depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_5_depthwise/BatchNorm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_5_depthwise/BatchNorm/AssignMovingAvg_1/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_5_depthwise/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_5_depthwise/BatchNorm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "MobilenetV1/MobilenetV1/Conv2d_5_depthwise/BatchNorm/AssignMovingAvg_1/Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_5_depthwise/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_5_depthwise/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "MobilenetV1/Conv2d_5_depthwise/BatchNorm/moving_variance"
  input: "MobilenetV1/MobilenetV1/Conv2d_5_depthwise/BatchNorm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_5_depthwise/Relu6"
  op: "Relu6"
  input: "MobilenetV1/MobilenetV1/Conv2d_5_depthwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_pointwise/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\300\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_pointwise/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_pointwise/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_pointwise/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "MobilenetV1/Conv2d_5_pointwise/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 192
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_pointwise/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "MobilenetV1/Conv2d_5_pointwise/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "MobilenetV1/Conv2d_5_pointwise/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 192
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_pointwise/weights/Initializer/truncated_normal"
  op: "Add"
  input: "MobilenetV1/Conv2d_5_pointwise/weights/Initializer/truncated_normal/mul"
  input: "MobilenetV1/Conv2d_5_pointwise/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 192
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_pointwise/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 192
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 192
        }
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_pointwise/weights/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_5_pointwise/weights"
  input: "MobilenetV1/Conv2d_5_pointwise/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 192
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_pointwise/weights/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_5_pointwise/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 192
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_5_pointwise/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_5_pointwise/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "MobilenetV1/Conv2d_5_pointwise/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_5_pointwise/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "MobilenetV1/MobilenetV1/Conv2d_5_pointwise/kernel/Regularizer/l2_regularizer/scale"
  input: "MobilenetV1/MobilenetV1/Conv2d_5_pointwise/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_5_pointwise/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_5_pointwise/Conv2D"
  op: "Conv2D"
  input: "MobilenetV1/MobilenetV1/Conv2d_5_depthwise/Relu6"
  input: "MobilenetV1/Conv2d_5_pointwise/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 192
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/gamma"
  input: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/gamma/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 192
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/beta"
  input: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/beta/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 192
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_mean"
  input: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 192
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_variance"
  input: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_5_pointwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_5_pointwise/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_5_pointwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "MobilenetV1/MobilenetV1/Conv2d_5_pointwise/Conv2D"
  input: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/gamma/read"
  input: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/beta/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_5_pointwise/BatchNorm/Const"
  input: "MobilenetV1/MobilenetV1/Conv2d_5_pointwise/BatchNorm/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 192
          }
        }
        shape {
          dim {
            size: 192
          }
        }
        shape {
          dim {
            size: 192
          }
        }
        shape {
          dim {
            size: 192
          }
        }
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_5_pointwise/BatchNorm/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0003000000142492354
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_5_pointwise/BatchNorm/AssignMovingAvg/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_5_pointwise/BatchNorm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_5_pointwise/BatchNorm/AssignMovingAvg/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_5_pointwise/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_5_pointwise/BatchNorm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "MobilenetV1/MobilenetV1/Conv2d_5_pointwise/BatchNorm/AssignMovingAvg/Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_5_pointwise/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_5_pointwise/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_mean"
  input: "MobilenetV1/MobilenetV1/Conv2d_5_pointwise/BatchNorm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_5_pointwise/BatchNorm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_5_pointwise/BatchNorm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_5_pointwise/BatchNorm/AssignMovingAvg_1/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_5_pointwise/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_5_pointwise/BatchNorm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "MobilenetV1/MobilenetV1/Conv2d_5_pointwise/BatchNorm/AssignMovingAvg_1/Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_5_pointwise/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_5_pointwise/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_variance"
  input: "MobilenetV1/MobilenetV1/Conv2d_5_pointwise/BatchNorm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_5_pointwise/Relu6"
  op: "Relu6"
  input: "MobilenetV1/MobilenetV1/Conv2d_5_pointwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_depthwise/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_depthwise/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "MobilenetV1/Conv2d_6_depthwise/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 192
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_depthwise/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "MobilenetV1/Conv2d_6_depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "MobilenetV1/Conv2d_6_depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 192
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_depthwise/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "MobilenetV1/Conv2d_6_depthwise/depthwise_weights/Initializer/truncated_normal/mul"
  input: "MobilenetV1/Conv2d_6_depthwise/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 192
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 192
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 192
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_6_depthwise/depthwise_weights"
  input: "MobilenetV1/Conv2d_6_depthwise/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 192
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_6_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 192
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_6_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_6_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_6_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "MobilenetV1/MobilenetV1/Conv2d_5_pointwise/Relu6"
  input: "MobilenetV1/Conv2d_6_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_depthwise/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 192
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_depthwise/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_depthwise/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "MobilenetV1/Conv2d_6_depthwise/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "MobilenetV1/Conv2d_6_depthwise/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_depthwise/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_depthwise/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_6_depthwise/BatchNorm/gamma"
  input: "MobilenetV1/Conv2d_6_depthwise/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_depthwise/BatchNorm/gamma/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_6_depthwise/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_depthwise/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 192
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_depthwise/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_depthwise/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "MobilenetV1/Conv2d_6_depthwise/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "MobilenetV1/Conv2d_6_depthwise/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_depthwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_depthwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_6_depthwise/BatchNorm/beta"
  input: "MobilenetV1/Conv2d_6_depthwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_6_depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_depthwise/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 192
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_depthwise/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_depthwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "MobilenetV1/Conv2d_6_depthwise/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "MobilenetV1/Conv2d_6_depthwise/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_depthwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_depthwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_6_depthwise/BatchNorm/moving_mean"
  input: "MobilenetV1/Conv2d_6_depthwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_6_depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_depthwise/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 192
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_depthwise/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_depthwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "MobilenetV1/Conv2d_6_depthwise/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "MobilenetV1/Conv2d_6_depthwise/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_depthwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_depthwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_6_depthwise/BatchNorm/moving_variance"
  input: "MobilenetV1/Conv2d_6_depthwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_6_depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_6_depthwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_6_depthwise/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_6_depthwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "MobilenetV1/MobilenetV1/Conv2d_6_depthwise/depthwise"
  input: "MobilenetV1/Conv2d_6_depthwise/BatchNorm/gamma/read"
  input: "MobilenetV1/Conv2d_6_depthwise/BatchNorm/beta/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_6_depthwise/BatchNorm/Const"
  input: "MobilenetV1/MobilenetV1/Conv2d_6_depthwise/BatchNorm/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 192
          }
        }
        shape {
          dim {
            size: 192
          }
        }
        shape {
          dim {
            size: 192
          }
        }
        shape {
          dim {
            size: 192
          }
        }
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_6_depthwise/BatchNorm/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0003000000142492354
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_6_depthwise/BatchNorm/AssignMovingAvg/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_6_depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_6_depthwise/BatchNorm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_6_depthwise/BatchNorm/AssignMovingAvg/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_6_depthwise/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_6_depthwise/BatchNorm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "MobilenetV1/MobilenetV1/Conv2d_6_depthwise/BatchNorm/AssignMovingAvg/Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_6_depthwise/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_6_depthwise/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "MobilenetV1/Conv2d_6_depthwise/BatchNorm/moving_mean"
  input: "MobilenetV1/MobilenetV1/Conv2d_6_depthwise/BatchNorm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_6_depthwise/BatchNorm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_6_depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_6_depthwise/BatchNorm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_6_depthwise/BatchNorm/AssignMovingAvg_1/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_6_depthwise/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_6_depthwise/BatchNorm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "MobilenetV1/MobilenetV1/Conv2d_6_depthwise/BatchNorm/AssignMovingAvg_1/Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_6_depthwise/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_6_depthwise/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "MobilenetV1/Conv2d_6_depthwise/BatchNorm/moving_variance"
  input: "MobilenetV1/MobilenetV1/Conv2d_6_depthwise/BatchNorm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_6_depthwise/Relu6"
  op: "Relu6"
  input: "MobilenetV1/MobilenetV1/Conv2d_6_depthwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_pointwise/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\300\000\000\000\200\001\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_pointwise/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_pointwise/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_pointwise/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "MobilenetV1/Conv2d_6_pointwise/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 192
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_pointwise/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "MobilenetV1/Conv2d_6_pointwise/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "MobilenetV1/Conv2d_6_pointwise/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 192
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_pointwise/weights/Initializer/truncated_normal"
  op: "Add"
  input: "MobilenetV1/Conv2d_6_pointwise/weights/Initializer/truncated_normal/mul"
  input: "MobilenetV1/Conv2d_6_pointwise/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 192
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_pointwise/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 192
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 192
        }
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_pointwise/weights/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_6_pointwise/weights"
  input: "MobilenetV1/Conv2d_6_pointwise/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 192
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_pointwise/weights/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_6_pointwise/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 192
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_6_pointwise/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_6_pointwise/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "MobilenetV1/Conv2d_6_pointwise/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_6_pointwise/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "MobilenetV1/MobilenetV1/Conv2d_6_pointwise/kernel/Regularizer/l2_regularizer/scale"
  input: "MobilenetV1/MobilenetV1/Conv2d_6_pointwise/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_6_pointwise/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_6_pointwise/Conv2D"
  op: "Conv2D"
  input: "MobilenetV1/MobilenetV1/Conv2d_6_depthwise/Relu6"
  input: "MobilenetV1/Conv2d_6_pointwise/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/gamma"
  input: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/gamma/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/beta"
  input: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/beta/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_mean"
  input: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_variance"
  input: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_6_pointwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_6_pointwise/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_6_pointwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "MobilenetV1/MobilenetV1/Conv2d_6_pointwise/Conv2D"
  input: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/gamma/read"
  input: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/beta/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_6_pointwise/BatchNorm/Const"
  input: "MobilenetV1/MobilenetV1/Conv2d_6_pointwise/BatchNorm/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 384
          }
        }
        shape {
          dim {
            size: 384
          }
        }
        shape {
          dim {
            size: 384
          }
        }
        shape {
          dim {
            size: 384
          }
        }
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_6_pointwise/BatchNorm/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0003000000142492354
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_6_pointwise/BatchNorm/AssignMovingAvg/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_6_pointwise/BatchNorm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_6_pointwise/BatchNorm/AssignMovingAvg/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_6_pointwise/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_6_pointwise/BatchNorm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "MobilenetV1/MobilenetV1/Conv2d_6_pointwise/BatchNorm/AssignMovingAvg/Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_6_pointwise/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_6_pointwise/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_mean"
  input: "MobilenetV1/MobilenetV1/Conv2d_6_pointwise/BatchNorm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_6_pointwise/BatchNorm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_6_pointwise/BatchNorm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_6_pointwise/BatchNorm/AssignMovingAvg_1/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_6_pointwise/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_6_pointwise/BatchNorm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "MobilenetV1/MobilenetV1/Conv2d_6_pointwise/BatchNorm/AssignMovingAvg_1/Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_6_pointwise/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_6_pointwise/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_variance"
  input: "MobilenetV1/MobilenetV1/Conv2d_6_pointwise/BatchNorm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_6_pointwise/Relu6"
  op: "Relu6"
  input: "MobilenetV1/MobilenetV1/Conv2d_6_pointwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_depthwise/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_depthwise/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "MobilenetV1/Conv2d_7_depthwise/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_depthwise/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "MobilenetV1/Conv2d_7_depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "MobilenetV1/Conv2d_7_depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_depthwise/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "MobilenetV1/Conv2d_7_depthwise/depthwise_weights/Initializer/truncated_normal/mul"
  input: "MobilenetV1/Conv2d_7_depthwise/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 384
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_7_depthwise/depthwise_weights"
  input: "MobilenetV1/Conv2d_7_depthwise/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_7_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_7_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_7_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_7_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "MobilenetV1/MobilenetV1/Conv2d_6_pointwise/Relu6"
  input: "MobilenetV1/Conv2d_7_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_depthwise/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_depthwise/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_depthwise/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "MobilenetV1/Conv2d_7_depthwise/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "MobilenetV1/Conv2d_7_depthwise/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_depthwise/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_depthwise/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_7_depthwise/BatchNorm/gamma"
  input: "MobilenetV1/Conv2d_7_depthwise/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_depthwise/BatchNorm/gamma/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_7_depthwise/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_depthwise/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_depthwise/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_depthwise/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "MobilenetV1/Conv2d_7_depthwise/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "MobilenetV1/Conv2d_7_depthwise/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_depthwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_depthwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_7_depthwise/BatchNorm/beta"
  input: "MobilenetV1/Conv2d_7_depthwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_7_depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_depthwise/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_depthwise/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_depthwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "MobilenetV1/Conv2d_7_depthwise/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "MobilenetV1/Conv2d_7_depthwise/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_depthwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_depthwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_7_depthwise/BatchNorm/moving_mean"
  input: "MobilenetV1/Conv2d_7_depthwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_7_depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_depthwise/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_depthwise/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_depthwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "MobilenetV1/Conv2d_7_depthwise/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "MobilenetV1/Conv2d_7_depthwise/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_depthwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_depthwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_7_depthwise/BatchNorm/moving_variance"
  input: "MobilenetV1/Conv2d_7_depthwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_7_depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_7_depthwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_7_depthwise/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_7_depthwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "MobilenetV1/MobilenetV1/Conv2d_7_depthwise/depthwise"
  input: "MobilenetV1/Conv2d_7_depthwise/BatchNorm/gamma/read"
  input: "MobilenetV1/Conv2d_7_depthwise/BatchNorm/beta/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_7_depthwise/BatchNorm/Const"
  input: "MobilenetV1/MobilenetV1/Conv2d_7_depthwise/BatchNorm/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 384
          }
        }
        shape {
          dim {
            size: 384
          }
        }
        shape {
          dim {
            size: 384
          }
        }
        shape {
          dim {
            size: 384
          }
        }
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_7_depthwise/BatchNorm/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0003000000142492354
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_7_depthwise/BatchNorm/AssignMovingAvg/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_7_depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_7_depthwise/BatchNorm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_7_depthwise/BatchNorm/AssignMovingAvg/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_7_depthwise/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_7_depthwise/BatchNorm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "MobilenetV1/MobilenetV1/Conv2d_7_depthwise/BatchNorm/AssignMovingAvg/Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_7_depthwise/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_7_depthwise/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "MobilenetV1/Conv2d_7_depthwise/BatchNorm/moving_mean"
  input: "MobilenetV1/MobilenetV1/Conv2d_7_depthwise/BatchNorm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_7_depthwise/BatchNorm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_7_depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_7_depthwise/BatchNorm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_7_depthwise/BatchNorm/AssignMovingAvg_1/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_7_depthwise/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_7_depthwise/BatchNorm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "MobilenetV1/MobilenetV1/Conv2d_7_depthwise/BatchNorm/AssignMovingAvg_1/Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_7_depthwise/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_7_depthwise/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "MobilenetV1/Conv2d_7_depthwise/BatchNorm/moving_variance"
  input: "MobilenetV1/MobilenetV1/Conv2d_7_depthwise/BatchNorm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_7_depthwise/Relu6"
  op: "Relu6"
  input: "MobilenetV1/MobilenetV1/Conv2d_7_depthwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_pointwise/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\001\000\000\200\001\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_pointwise/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_pointwise/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_pointwise/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "MobilenetV1/Conv2d_7_pointwise/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_pointwise/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "MobilenetV1/Conv2d_7_pointwise/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "MobilenetV1/Conv2d_7_pointwise/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_pointwise/weights/Initializer/truncated_normal"
  op: "Add"
  input: "MobilenetV1/Conv2d_7_pointwise/weights/Initializer/truncated_normal/mul"
  input: "MobilenetV1/Conv2d_7_pointwise/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_pointwise/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 384
        }
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_pointwise/weights/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_7_pointwise/weights"
  input: "MobilenetV1/Conv2d_7_pointwise/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_pointwise/weights/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_7_pointwise/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_7_pointwise/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_7_pointwise/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "MobilenetV1/Conv2d_7_pointwise/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_7_pointwise/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "MobilenetV1/MobilenetV1/Conv2d_7_pointwise/kernel/Regularizer/l2_regularizer/scale"
  input: "MobilenetV1/MobilenetV1/Conv2d_7_pointwise/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_7_pointwise/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_7_pointwise/Conv2D"
  op: "Conv2D"
  input: "MobilenetV1/MobilenetV1/Conv2d_7_depthwise/Relu6"
  input: "MobilenetV1/Conv2d_7_pointwise/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/gamma"
  input: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/gamma/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/beta"
  input: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/beta/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_mean"
  input: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_variance"
  input: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_7_pointwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_7_pointwise/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_7_pointwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "MobilenetV1/MobilenetV1/Conv2d_7_pointwise/Conv2D"
  input: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/gamma/read"
  input: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/beta/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_7_pointwise/BatchNorm/Const"
  input: "MobilenetV1/MobilenetV1/Conv2d_7_pointwise/BatchNorm/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 384
          }
        }
        shape {
          dim {
            size: 384
          }
        }
        shape {
          dim {
            size: 384
          }
        }
        shape {
          dim {
            size: 384
          }
        }
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_7_pointwise/BatchNorm/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0003000000142492354
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_7_pointwise/BatchNorm/AssignMovingAvg/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_7_pointwise/BatchNorm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_7_pointwise/BatchNorm/AssignMovingAvg/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_7_pointwise/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_7_pointwise/BatchNorm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "MobilenetV1/MobilenetV1/Conv2d_7_pointwise/BatchNorm/AssignMovingAvg/Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_7_pointwise/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_7_pointwise/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_mean"
  input: "MobilenetV1/MobilenetV1/Conv2d_7_pointwise/BatchNorm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_7_pointwise/BatchNorm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_7_pointwise/BatchNorm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_7_pointwise/BatchNorm/AssignMovingAvg_1/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_7_pointwise/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_7_pointwise/BatchNorm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "MobilenetV1/MobilenetV1/Conv2d_7_pointwise/BatchNorm/AssignMovingAvg_1/Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_7_pointwise/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_7_pointwise/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_variance"
  input: "MobilenetV1/MobilenetV1/Conv2d_7_pointwise/BatchNorm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_7_pointwise/Relu6"
  op: "Relu6"
  input: "MobilenetV1/MobilenetV1/Conv2d_7_pointwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_depthwise/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_depthwise/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "MobilenetV1/Conv2d_8_depthwise/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_depthwise/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "MobilenetV1/Conv2d_8_depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "MobilenetV1/Conv2d_8_depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_depthwise/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "MobilenetV1/Conv2d_8_depthwise/depthwise_weights/Initializer/truncated_normal/mul"
  input: "MobilenetV1/Conv2d_8_depthwise/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 384
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_8_depthwise/depthwise_weights"
  input: "MobilenetV1/Conv2d_8_depthwise/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_8_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_8_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_8_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_8_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "MobilenetV1/MobilenetV1/Conv2d_7_pointwise/Relu6"
  input: "MobilenetV1/Conv2d_8_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_depthwise/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_depthwise/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_depthwise/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "MobilenetV1/Conv2d_8_depthwise/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "MobilenetV1/Conv2d_8_depthwise/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_depthwise/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_depthwise/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_8_depthwise/BatchNorm/gamma"
  input: "MobilenetV1/Conv2d_8_depthwise/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_depthwise/BatchNorm/gamma/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_8_depthwise/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_depthwise/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_depthwise/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_depthwise/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "MobilenetV1/Conv2d_8_depthwise/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "MobilenetV1/Conv2d_8_depthwise/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_depthwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_depthwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_8_depthwise/BatchNorm/beta"
  input: "MobilenetV1/Conv2d_8_depthwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_8_depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_depthwise/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_depthwise/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_depthwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "MobilenetV1/Conv2d_8_depthwise/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "MobilenetV1/Conv2d_8_depthwise/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_depthwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_depthwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_8_depthwise/BatchNorm/moving_mean"
  input: "MobilenetV1/Conv2d_8_depthwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_8_depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_depthwise/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_depthwise/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_depthwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "MobilenetV1/Conv2d_8_depthwise/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "MobilenetV1/Conv2d_8_depthwise/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_depthwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_depthwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_8_depthwise/BatchNorm/moving_variance"
  input: "MobilenetV1/Conv2d_8_depthwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_8_depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_8_depthwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_8_depthwise/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_8_depthwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "MobilenetV1/MobilenetV1/Conv2d_8_depthwise/depthwise"
  input: "MobilenetV1/Conv2d_8_depthwise/BatchNorm/gamma/read"
  input: "MobilenetV1/Conv2d_8_depthwise/BatchNorm/beta/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_8_depthwise/BatchNorm/Const"
  input: "MobilenetV1/MobilenetV1/Conv2d_8_depthwise/BatchNorm/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 384
          }
        }
        shape {
          dim {
            size: 384
          }
        }
        shape {
          dim {
            size: 384
          }
        }
        shape {
          dim {
            size: 384
          }
        }
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_8_depthwise/BatchNorm/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0003000000142492354
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_8_depthwise/BatchNorm/AssignMovingAvg/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_8_depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_8_depthwise/BatchNorm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_8_depthwise/BatchNorm/AssignMovingAvg/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_8_depthwise/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_8_depthwise/BatchNorm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "MobilenetV1/MobilenetV1/Conv2d_8_depthwise/BatchNorm/AssignMovingAvg/Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_8_depthwise/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_8_depthwise/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "MobilenetV1/Conv2d_8_depthwise/BatchNorm/moving_mean"
  input: "MobilenetV1/MobilenetV1/Conv2d_8_depthwise/BatchNorm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_8_depthwise/BatchNorm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_8_depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_8_depthwise/BatchNorm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_8_depthwise/BatchNorm/AssignMovingAvg_1/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_8_depthwise/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_8_depthwise/BatchNorm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "MobilenetV1/MobilenetV1/Conv2d_8_depthwise/BatchNorm/AssignMovingAvg_1/Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_8_depthwise/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_8_depthwise/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "MobilenetV1/Conv2d_8_depthwise/BatchNorm/moving_variance"
  input: "MobilenetV1/MobilenetV1/Conv2d_8_depthwise/BatchNorm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_8_depthwise/Relu6"
  op: "Relu6"
  input: "MobilenetV1/MobilenetV1/Conv2d_8_depthwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_pointwise/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\001\000\000\200\001\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_pointwise/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_pointwise/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_pointwise/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "MobilenetV1/Conv2d_8_pointwise/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_pointwise/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "MobilenetV1/Conv2d_8_pointwise/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "MobilenetV1/Conv2d_8_pointwise/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_pointwise/weights/Initializer/truncated_normal"
  op: "Add"
  input: "MobilenetV1/Conv2d_8_pointwise/weights/Initializer/truncated_normal/mul"
  input: "MobilenetV1/Conv2d_8_pointwise/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_pointwise/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 384
        }
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_pointwise/weights/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_8_pointwise/weights"
  input: "MobilenetV1/Conv2d_8_pointwise/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_pointwise/weights/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_8_pointwise/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_8_pointwise/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_8_pointwise/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "MobilenetV1/Conv2d_8_pointwise/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_8_pointwise/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "MobilenetV1/MobilenetV1/Conv2d_8_pointwise/kernel/Regularizer/l2_regularizer/scale"
  input: "MobilenetV1/MobilenetV1/Conv2d_8_pointwise/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_8_pointwise/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_8_pointwise/Conv2D"
  op: "Conv2D"
  input: "MobilenetV1/MobilenetV1/Conv2d_8_depthwise/Relu6"
  input: "MobilenetV1/Conv2d_8_pointwise/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/gamma"
  input: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/gamma/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/beta"
  input: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/beta/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_mean"
  input: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_variance"
  input: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_8_pointwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_8_pointwise/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_8_pointwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "MobilenetV1/MobilenetV1/Conv2d_8_pointwise/Conv2D"
  input: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/gamma/read"
  input: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/beta/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_8_pointwise/BatchNorm/Const"
  input: "MobilenetV1/MobilenetV1/Conv2d_8_pointwise/BatchNorm/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 384
          }
        }
        shape {
          dim {
            size: 384
          }
        }
        shape {
          dim {
            size: 384
          }
        }
        shape {
          dim {
            size: 384
          }
        }
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_8_pointwise/BatchNorm/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0003000000142492354
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_8_pointwise/BatchNorm/AssignMovingAvg/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_8_pointwise/BatchNorm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_8_pointwise/BatchNorm/AssignMovingAvg/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_8_pointwise/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_8_pointwise/BatchNorm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "MobilenetV1/MobilenetV1/Conv2d_8_pointwise/BatchNorm/AssignMovingAvg/Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_8_pointwise/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_8_pointwise/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_mean"
  input: "MobilenetV1/MobilenetV1/Conv2d_8_pointwise/BatchNorm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_8_pointwise/BatchNorm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_8_pointwise/BatchNorm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_8_pointwise/BatchNorm/AssignMovingAvg_1/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_8_pointwise/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_8_pointwise/BatchNorm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "MobilenetV1/MobilenetV1/Conv2d_8_pointwise/BatchNorm/AssignMovingAvg_1/Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_8_pointwise/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_8_pointwise/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_variance"
  input: "MobilenetV1/MobilenetV1/Conv2d_8_pointwise/BatchNorm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_8_pointwise/Relu6"
  op: "Relu6"
  input: "MobilenetV1/MobilenetV1/Conv2d_8_pointwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_depthwise/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_depthwise/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "MobilenetV1/Conv2d_9_depthwise/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_depthwise/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "MobilenetV1/Conv2d_9_depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "MobilenetV1/Conv2d_9_depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_depthwise/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "MobilenetV1/Conv2d_9_depthwise/depthwise_weights/Initializer/truncated_normal/mul"
  input: "MobilenetV1/Conv2d_9_depthwise/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 384
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_9_depthwise/depthwise_weights"
  input: "MobilenetV1/Conv2d_9_depthwise/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_9_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_9_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_9_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_9_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "MobilenetV1/MobilenetV1/Conv2d_8_pointwise/Relu6"
  input: "MobilenetV1/Conv2d_9_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_depthwise/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_depthwise/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_depthwise/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "MobilenetV1/Conv2d_9_depthwise/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "MobilenetV1/Conv2d_9_depthwise/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_depthwise/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_depthwise/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_9_depthwise/BatchNorm/gamma"
  input: "MobilenetV1/Conv2d_9_depthwise/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_depthwise/BatchNorm/gamma/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_9_depthwise/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_depthwise/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_depthwise/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_depthwise/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "MobilenetV1/Conv2d_9_depthwise/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "MobilenetV1/Conv2d_9_depthwise/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_depthwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_depthwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_9_depthwise/BatchNorm/beta"
  input: "MobilenetV1/Conv2d_9_depthwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_9_depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_depthwise/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_depthwise/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_depthwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "MobilenetV1/Conv2d_9_depthwise/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "MobilenetV1/Conv2d_9_depthwise/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_depthwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_depthwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_9_depthwise/BatchNorm/moving_mean"
  input: "MobilenetV1/Conv2d_9_depthwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_9_depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_depthwise/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_depthwise/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_depthwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "MobilenetV1/Conv2d_9_depthwise/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "MobilenetV1/Conv2d_9_depthwise/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_depthwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_depthwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_9_depthwise/BatchNorm/moving_variance"
  input: "MobilenetV1/Conv2d_9_depthwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_9_depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_9_depthwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_9_depthwise/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_9_depthwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "MobilenetV1/MobilenetV1/Conv2d_9_depthwise/depthwise"
  input: "MobilenetV1/Conv2d_9_depthwise/BatchNorm/gamma/read"
  input: "MobilenetV1/Conv2d_9_depthwise/BatchNorm/beta/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_9_depthwise/BatchNorm/Const"
  input: "MobilenetV1/MobilenetV1/Conv2d_9_depthwise/BatchNorm/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 384
          }
        }
        shape {
          dim {
            size: 384
          }
        }
        shape {
          dim {
            size: 384
          }
        }
        shape {
          dim {
            size: 384
          }
        }
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_9_depthwise/BatchNorm/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0003000000142492354
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_9_depthwise/BatchNorm/AssignMovingAvg/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_9_depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_9_depthwise/BatchNorm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_9_depthwise/BatchNorm/AssignMovingAvg/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_9_depthwise/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_9_depthwise/BatchNorm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "MobilenetV1/MobilenetV1/Conv2d_9_depthwise/BatchNorm/AssignMovingAvg/Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_9_depthwise/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_9_depthwise/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "MobilenetV1/Conv2d_9_depthwise/BatchNorm/moving_mean"
  input: "MobilenetV1/MobilenetV1/Conv2d_9_depthwise/BatchNorm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_9_depthwise/BatchNorm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_9_depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_9_depthwise/BatchNorm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_9_depthwise/BatchNorm/AssignMovingAvg_1/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_9_depthwise/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_9_depthwise/BatchNorm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "MobilenetV1/MobilenetV1/Conv2d_9_depthwise/BatchNorm/AssignMovingAvg_1/Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_9_depthwise/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_9_depthwise/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "MobilenetV1/Conv2d_9_depthwise/BatchNorm/moving_variance"
  input: "MobilenetV1/MobilenetV1/Conv2d_9_depthwise/BatchNorm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_9_depthwise/Relu6"
  op: "Relu6"
  input: "MobilenetV1/MobilenetV1/Conv2d_9_depthwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_pointwise/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\001\000\000\200\001\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_pointwise/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_pointwise/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_pointwise/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "MobilenetV1/Conv2d_9_pointwise/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_pointwise/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "MobilenetV1/Conv2d_9_pointwise/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "MobilenetV1/Conv2d_9_pointwise/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_pointwise/weights/Initializer/truncated_normal"
  op: "Add"
  input: "MobilenetV1/Conv2d_9_pointwise/weights/Initializer/truncated_normal/mul"
  input: "MobilenetV1/Conv2d_9_pointwise/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_pointwise/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 384
        }
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_pointwise/weights/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_9_pointwise/weights"
  input: "MobilenetV1/Conv2d_9_pointwise/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_pointwise/weights/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_9_pointwise/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_9_pointwise/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_9_pointwise/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "MobilenetV1/Conv2d_9_pointwise/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_9_pointwise/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "MobilenetV1/MobilenetV1/Conv2d_9_pointwise/kernel/Regularizer/l2_regularizer/scale"
  input: "MobilenetV1/MobilenetV1/Conv2d_9_pointwise/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_9_pointwise/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_9_pointwise/Conv2D"
  op: "Conv2D"
  input: "MobilenetV1/MobilenetV1/Conv2d_9_depthwise/Relu6"
  input: "MobilenetV1/Conv2d_9_pointwise/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/gamma"
  input: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/gamma/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/beta"
  input: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/beta/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_mean"
  input: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_variance"
  input: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_9_pointwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_9_pointwise/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_9_pointwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "MobilenetV1/MobilenetV1/Conv2d_9_pointwise/Conv2D"
  input: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/gamma/read"
  input: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/beta/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_9_pointwise/BatchNorm/Const"
  input: "MobilenetV1/MobilenetV1/Conv2d_9_pointwise/BatchNorm/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 384
          }
        }
        shape {
          dim {
            size: 384
          }
        }
        shape {
          dim {
            size: 384
          }
        }
        shape {
          dim {
            size: 384
          }
        }
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_9_pointwise/BatchNorm/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0003000000142492354
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_9_pointwise/BatchNorm/AssignMovingAvg/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_9_pointwise/BatchNorm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_9_pointwise/BatchNorm/AssignMovingAvg/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_9_pointwise/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_9_pointwise/BatchNorm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "MobilenetV1/MobilenetV1/Conv2d_9_pointwise/BatchNorm/AssignMovingAvg/Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_9_pointwise/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_9_pointwise/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_mean"
  input: "MobilenetV1/MobilenetV1/Conv2d_9_pointwise/BatchNorm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_9_pointwise/BatchNorm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_9_pointwise/BatchNorm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_9_pointwise/BatchNorm/AssignMovingAvg_1/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_9_pointwise/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_9_pointwise/BatchNorm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "MobilenetV1/MobilenetV1/Conv2d_9_pointwise/BatchNorm/AssignMovingAvg_1/Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_9_pointwise/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_9_pointwise/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_variance"
  input: "MobilenetV1/MobilenetV1/Conv2d_9_pointwise/BatchNorm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_9_pointwise/Relu6"
  op: "Relu6"
  input: "MobilenetV1/MobilenetV1/Conv2d_9_pointwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_depthwise/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_depthwise/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "MobilenetV1/Conv2d_10_depthwise/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_depthwise/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "MobilenetV1/Conv2d_10_depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "MobilenetV1/Conv2d_10_depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_depthwise/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "MobilenetV1/Conv2d_10_depthwise/depthwise_weights/Initializer/truncated_normal/mul"
  input: "MobilenetV1/Conv2d_10_depthwise/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 384
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_10_depthwise/depthwise_weights"
  input: "MobilenetV1/Conv2d_10_depthwise/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_10_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_10_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_10_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_10_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "MobilenetV1/MobilenetV1/Conv2d_9_pointwise/Relu6"
  input: "MobilenetV1/Conv2d_10_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_depthwise/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_depthwise/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_depthwise/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "MobilenetV1/Conv2d_10_depthwise/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "MobilenetV1/Conv2d_10_depthwise/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_depthwise/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_depthwise/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_10_depthwise/BatchNorm/gamma"
  input: "MobilenetV1/Conv2d_10_depthwise/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_depthwise/BatchNorm/gamma/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_10_depthwise/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_depthwise/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_depthwise/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_depthwise/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "MobilenetV1/Conv2d_10_depthwise/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "MobilenetV1/Conv2d_10_depthwise/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_depthwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_depthwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_10_depthwise/BatchNorm/beta"
  input: "MobilenetV1/Conv2d_10_depthwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_10_depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_depthwise/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_depthwise/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_depthwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "MobilenetV1/Conv2d_10_depthwise/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "MobilenetV1/Conv2d_10_depthwise/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_depthwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_depthwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_10_depthwise/BatchNorm/moving_mean"
  input: "MobilenetV1/Conv2d_10_depthwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_10_depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_depthwise/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_depthwise/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_depthwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "MobilenetV1/Conv2d_10_depthwise/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "MobilenetV1/Conv2d_10_depthwise/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_depthwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_depthwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_10_depthwise/BatchNorm/moving_variance"
  input: "MobilenetV1/Conv2d_10_depthwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_10_depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_10_depthwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_10_depthwise/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_10_depthwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "MobilenetV1/MobilenetV1/Conv2d_10_depthwise/depthwise"
  input: "MobilenetV1/Conv2d_10_depthwise/BatchNorm/gamma/read"
  input: "MobilenetV1/Conv2d_10_depthwise/BatchNorm/beta/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_10_depthwise/BatchNorm/Const"
  input: "MobilenetV1/MobilenetV1/Conv2d_10_depthwise/BatchNorm/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 384
          }
        }
        shape {
          dim {
            size: 384
          }
        }
        shape {
          dim {
            size: 384
          }
        }
        shape {
          dim {
            size: 384
          }
        }
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_10_depthwise/BatchNorm/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0003000000142492354
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_10_depthwise/BatchNorm/AssignMovingAvg/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_10_depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_10_depthwise/BatchNorm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_10_depthwise/BatchNorm/AssignMovingAvg/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_10_depthwise/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_10_depthwise/BatchNorm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "MobilenetV1/MobilenetV1/Conv2d_10_depthwise/BatchNorm/AssignMovingAvg/Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_10_depthwise/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_10_depthwise/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "MobilenetV1/Conv2d_10_depthwise/BatchNorm/moving_mean"
  input: "MobilenetV1/MobilenetV1/Conv2d_10_depthwise/BatchNorm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_10_depthwise/BatchNorm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_10_depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_10_depthwise/BatchNorm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_10_depthwise/BatchNorm/AssignMovingAvg_1/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_10_depthwise/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_10_depthwise/BatchNorm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "MobilenetV1/MobilenetV1/Conv2d_10_depthwise/BatchNorm/AssignMovingAvg_1/Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_10_depthwise/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_10_depthwise/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "MobilenetV1/Conv2d_10_depthwise/BatchNorm/moving_variance"
  input: "MobilenetV1/MobilenetV1/Conv2d_10_depthwise/BatchNorm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_10_depthwise/Relu6"
  op: "Relu6"
  input: "MobilenetV1/MobilenetV1/Conv2d_10_depthwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_pointwise/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\001\000\000\200\001\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_pointwise/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_pointwise/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_pointwise/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "MobilenetV1/Conv2d_10_pointwise/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_pointwise/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "MobilenetV1/Conv2d_10_pointwise/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "MobilenetV1/Conv2d_10_pointwise/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_pointwise/weights/Initializer/truncated_normal"
  op: "Add"
  input: "MobilenetV1/Conv2d_10_pointwise/weights/Initializer/truncated_normal/mul"
  input: "MobilenetV1/Conv2d_10_pointwise/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_pointwise/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 384
        }
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_pointwise/weights/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_10_pointwise/weights"
  input: "MobilenetV1/Conv2d_10_pointwise/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_pointwise/weights/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_10_pointwise/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_10_pointwise/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_10_pointwise/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "MobilenetV1/Conv2d_10_pointwise/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_10_pointwise/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "MobilenetV1/MobilenetV1/Conv2d_10_pointwise/kernel/Regularizer/l2_regularizer/scale"
  input: "MobilenetV1/MobilenetV1/Conv2d_10_pointwise/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_10_pointwise/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_10_pointwise/Conv2D"
  op: "Conv2D"
  input: "MobilenetV1/MobilenetV1/Conv2d_10_depthwise/Relu6"
  input: "MobilenetV1/Conv2d_10_pointwise/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/gamma"
  input: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/gamma/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/beta"
  input: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/beta/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_mean"
  input: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_variance"
  input: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_10_pointwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_10_pointwise/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_10_pointwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "MobilenetV1/MobilenetV1/Conv2d_10_pointwise/Conv2D"
  input: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/gamma/read"
  input: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/beta/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_10_pointwise/BatchNorm/Const"
  input: "MobilenetV1/MobilenetV1/Conv2d_10_pointwise/BatchNorm/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 384
          }
        }
        shape {
          dim {
            size: 384
          }
        }
        shape {
          dim {
            size: 384
          }
        }
        shape {
          dim {
            size: 384
          }
        }
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_10_pointwise/BatchNorm/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0003000000142492354
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_10_pointwise/BatchNorm/AssignMovingAvg/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_10_pointwise/BatchNorm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_10_pointwise/BatchNorm/AssignMovingAvg/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_10_pointwise/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_10_pointwise/BatchNorm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "MobilenetV1/MobilenetV1/Conv2d_10_pointwise/BatchNorm/AssignMovingAvg/Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_10_pointwise/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_10_pointwise/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_mean"
  input: "MobilenetV1/MobilenetV1/Conv2d_10_pointwise/BatchNorm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_10_pointwise/BatchNorm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_10_pointwise/BatchNorm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_10_pointwise/BatchNorm/AssignMovingAvg_1/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_10_pointwise/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_10_pointwise/BatchNorm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "MobilenetV1/MobilenetV1/Conv2d_10_pointwise/BatchNorm/AssignMovingAvg_1/Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_10_pointwise/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_10_pointwise/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_variance"
  input: "MobilenetV1/MobilenetV1/Conv2d_10_pointwise/BatchNorm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_10_pointwise/Relu6"
  op: "Relu6"
  input: "MobilenetV1/MobilenetV1/Conv2d_10_pointwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_depthwise/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_depthwise/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "MobilenetV1/Conv2d_11_depthwise/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_depthwise/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "MobilenetV1/Conv2d_11_depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "MobilenetV1/Conv2d_11_depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_depthwise/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "MobilenetV1/Conv2d_11_depthwise/depthwise_weights/Initializer/truncated_normal/mul"
  input: "MobilenetV1/Conv2d_11_depthwise/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 384
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_11_depthwise/depthwise_weights"
  input: "MobilenetV1/Conv2d_11_depthwise/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_11_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_11_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_11_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_11_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "MobilenetV1/MobilenetV1/Conv2d_10_pointwise/Relu6"
  input: "MobilenetV1/Conv2d_11_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_depthwise/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_depthwise/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_depthwise/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "MobilenetV1/Conv2d_11_depthwise/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "MobilenetV1/Conv2d_11_depthwise/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_depthwise/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_depthwise/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_11_depthwise/BatchNorm/gamma"
  input: "MobilenetV1/Conv2d_11_depthwise/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_depthwise/BatchNorm/gamma/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_11_depthwise/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_depthwise/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_depthwise/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_depthwise/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "MobilenetV1/Conv2d_11_depthwise/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "MobilenetV1/Conv2d_11_depthwise/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_depthwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_depthwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_11_depthwise/BatchNorm/beta"
  input: "MobilenetV1/Conv2d_11_depthwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_11_depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_depthwise/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_depthwise/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_depthwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "MobilenetV1/Conv2d_11_depthwise/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "MobilenetV1/Conv2d_11_depthwise/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_depthwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_depthwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_11_depthwise/BatchNorm/moving_mean"
  input: "MobilenetV1/Conv2d_11_depthwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_11_depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_depthwise/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_depthwise/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_depthwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "MobilenetV1/Conv2d_11_depthwise/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "MobilenetV1/Conv2d_11_depthwise/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_depthwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_depthwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_11_depthwise/BatchNorm/moving_variance"
  input: "MobilenetV1/Conv2d_11_depthwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_11_depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_11_depthwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_11_depthwise/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_11_depthwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "MobilenetV1/MobilenetV1/Conv2d_11_depthwise/depthwise"
  input: "MobilenetV1/Conv2d_11_depthwise/BatchNorm/gamma/read"
  input: "MobilenetV1/Conv2d_11_depthwise/BatchNorm/beta/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_11_depthwise/BatchNorm/Const"
  input: "MobilenetV1/MobilenetV1/Conv2d_11_depthwise/BatchNorm/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 384
          }
        }
        shape {
          dim {
            size: 384
          }
        }
        shape {
          dim {
            size: 384
          }
        }
        shape {
          dim {
            size: 384
          }
        }
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_11_depthwise/BatchNorm/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0003000000142492354
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_11_depthwise/BatchNorm/AssignMovingAvg/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_11_depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_11_depthwise/BatchNorm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_11_depthwise/BatchNorm/AssignMovingAvg/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_11_depthwise/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_11_depthwise/BatchNorm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "MobilenetV1/MobilenetV1/Conv2d_11_depthwise/BatchNorm/AssignMovingAvg/Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_11_depthwise/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_11_depthwise/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "MobilenetV1/Conv2d_11_depthwise/BatchNorm/moving_mean"
  input: "MobilenetV1/MobilenetV1/Conv2d_11_depthwise/BatchNorm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_11_depthwise/BatchNorm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_11_depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_11_depthwise/BatchNorm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_11_depthwise/BatchNorm/AssignMovingAvg_1/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_11_depthwise/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_11_depthwise/BatchNorm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "MobilenetV1/MobilenetV1/Conv2d_11_depthwise/BatchNorm/AssignMovingAvg_1/Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_11_depthwise/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_11_depthwise/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "MobilenetV1/Conv2d_11_depthwise/BatchNorm/moving_variance"
  input: "MobilenetV1/MobilenetV1/Conv2d_11_depthwise/BatchNorm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_11_depthwise/Relu6"
  op: "Relu6"
  input: "MobilenetV1/MobilenetV1/Conv2d_11_depthwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_pointwise/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\001\000\000\200\001\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_pointwise/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_pointwise/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_pointwise/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "MobilenetV1/Conv2d_11_pointwise/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_pointwise/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "MobilenetV1/Conv2d_11_pointwise/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "MobilenetV1/Conv2d_11_pointwise/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_pointwise/weights/Initializer/truncated_normal"
  op: "Add"
  input: "MobilenetV1/Conv2d_11_pointwise/weights/Initializer/truncated_normal/mul"
  input: "MobilenetV1/Conv2d_11_pointwise/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_pointwise/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 384
        }
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_pointwise/weights/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_11_pointwise/weights"
  input: "MobilenetV1/Conv2d_11_pointwise/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_pointwise/weights/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_11_pointwise/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_11_pointwise/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_11_pointwise/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "MobilenetV1/Conv2d_11_pointwise/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_11_pointwise/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "MobilenetV1/MobilenetV1/Conv2d_11_pointwise/kernel/Regularizer/l2_regularizer/scale"
  input: "MobilenetV1/MobilenetV1/Conv2d_11_pointwise/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_11_pointwise/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_11_pointwise/Conv2D"
  op: "Conv2D"
  input: "MobilenetV1/MobilenetV1/Conv2d_11_depthwise/Relu6"
  input: "MobilenetV1/Conv2d_11_pointwise/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/gamma"
  input: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/gamma/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/beta"
  input: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/beta/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_mean"
  input: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_variance"
  input: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_11_pointwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_11_pointwise/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_11_pointwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "MobilenetV1/MobilenetV1/Conv2d_11_pointwise/Conv2D"
  input: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/gamma/read"
  input: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/beta/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_11_pointwise/BatchNorm/Const"
  input: "MobilenetV1/MobilenetV1/Conv2d_11_pointwise/BatchNorm/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 384
          }
        }
        shape {
          dim {
            size: 384
          }
        }
        shape {
          dim {
            size: 384
          }
        }
        shape {
          dim {
            size: 384
          }
        }
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_11_pointwise/BatchNorm/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0003000000142492354
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_11_pointwise/BatchNorm/AssignMovingAvg/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_11_pointwise/BatchNorm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_11_pointwise/BatchNorm/AssignMovingAvg/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_11_pointwise/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_11_pointwise/BatchNorm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "MobilenetV1/MobilenetV1/Conv2d_11_pointwise/BatchNorm/AssignMovingAvg/Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_11_pointwise/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_11_pointwise/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_mean"
  input: "MobilenetV1/MobilenetV1/Conv2d_11_pointwise/BatchNorm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_11_pointwise/BatchNorm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_11_pointwise/BatchNorm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_11_pointwise/BatchNorm/AssignMovingAvg_1/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_11_pointwise/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_11_pointwise/BatchNorm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "MobilenetV1/MobilenetV1/Conv2d_11_pointwise/BatchNorm/AssignMovingAvg_1/Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_11_pointwise/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_11_pointwise/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_variance"
  input: "MobilenetV1/MobilenetV1/Conv2d_11_pointwise/BatchNorm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_11_pointwise/Relu6"
  op: "Relu6"
  input: "MobilenetV1/MobilenetV1/Conv2d_11_pointwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_12_depthwise/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_12_depthwise/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_12_depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_12_depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "MobilenetV1/Conv2d_12_depthwise/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_12_depthwise/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "MobilenetV1/Conv2d_12_depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "MobilenetV1/Conv2d_12_depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_12_depthwise/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "MobilenetV1/Conv2d_12_depthwise/depthwise_weights/Initializer/truncated_normal/mul"
  input: "MobilenetV1/Conv2d_12_depthwise/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_12_depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 384
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_12_depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_12_depthwise/depthwise_weights"
  input: "MobilenetV1/Conv2d_12_depthwise/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_12_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_12_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_12_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_12_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_12_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "MobilenetV1/MobilenetV1/Conv2d_11_pointwise/Relu6"
  input: "MobilenetV1/Conv2d_12_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_12_depthwise/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_12_depthwise/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_12_depthwise/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "MobilenetV1/Conv2d_12_depthwise/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "MobilenetV1/Conv2d_12_depthwise/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_12_depthwise/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_12_depthwise/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_12_depthwise/BatchNorm/gamma"
  input: "MobilenetV1/Conv2d_12_depthwise/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_12_depthwise/BatchNorm/gamma/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_12_depthwise/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_12_depthwise/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_12_depthwise/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_12_depthwise/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "MobilenetV1/Conv2d_12_depthwise/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "MobilenetV1/Conv2d_12_depthwise/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_12_depthwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_12_depthwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_12_depthwise/BatchNorm/beta"
  input: "MobilenetV1/Conv2d_12_depthwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_12_depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_12_depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_12_depthwise/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_12_depthwise/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_12_depthwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "MobilenetV1/Conv2d_12_depthwise/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "MobilenetV1/Conv2d_12_depthwise/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_12_depthwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_12_depthwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_12_depthwise/BatchNorm/moving_mean"
  input: "MobilenetV1/Conv2d_12_depthwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_12_depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_12_depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_12_depthwise/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_12_depthwise/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_12_depthwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "MobilenetV1/Conv2d_12_depthwise/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "MobilenetV1/Conv2d_12_depthwise/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_12_depthwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_12_depthwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_12_depthwise/BatchNorm/moving_variance"
  input: "MobilenetV1/Conv2d_12_depthwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_12_depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_12_depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_12_depthwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_12_depthwise/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_12_depthwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "MobilenetV1/MobilenetV1/Conv2d_12_depthwise/depthwise"
  input: "MobilenetV1/Conv2d_12_depthwise/BatchNorm/gamma/read"
  input: "MobilenetV1/Conv2d_12_depthwise/BatchNorm/beta/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_12_depthwise/BatchNorm/Const"
  input: "MobilenetV1/MobilenetV1/Conv2d_12_depthwise/BatchNorm/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 384
          }
        }
        shape {
          dim {
            size: 384
          }
        }
        shape {
          dim {
            size: 384
          }
        }
        shape {
          dim {
            size: 384
          }
        }
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_12_depthwise/BatchNorm/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0003000000142492354
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_12_depthwise/BatchNorm/AssignMovingAvg/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_12_depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_12_depthwise/BatchNorm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_12_depthwise/BatchNorm/AssignMovingAvg/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_12_depthwise/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_12_depthwise/BatchNorm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "MobilenetV1/MobilenetV1/Conv2d_12_depthwise/BatchNorm/AssignMovingAvg/Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_12_depthwise/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_12_depthwise/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "MobilenetV1/Conv2d_12_depthwise/BatchNorm/moving_mean"
  input: "MobilenetV1/MobilenetV1/Conv2d_12_depthwise/BatchNorm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_12_depthwise/BatchNorm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_12_depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_12_depthwise/BatchNorm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_12_depthwise/BatchNorm/AssignMovingAvg_1/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_12_depthwise/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_12_depthwise/BatchNorm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "MobilenetV1/MobilenetV1/Conv2d_12_depthwise/BatchNorm/AssignMovingAvg_1/Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_12_depthwise/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_12_depthwise/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "MobilenetV1/Conv2d_12_depthwise/BatchNorm/moving_variance"
  input: "MobilenetV1/MobilenetV1/Conv2d_12_depthwise/BatchNorm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_12_depthwise/Relu6"
  op: "Relu6"
  input: "MobilenetV1/MobilenetV1/Conv2d_12_depthwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_12_pointwise/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\001\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_12_pointwise/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_12_pointwise/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_12_pointwise/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "MobilenetV1/Conv2d_12_pointwise/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_12_pointwise/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "MobilenetV1/Conv2d_12_pointwise/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "MobilenetV1/Conv2d_12_pointwise/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_12_pointwise/weights/Initializer/truncated_normal"
  op: "Add"
  input: "MobilenetV1/Conv2d_12_pointwise/weights/Initializer/truncated_normal/mul"
  input: "MobilenetV1/Conv2d_12_pointwise/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_12_pointwise/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 384
        }
        dim {
          size: 768
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_12_pointwise/weights/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_12_pointwise/weights"
  input: "MobilenetV1/Conv2d_12_pointwise/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_12_pointwise/weights/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_12_pointwise/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_12_pointwise/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_12_pointwise/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "MobilenetV1/Conv2d_12_pointwise/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_12_pointwise/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "MobilenetV1/MobilenetV1/Conv2d_12_pointwise/kernel/Regularizer/l2_regularizer/scale"
  input: "MobilenetV1/MobilenetV1/Conv2d_12_pointwise/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_12_pointwise/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_12_pointwise/Conv2D"
  op: "Conv2D"
  input: "MobilenetV1/MobilenetV1/Conv2d_12_depthwise/Relu6"
  input: "MobilenetV1/Conv2d_12_pointwise/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_12_pointwise/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_12_pointwise/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_12_pointwise/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "MobilenetV1/Conv2d_12_pointwise/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "MobilenetV1/Conv2d_12_pointwise/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_12_pointwise/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_12_pointwise/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_12_pointwise/BatchNorm/gamma"
  input: "MobilenetV1/Conv2d_12_pointwise/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_12_pointwise/BatchNorm/gamma/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_12_pointwise/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_12_pointwise/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_12_pointwise/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_12_pointwise/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "MobilenetV1/Conv2d_12_pointwise/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "MobilenetV1/Conv2d_12_pointwise/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_12_pointwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_12_pointwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_12_pointwise/BatchNorm/beta"
  input: "MobilenetV1/Conv2d_12_pointwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_12_pointwise/BatchNorm/beta/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_12_pointwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_12_pointwise/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_12_pointwise/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_12_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "MobilenetV1/Conv2d_12_pointwise/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "MobilenetV1/Conv2d_12_pointwise/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_12_pointwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_12_pointwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_12_pointwise/BatchNorm/moving_mean"
  input: "MobilenetV1/Conv2d_12_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_12_pointwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_12_pointwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_12_pointwise/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_12_pointwise/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_12_pointwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "MobilenetV1/Conv2d_12_pointwise/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "MobilenetV1/Conv2d_12_pointwise/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_12_pointwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_12_pointwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_12_pointwise/BatchNorm/moving_variance"
  input: "MobilenetV1/Conv2d_12_pointwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_12_pointwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_12_pointwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_12_pointwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_12_pointwise/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_12_pointwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "MobilenetV1/MobilenetV1/Conv2d_12_pointwise/Conv2D"
  input: "MobilenetV1/Conv2d_12_pointwise/BatchNorm/gamma/read"
  input: "MobilenetV1/Conv2d_12_pointwise/BatchNorm/beta/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_12_pointwise/BatchNorm/Const"
  input: "MobilenetV1/MobilenetV1/Conv2d_12_pointwise/BatchNorm/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 768
          }
        }
        shape {
          dim {
            size: 768
          }
        }
        shape {
          dim {
            size: 768
          }
        }
        shape {
          dim {
            size: 768
          }
        }
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_12_pointwise/BatchNorm/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0003000000142492354
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_12_pointwise/BatchNorm/AssignMovingAvg/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_12_pointwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_12_pointwise/BatchNorm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_12_pointwise/BatchNorm/AssignMovingAvg/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_12_pointwise/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_12_pointwise/BatchNorm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "MobilenetV1/MobilenetV1/Conv2d_12_pointwise/BatchNorm/AssignMovingAvg/Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_12_pointwise/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_12_pointwise/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "MobilenetV1/Conv2d_12_pointwise/BatchNorm/moving_mean"
  input: "MobilenetV1/MobilenetV1/Conv2d_12_pointwise/BatchNorm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_12_pointwise/BatchNorm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_12_pointwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_12_pointwise/BatchNorm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_12_pointwise/BatchNorm/AssignMovingAvg_1/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_12_pointwise/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_12_pointwise/BatchNorm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "MobilenetV1/MobilenetV1/Conv2d_12_pointwise/BatchNorm/AssignMovingAvg_1/Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_12_pointwise/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_12_pointwise/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "MobilenetV1/Conv2d_12_pointwise/BatchNorm/moving_variance"
  input: "MobilenetV1/MobilenetV1/Conv2d_12_pointwise/BatchNorm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_12_pointwise/Relu6"
  op: "Relu6"
  input: "MobilenetV1/MobilenetV1/Conv2d_12_pointwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_13_depthwise/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_13_depthwise/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_13_depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_13_depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "MobilenetV1/Conv2d_13_depthwise/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 768
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_13_depthwise/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "MobilenetV1/Conv2d_13_depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "MobilenetV1/Conv2d_13_depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 768
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_13_depthwise/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "MobilenetV1/Conv2d_13_depthwise/depthwise_weights/Initializer/truncated_normal/mul"
  input: "MobilenetV1/Conv2d_13_depthwise/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 768
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_13_depthwise/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 768
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 768
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_13_depthwise/depthwise_weights/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_13_depthwise/depthwise_weights"
  input: "MobilenetV1/Conv2d_13_depthwise/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 768
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_13_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_13_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 768
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_13_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_13_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_13_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "MobilenetV1/MobilenetV1/Conv2d_12_pointwise/Relu6"
  input: "MobilenetV1/Conv2d_13_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_13_depthwise/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_13_depthwise/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_13_depthwise/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "MobilenetV1/Conv2d_13_depthwise/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "MobilenetV1/Conv2d_13_depthwise/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_13_depthwise/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_13_depthwise/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_13_depthwise/BatchNorm/gamma"
  input: "MobilenetV1/Conv2d_13_depthwise/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_13_depthwise/BatchNorm/gamma/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_13_depthwise/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_13_depthwise/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_13_depthwise/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_13_depthwise/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "MobilenetV1/Conv2d_13_depthwise/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "MobilenetV1/Conv2d_13_depthwise/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_13_depthwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_13_depthwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_13_depthwise/BatchNorm/beta"
  input: "MobilenetV1/Conv2d_13_depthwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_13_depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_13_depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_13_depthwise/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_13_depthwise/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_13_depthwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "MobilenetV1/Conv2d_13_depthwise/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "MobilenetV1/Conv2d_13_depthwise/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_13_depthwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_13_depthwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_13_depthwise/BatchNorm/moving_mean"
  input: "MobilenetV1/Conv2d_13_depthwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_13_depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_13_depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_13_depthwise/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_13_depthwise/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_13_depthwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "MobilenetV1/Conv2d_13_depthwise/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "MobilenetV1/Conv2d_13_depthwise/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_13_depthwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_13_depthwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_13_depthwise/BatchNorm/moving_variance"
  input: "MobilenetV1/Conv2d_13_depthwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_13_depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_13_depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_13_depthwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_13_depthwise/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_13_depthwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "MobilenetV1/MobilenetV1/Conv2d_13_depthwise/depthwise"
  input: "MobilenetV1/Conv2d_13_depthwise/BatchNorm/gamma/read"
  input: "MobilenetV1/Conv2d_13_depthwise/BatchNorm/beta/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_13_depthwise/BatchNorm/Const"
  input: "MobilenetV1/MobilenetV1/Conv2d_13_depthwise/BatchNorm/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 768
          }
        }
        shape {
          dim {
            size: 768
          }
        }
        shape {
          dim {
            size: 768
          }
        }
        shape {
          dim {
            size: 768
          }
        }
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_13_depthwise/BatchNorm/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0003000000142492354
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_13_depthwise/BatchNorm/AssignMovingAvg/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_13_depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_13_depthwise/BatchNorm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_13_depthwise/BatchNorm/AssignMovingAvg/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_13_depthwise/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_13_depthwise/BatchNorm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "MobilenetV1/MobilenetV1/Conv2d_13_depthwise/BatchNorm/AssignMovingAvg/Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_13_depthwise/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_13_depthwise/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "MobilenetV1/Conv2d_13_depthwise/BatchNorm/moving_mean"
  input: "MobilenetV1/MobilenetV1/Conv2d_13_depthwise/BatchNorm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_13_depthwise/BatchNorm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_13_depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_13_depthwise/BatchNorm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_13_depthwise/BatchNorm/AssignMovingAvg_1/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_13_depthwise/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_13_depthwise/BatchNorm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "MobilenetV1/MobilenetV1/Conv2d_13_depthwise/BatchNorm/AssignMovingAvg_1/Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_13_depthwise/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_13_depthwise/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "MobilenetV1/Conv2d_13_depthwise/BatchNorm/moving_variance"
  input: "MobilenetV1/MobilenetV1/Conv2d_13_depthwise/BatchNorm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_13_depthwise/Relu6"
  op: "Relu6"
  input: "MobilenetV1/MobilenetV1/Conv2d_13_depthwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_13_pointwise/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_13_pointwise/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_13_pointwise/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_13_pointwise/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "MobilenetV1/Conv2d_13_pointwise/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_13_pointwise/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "MobilenetV1/Conv2d_13_pointwise/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "MobilenetV1/Conv2d_13_pointwise/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_13_pointwise/weights/Initializer/truncated_normal"
  op: "Add"
  input: "MobilenetV1/Conv2d_13_pointwise/weights/Initializer/truncated_normal/mul"
  input: "MobilenetV1/Conv2d_13_pointwise/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_13_pointwise/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 768
        }
        dim {
          size: 768
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_13_pointwise/weights/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_13_pointwise/weights"
  input: "MobilenetV1/Conv2d_13_pointwise/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_13_pointwise/weights/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_13_pointwise/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_13_pointwise/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_13_pointwise/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "MobilenetV1/Conv2d_13_pointwise/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_13_pointwise/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "MobilenetV1/MobilenetV1/Conv2d_13_pointwise/kernel/Regularizer/l2_regularizer/scale"
  input: "MobilenetV1/MobilenetV1/Conv2d_13_pointwise/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_13_pointwise/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_13_pointwise/Conv2D"
  op: "Conv2D"
  input: "MobilenetV1/MobilenetV1/Conv2d_13_depthwise/Relu6"
  input: "MobilenetV1/Conv2d_13_pointwise/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_13_pointwise/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_13_pointwise/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_13_pointwise/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "MobilenetV1/Conv2d_13_pointwise/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "MobilenetV1/Conv2d_13_pointwise/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_13_pointwise/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_13_pointwise/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_13_pointwise/BatchNorm/gamma"
  input: "MobilenetV1/Conv2d_13_pointwise/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_13_pointwise/BatchNorm/gamma/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_13_pointwise/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_13_pointwise/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_13_pointwise/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_13_pointwise/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "MobilenetV1/Conv2d_13_pointwise/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "MobilenetV1/Conv2d_13_pointwise/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_13_pointwise/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_13_pointwise/BatchNorm/beta/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_13_pointwise/BatchNorm/beta"
  input: "MobilenetV1/Conv2d_13_pointwise/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_13_pointwise/BatchNorm/beta/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_13_pointwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_13_pointwise/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_13_pointwise/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_13_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "MobilenetV1/Conv2d_13_pointwise/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "MobilenetV1/Conv2d_13_pointwise/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_13_pointwise/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_13_pointwise/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_13_pointwise/BatchNorm/moving_mean"
  input: "MobilenetV1/Conv2d_13_pointwise/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_13_pointwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_13_pointwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_13_pointwise/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 768
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_13_pointwise/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_13_pointwise/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "MobilenetV1/Conv2d_13_pointwise/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "MobilenetV1/Conv2d_13_pointwise/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_13_pointwise/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_13_pointwise/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_13_pointwise/BatchNorm/moving_variance"
  input: "MobilenetV1/Conv2d_13_pointwise/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Conv2d_13_pointwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_13_pointwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_13_pointwise/BatchNorm/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_13_pointwise/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_13_pointwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "MobilenetV1/MobilenetV1/Conv2d_13_pointwise/Conv2D"
  input: "MobilenetV1/Conv2d_13_pointwise/BatchNorm/gamma/read"
  input: "MobilenetV1/Conv2d_13_pointwise/BatchNorm/beta/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_13_pointwise/BatchNorm/Const"
  input: "MobilenetV1/MobilenetV1/Conv2d_13_pointwise/BatchNorm/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 768
          }
        }
        shape {
          dim {
            size: 768
          }
        }
        shape {
          dim {
            size: 768
          }
        }
        shape {
          dim {
            size: 768
          }
        }
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_13_pointwise/BatchNorm/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0003000000142492354
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_13_pointwise/BatchNorm/AssignMovingAvg/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_13_pointwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_13_pointwise/BatchNorm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_13_pointwise/BatchNorm/AssignMovingAvg/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_13_pointwise/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_13_pointwise/BatchNorm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "MobilenetV1/MobilenetV1/Conv2d_13_pointwise/BatchNorm/AssignMovingAvg/Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_13_pointwise/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_13_pointwise/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "MobilenetV1/Conv2d_13_pointwise/BatchNorm/moving_mean"
  input: "MobilenetV1/MobilenetV1/Conv2d_13_pointwise/BatchNorm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_13_pointwise/BatchNorm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "MobilenetV1/Conv2d_13_pointwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_13_pointwise/BatchNorm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_13_pointwise/BatchNorm/AssignMovingAvg_1/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_13_pointwise/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_13_pointwise/BatchNorm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "MobilenetV1/MobilenetV1/Conv2d_13_pointwise/BatchNorm/AssignMovingAvg_1/Sub"
  input: "MobilenetV1/MobilenetV1/Conv2d_13_pointwise/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_13_pointwise/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "MobilenetV1/Conv2d_13_pointwise/BatchNorm/moving_variance"
  input: "MobilenetV1/MobilenetV1/Conv2d_13_pointwise/BatchNorm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobilenetV1/MobilenetV1/Conv2d_13_pointwise/Relu6"
  op: "Relu6"
  input: "MobilenetV1/MobilenetV1/Conv2d_13_pointwise/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Logits/AvgPool_1a/AvgPool"
  op: "AvgPool"
  input: "MobilenetV1/MobilenetV1/Conv2d_13_pointwise/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 4
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "MobilenetV1/Logits/Dropout_1b/dropout/keep_prob"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "MobilenetV1/Logits/Dropout_1b/dropout/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\001\000\000\000\001\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/Logits/Dropout_1b/dropout/random_uniform/min"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Logits/Dropout_1b/dropout/random_uniform/max"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Logits/Dropout_1b/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "MobilenetV1/Logits/Dropout_1b/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MobilenetV1/Logits/Dropout_1b/dropout/random_uniform/sub"
  op: "Sub"
  input: "MobilenetV1/Logits/Dropout_1b/dropout/random_uniform/max"
  input: "MobilenetV1/Logits/Dropout_1b/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Logits/Dropout_1b/dropout/random_uniform/mul"
  op: "Mul"
  input: "MobilenetV1/Logits/Dropout_1b/dropout/random_uniform/RandomUniform"
  input: "MobilenetV1/Logits/Dropout_1b/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Logits/Dropout_1b/dropout/random_uniform"
  op: "Add"
  input: "MobilenetV1/Logits/Dropout_1b/dropout/random_uniform/mul"
  input: "MobilenetV1/Logits/Dropout_1b/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Logits/Dropout_1b/dropout/add"
  op: "Add"
  input: "MobilenetV1/Logits/Dropout_1b/dropout/keep_prob"
  input: "MobilenetV1/Logits/Dropout_1b/dropout/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Logits/Dropout_1b/dropout/Floor"
  op: "Floor"
  input: "MobilenetV1/Logits/Dropout_1b/dropout/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Logits/Dropout_1b/dropout/div"
  op: "RealDiv"
  input: "MobilenetV1/Logits/AvgPool_1a/AvgPool"
  input: "MobilenetV1/Logits/Dropout_1b/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Logits/Dropout_1b/dropout/mul"
  op: "Mul"
  input: "MobilenetV1/Logits/Dropout_1b/dropout/div"
  input: "MobilenetV1/Logits/Dropout_1b/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Logits/Conv2d_1c_1x1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Logits/Conv2d_1c_1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\003\000\000$\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/Logits/Conv2d_1c_1x1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Logits/Conv2d_1c_1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Logits/Conv2d_1c_1x1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Logits/Conv2d_1c_1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09000000357627869
      }
    }
  }
}
node {
  name: "MobilenetV1/Logits/Conv2d_1c_1x1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "MobilenetV1/Logits/Conv2d_1c_1x1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Logits/Conv2d_1c_1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 768
          }
          dim {
            size: 36
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MobilenetV1/Logits/Conv2d_1c_1x1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "MobilenetV1/Logits/Conv2d_1c_1x1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "MobilenetV1/Logits/Conv2d_1c_1x1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Logits/Conv2d_1c_1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 768
          }
          dim {
            size: 36
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Logits/Conv2d_1c_1x1/weights/Initializer/truncated_normal"
  op: "Add"
  input: "MobilenetV1/Logits/Conv2d_1c_1x1/weights/Initializer/truncated_normal/mul"
  input: "MobilenetV1/Logits/Conv2d_1c_1x1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Logits/Conv2d_1c_1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 768
          }
          dim {
            size: 36
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Logits/Conv2d_1c_1x1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Logits/Conv2d_1c_1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 768
          }
          dim {
            size: 36
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 768
        }
        dim {
          size: 36
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Logits/Conv2d_1c_1x1/weights/Assign"
  op: "Assign"
  input: "MobilenetV1/Logits/Conv2d_1c_1x1/weights"
  input: "MobilenetV1/Logits/Conv2d_1c_1x1/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Logits/Conv2d_1c_1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 768
          }
          dim {
            size: 36
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Logits/Conv2d_1c_1x1/weights/read"
  op: "Identity"
  input: "MobilenetV1/Logits/Conv2d_1c_1x1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Logits/Conv2d_1c_1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 768
          }
          dim {
            size: 36
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Logits/Conv2d_1c_1x1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Logits/Conv2d_1c_1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "MobilenetV1/Logits/Conv2d_1c_1x1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "MobilenetV1/Logits/Conv2d_1c_1x1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Logits/Conv2d_1c_1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Logits/Conv2d_1c_1x1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "MobilenetV1/Logits/Conv2d_1c_1x1/kernel/Regularizer/l2_regularizer/scale"
  input: "MobilenetV1/Logits/Conv2d_1c_1x1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Logits/Conv2d_1c_1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Logits/Conv2d_1c_1x1/biases/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Logits/Conv2d_1c_1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 36
      }
    }
  }
}
node {
  name: "MobilenetV1/Logits/Conv2d_1c_1x1/biases/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Logits/Conv2d_1c_1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobilenetV1/Logits/Conv2d_1c_1x1/biases/Initializer/zeros"
  op: "Fill"
  input: "MobilenetV1/Logits/Conv2d_1c_1x1/biases/Initializer/zeros/shape_as_tensor"
  input: "MobilenetV1/Logits/Conv2d_1c_1x1/biases/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Logits/Conv2d_1c_1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 36
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobilenetV1/Logits/Conv2d_1c_1x1/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Logits/Conv2d_1c_1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 36
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 36
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobilenetV1/Logits/Conv2d_1c_1x1/biases/Assign"
  op: "Assign"
  input: "MobilenetV1/Logits/Conv2d_1c_1x1/biases"
  input: "MobilenetV1/Logits/Conv2d_1c_1x1/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Logits/Conv2d_1c_1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 36
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Logits/Conv2d_1c_1x1/biases/read"
  op: "Identity"
  input: "MobilenetV1/Logits/Conv2d_1c_1x1/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Logits/Conv2d_1c_1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 36
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Logits/Conv2d_1c_1x1/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/Logits/Conv2d_1c_1x1/Conv2D"
  op: "Conv2D"
  input: "MobilenetV1/Logits/Dropout_1b/dropout/mul"
  input: "MobilenetV1/Logits/Conv2d_1c_1x1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 36
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "MobilenetV1/Logits/Conv2d_1c_1x1/BiasAdd"
  op: "BiasAdd"
  input: "MobilenetV1/Logits/Conv2d_1c_1x1/Conv2D"
  input: "MobilenetV1/Logits/Conv2d_1c_1x1/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 36
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "MobilenetV1/Logits/SpatialSqueeze"
  op: "Squeeze"
  input: "MobilenetV1/Logits/Conv2d_1c_1x1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 36
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "MobilenetV1/Predictions/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377$\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/Predictions/Reshape"
  op: "Reshape"
  input: "MobilenetV1/Logits/SpatialSqueeze"
  input: "MobilenetV1/Predictions/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 36
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Predictions/Softmax"
  op: "Softmax"
  input: "MobilenetV1/Predictions/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 36
          }
        }
      }
    }
  }
}
node {
  name: "MobilenetV1/Predictions/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\020\000\000\000$\000\000\000"
      }
    }
  }
}
node {
  name: "MobilenetV1/Predictions/Reshape_1"
  op: "Reshape"
  input: "MobilenetV1/Predictions/Softmax"
  input: "MobilenetV1/Predictions/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 36
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/labels_stop_gradient"
  op: "StopGradient"
  input: "OneHotEncoding/one_hot"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 36
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\020\000\000\000$\000\000\000"
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Rank_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\020\000\000\000$\000\000\000"
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Sub/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Sub"
  op: "Sub"
  input: "softmax_cross_entropy_loss/xentropy/Rank_1"
  input: "softmax_cross_entropy_loss/xentropy/Sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Slice/begin"
  op: "Pack"
  input: "softmax_cross_entropy_loss/xentropy/Sub"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Slice/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Slice"
  op: "Slice"
  input: "softmax_cross_entropy_loss/xentropy/Shape_1"
  input: "softmax_cross_entropy_loss/xentropy/Slice/begin"
  input: "softmax_cross_entropy_loss/xentropy/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/concat/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/concat"
  op: "ConcatV2"
  input: "softmax_cross_entropy_loss/xentropy/concat/values_0"
  input: "softmax_cross_entropy_loss/xentropy/Slice"
  input: "softmax_cross_entropy_loss/xentropy/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Reshape"
  op: "Reshape"
  input: "MobilenetV1/Logits/SpatialSqueeze"
  input: "softmax_cross_entropy_loss/xentropy/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 36
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Rank_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Shape_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\020\000\000\000$\000\000\000"
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Sub_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Sub_1"
  op: "Sub"
  input: "softmax_cross_entropy_loss/xentropy/Rank_2"
  input: "softmax_cross_entropy_loss/xentropy/Sub_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Slice_1/begin"
  op: "Pack"
  input: "softmax_cross_entropy_loss/xentropy/Sub_1"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Slice_1/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Slice_1"
  op: "Slice"
  input: "softmax_cross_entropy_loss/xentropy/Shape_2"
  input: "softmax_cross_entropy_loss/xentropy/Slice_1/begin"
  input: "softmax_cross_entropy_loss/xentropy/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/concat_1/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/concat_1"
  op: "ConcatV2"
  input: "softmax_cross_entropy_loss/xentropy/concat_1/values_0"
  input: "softmax_cross_entropy_loss/xentropy/Slice_1"
  input: "softmax_cross_entropy_loss/xentropy/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Reshape_1"
  op: "Reshape"
  input: "softmax_cross_entropy_loss/labels_stop_gradient"
  input: "softmax_cross_entropy_loss/xentropy/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 36
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy"
  op: "SoftmaxCrossEntropyWithLogits"
  input: "softmax_cross_entropy_loss/xentropy/Reshape"
  input: "softmax_cross_entropy_loss/xentropy/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
          dim {
            size: 36
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Sub_2/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Sub_2"
  op: "Sub"
  input: "softmax_cross_entropy_loss/xentropy/Rank"
  input: "softmax_cross_entropy_loss/xentropy/Sub_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Slice_2/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Slice_2/size"
  op: "Pack"
  input: "softmax_cross_entropy_loss/xentropy/Sub_2"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Slice_2"
  op: "Slice"
  input: "softmax_cross_entropy_loss/xentropy/Shape"
  input: "softmax_cross_entropy_loss/xentropy/Slice_2/begin"
  input: "softmax_cross_entropy_loss/xentropy/Slice_2/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Reshape_2"
  op: "Reshape"
  input: "softmax_cross_entropy_loss/xentropy"
  input: "softmax_cross_entropy_loss/xentropy/Slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/assert_broadcastable/weights"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/assert_broadcastable/values/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "softmax_cross_entropy_loss/ToFloat_1/x"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/Mul"
  op: "Mul"
  input: "softmax_cross_entropy_loss/xentropy/Reshape_2"
  input: "softmax_cross_entropy_loss/ToFloat_1/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/Const"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/Sum"
  op: "Sum"
  input: "softmax_cross_entropy_loss/Mul"
  input: "softmax_cross_entropy_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/Equal/y"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/Equal"
  op: "Equal"
  input: "softmax_cross_entropy_loss/ToFloat_1/x"
  input: "softmax_cross_entropy_loss/num_present/Equal/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/zeros_like/shape_as_tensor"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/zeros_like/Const"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/zeros_like"
  op: "Fill"
  input: "softmax_cross_entropy_loss/num_present/zeros_like/shape_as_tensor"
  input: "softmax_cross_entropy_loss/num_present/zeros_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/ones_like/Shape"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/ones_like/Const"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/ones_like"
  op: "Fill"
  input: "softmax_cross_entropy_loss/num_present/ones_like/Shape"
  input: "softmax_cross_entropy_loss/num_present/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/Select"
  op: "Select"
  input: "softmax_cross_entropy_loss/num_present/Equal"
  input: "softmax_cross_entropy_loss/num_present/zeros_like"
  input: "softmax_cross_entropy_loss/num_present/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/weights/shape"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/weights/rank"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/values/shape"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/values/rank"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
}
node {
  name: "softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like/Shape"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  input: "^softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like/Const"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  input: "^softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like"
  op: "Fill"
  input: "softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like/Shape"
  input: "softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/broadcast_weights"
  op: "Mul"
  input: "softmax_cross_entropy_loss/num_present/Select"
  input: "softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/Const"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present"
  op: "Sum"
  input: "softmax_cross_entropy_loss/num_present/broadcast_weights"
  input: "softmax_cross_entropy_loss/num_present/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/Const_1"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/Sum_1"
  op: "Sum"
  input: "softmax_cross_entropy_loss/Sum"
  input: "softmax_cross_entropy_loss/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/Greater/y"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/Greater"
  op: "Greater"
  input: "softmax_cross_entropy_loss/num_present"
  input: "softmax_cross_entropy_loss/Greater/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/Equal/y"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/Equal"
  op: "Equal"
  input: "softmax_cross_entropy_loss/num_present"
  input: "softmax_cross_entropy_loss/Equal/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/ones_like/Shape"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/ones_like/Const"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/ones_like"
  op: "Fill"
  input: "softmax_cross_entropy_loss/ones_like/Shape"
  input: "softmax_cross_entropy_loss/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/Select"
  op: "Select"
  input: "softmax_cross_entropy_loss/Equal"
  input: "softmax_cross_entropy_loss/ones_like"
  input: "softmax_cross_entropy_loss/num_present"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/div"
  op: "RealDiv"
  input: "softmax_cross_entropy_loss/Sum_1"
  input: "softmax_cross_entropy_loss/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/zeros_like/shape_as_tensor"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/zeros_like/Const"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/zeros_like"
  op: "Fill"
  input: "softmax_cross_entropy_loss/zeros_like/shape_as_tensor"
  input: "softmax_cross_entropy_loss/zeros_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/value"
  op: "Select"
  input: "softmax_cross_entropy_loss/Greater"
  input: "softmax_cross_entropy_loss/div"
  input: "softmax_cross_entropy_loss/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ArgMax/dimension"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ArgMax"
  op: "ArgMax"
  input: "MobilenetV1/Logits/SpatialSqueeze"
  input: "ArgMax/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "output_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "ArgMax_1/dimension"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ArgMax_1"
  op: "ArgMax"
  input: "OneHotEncoding/one_hot"
  input: "ArgMax_1/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "output_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "Equal_2"
  op: "Equal"
  input: "ArgMax"
  input: "ArgMax_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "Cast"
  op: "Cast"
  input: "Equal_2"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean"
  op: "Mean"
  input: "Cast"
  input: "Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "total_loss"
  op: "AddN"
  input: "softmax_cross_entropy_loss/value"
  input: "MobilenetV1/MobilenetV1/Conv2d_0/kernel/Regularizer/l2_regularizer"
  input: "MobilenetV1/MobilenetV1/Conv2d_1_pointwise/kernel/Regularizer/l2_regularizer"
  input: "MobilenetV1/MobilenetV1/Conv2d_2_pointwise/kernel/Regularizer/l2_regularizer"
  input: "MobilenetV1/MobilenetV1/Conv2d_3_pointwise/kernel/Regularizer/l2_regularizer"
  input: "MobilenetV1/MobilenetV1/Conv2d_4_pointwise/kernel/Regularizer/l2_regularizer"
  input: "MobilenetV1/MobilenetV1/Conv2d_5_pointwise/kernel/Regularizer/l2_regularizer"
  input: "MobilenetV1/MobilenetV1/Conv2d_6_pointwise/kernel/Regularizer/l2_regularizer"
  input: "MobilenetV1/MobilenetV1/Conv2d_7_pointwise/kernel/Regularizer/l2_regularizer"
  input: "MobilenetV1/MobilenetV1/Conv2d_8_pointwise/kernel/Regularizer/l2_regularizer"
  input: "MobilenetV1/MobilenetV1/Conv2d_9_pointwise/kernel/Regularizer/l2_regularizer"
  input: "MobilenetV1/MobilenetV1/Conv2d_10_pointwise/kernel/Regularizer/l2_regularizer"
  input: "MobilenetV1/MobilenetV1/Conv2d_11_pointwise/kernel/Regularizer/l2_regularizer"
  input: "MobilenetV1/MobilenetV1/Conv2d_12_pointwise/kernel/Regularizer/l2_regularizer"
  input: "MobilenetV1/MobilenetV1/Conv2d_13_pointwise/kernel/Regularizer/l2_regularizer"
  input: "MobilenetV1/Logits/Conv2d_1c_1x1/kernel/Regularizer/l2_regularizer"
  attr {
    key: "N"
    value {
      i: 16
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "global_step/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step/Initializer/zeros"
  op: "Fill"
  input: "global_step/Initializer/zeros/shape_as_tensor"
  input: "global_step/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "global_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ExponentialDecay/learning_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04500000178813934
      }
    }
  }
}
node {
  name: "ExponentialDecay/Cast"
  op: "Cast"
  input: "global_step/read"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ExponentialDecay/Cast_1/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4500
      }
    }
  }
}
node {
  name: "ExponentialDecay/Cast_1"
  op: "Cast"
  input: "ExponentialDecay/Cast_1/x"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ExponentialDecay/Cast_2/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9399999976158142
      }
    }
  }
}
node {
  name: "ExponentialDecay/truediv"
  op: "RealDiv"
  input: "ExponentialDecay/Cast"
  input: "ExponentialDecay/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ExponentialDecay/Floor"
  op: "Floor"
  input: "ExponentialDecay/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ExponentialDecay/Pow"
  op: "Pow"
  input: "ExponentialDecay/Cast_2/x"
  input: "ExponentialDecay/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ExponentialDecay"
  op: "Mul"
  input: "ExponentialDecay/learning_rate"
  input: "ExponentialDecay/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "update_barrier"
  op: "NoOp"
  input: "^MobilenetV1/MobilenetV1/Conv2d_0/BatchNorm/AssignMovingAvg_1"
  input: "^MobilenetV1/MobilenetV1/Conv2d_4_pointwise/BatchNorm/AssignMovingAvg_1"
  input: "^MobilenetV1/MobilenetV1/Conv2d_7_depthwise/BatchNorm/AssignMovingAvg_1"
  input: "^MobilenetV1/MobilenetV1/Conv2d_11_depthwise/BatchNorm/AssignMovingAvg"
  input: "^MobilenetV1/MobilenetV1/Conv2d_2_depthwise/BatchNorm/AssignMovingAvg_1"
  input: "^MobilenetV1/MobilenetV1/Conv2d_7_pointwise/BatchNorm/AssignMovingAvg_1"
  input: "^MobilenetV1/MobilenetV1/Conv2d_2_pointwise/BatchNorm/AssignMovingAvg_1"
  input: "^MobilenetV1/MobilenetV1/Conv2d_5_depthwise/BatchNorm/AssignMovingAvg_1"
  input: "^MobilenetV1/MobilenetV1/Conv2d_10_pointwise/BatchNorm/AssignMovingAvg_1"
  input: "^MobilenetV1/MobilenetV1/Conv2d_1_pointwise/BatchNorm/AssignMovingAvg"
  input: "^MobilenetV1/MobilenetV1/Conv2d_5_pointwise/BatchNorm/AssignMovingAvg_1"
  input: "^MobilenetV1/MobilenetV1/Conv2d_8_depthwise/BatchNorm/AssignMovingAvg_1"
  input: "^MobilenetV1/MobilenetV1/Conv2d_13_pointwise/BatchNorm/AssignMovingAvg_1"
  input: "^MobilenetV1/MobilenetV1/Conv2d_3_depthwise/BatchNorm/AssignMovingAvg_1"
  input: "^MobilenetV1/MobilenetV1/Conv2d_4_pointwise/BatchNorm/AssignMovingAvg"
  input: "^MobilenetV1/MobilenetV1/Conv2d_8_pointwise/BatchNorm/AssignMovingAvg_1"
  input: "^MobilenetV1/MobilenetV1/Conv2d_11_depthwise/BatchNorm/AssignMovingAvg_1"
  input: "^MobilenetV1/MobilenetV1/Conv2d_2_depthwise/BatchNorm/AssignMovingAvg"
  input: "^MobilenetV1/MobilenetV1/Conv2d_6_depthwise/BatchNorm/AssignMovingAvg_1"
  input: "^MobilenetV1/MobilenetV1/Conv2d_7_pointwise/BatchNorm/AssignMovingAvg"
  input: "^MobilenetV1/MobilenetV1/Conv2d_11_pointwise/BatchNorm/AssignMovingAvg_1"
  input: "^MobilenetV1/MobilenetV1/Conv2d_2_pointwise/BatchNorm/AssignMovingAvg"
  input: "^MobilenetV1/MobilenetV1/Conv2d_5_depthwise/BatchNorm/AssignMovingAvg"
  input: "^MobilenetV1/MobilenetV1/Conv2d_9_depthwise/BatchNorm/AssignMovingAvg_1"
  input: "^MobilenetV1/MobilenetV1/Conv2d_5_pointwise/BatchNorm/AssignMovingAvg"
  input: "^MobilenetV1/MobilenetV1/Conv2d_8_depthwise/BatchNorm/AssignMovingAvg"
  input: "^MobilenetV1/MobilenetV1/Conv2d_9_pointwise/BatchNorm/AssignMovingAvg_1"
  input: "^MobilenetV1/MobilenetV1/Conv2d_12_depthwise/BatchNorm/AssignMovingAvg_1"
  input: "^MobilenetV1/MobilenetV1/Conv2d_3_depthwise/BatchNorm/AssignMovingAvg"
  input: "^MobilenetV1/MobilenetV1/Conv2d_8_pointwise/BatchNorm/AssignMovingAvg"
  input: "^MobilenetV1/MobilenetV1/Conv2d_12_pointwise/BatchNorm/AssignMovingAvg_1"
  input: "^MobilenetV1/MobilenetV1/Conv2d_13_pointwise/BatchNorm/AssignMovingAvg"
  input: "^MobilenetV1/MobilenetV1/Conv2d_3_pointwise/BatchNorm/AssignMovingAvg"
  input: "^MobilenetV1/MobilenetV1/Conv2d_6_depthwise/BatchNorm/AssignMovingAvg"
  input: "^MobilenetV1/MobilenetV1/Conv2d_10_depthwise/BatchNorm/AssignMovingAvg_1"
  input: "^MobilenetV1/MobilenetV1/Conv2d_11_pointwise/BatchNorm/AssignMovingAvg"
  input: "^MobilenetV1/MobilenetV1/Conv2d_1_depthwise/BatchNorm/AssignMovingAvg"
  input: "^MobilenetV1/MobilenetV1/Conv2d_6_pointwise/BatchNorm/AssignMovingAvg"
  input: "^MobilenetV1/MobilenetV1/Conv2d_9_depthwise/BatchNorm/AssignMovingAvg"
  input: "^MobilenetV1/MobilenetV1/Conv2d_13_depthwise/BatchNorm/AssignMovingAvg_1"
  input: "^MobilenetV1/MobilenetV1/Conv2d_4_depthwise/BatchNorm/AssignMovingAvg"
  input: "^MobilenetV1/MobilenetV1/Conv2d_9_pointwise/BatchNorm/AssignMovingAvg"
  input: "^MobilenetV1/MobilenetV1/Conv2d_12_depthwise/BatchNorm/AssignMovingAvg"
  input: "^MobilenetV1/MobilenetV1/Conv2d_0/BatchNorm/AssignMovingAvg"
  input: "^MobilenetV1/MobilenetV1/Conv2d_7_depthwise/BatchNorm/AssignMovingAvg"
  input: "^MobilenetV1/MobilenetV1/Conv2d_12_pointwise/BatchNorm/AssignMovingAvg"
  input: "^MobilenetV1/MobilenetV1/Conv2d_3_pointwise/BatchNorm/AssignMovingAvg_1"
  input: "^MobilenetV1/MobilenetV1/Conv2d_10_depthwise/BatchNorm/AssignMovingAvg"
  input: "^MobilenetV1/MobilenetV1/Conv2d_4_depthwise/BatchNorm/AssignMovingAvg_1"
  input: "^MobilenetV1/MobilenetV1/Conv2d_1_depthwise/BatchNorm/AssignMovingAvg_1"
  input: "^MobilenetV1/MobilenetV1/Conv2d_6_pointwise/BatchNorm/AssignMovingAvg_1"
  input: "^MobilenetV1/MobilenetV1/Conv2d_10_pointwise/BatchNorm/AssignMovingAvg"
  input: "^MobilenetV1/MobilenetV1/Conv2d_13_depthwise/BatchNorm/AssignMovingAvg"
  input: "^MobilenetV1/MobilenetV1/Conv2d_1_pointwise/BatchNorm/AssignMovingAvg_1"
}
node {
  name: "control_dependency"
  op: "Identity"
  input: "total_loss"
  input: "^update_barrier"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@total_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/grad_ys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/Fill"
  op: "Fill"
  input: "gradients/Shape"
  input: "gradients/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/total_loss_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Fill"
}
node {
  name: "gradients/total_loss_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Fill"
  input: "^gradients/total_loss_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/total_loss_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Fill"
  input: "^gradients/total_loss_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/total_loss_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/Fill"
  input: "^gradients/total_loss_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/total_loss_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/Fill"
  input: "^gradients/total_loss_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/total_loss_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/Fill"
  input: "^gradients/total_loss_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/total_loss_grad/tuple/control_dependency_5"
  op: "Identity"
  input: "gradients/Fill"
  input: "^gradients/total_loss_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/total_loss_grad/tuple/control_dependency_6"
  op: "Identity"
  input: "gradients/Fill"
  input: "^gradients/total_loss_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/total_loss_grad/tuple/control_dependency_7"
  op: "Identity"
  input: "gradients/Fill"
  input: "^gradients/total_loss_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/total_loss_grad/tuple/control_dependency_8"
  op: "Identity"
  input: "gradients/Fill"
  input: "^gradients/total_loss_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/total_loss_grad/tuple/control_dependency_9"
  op: "Identity"
  input: "gradients/Fill"
  input: "^gradients/total_loss_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/total_loss_grad/tuple/control_dependency_10"
  op: "Identity"
  input: "gradients/Fill"
  input: "^gradients/total_loss_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/total_loss_grad/tuple/control_dependency_11"
  op: "Identity"
  input: "gradients/Fill"
  input: "^gradients/total_loss_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/total_loss_grad/tuple/control_dependency_12"
  op: "Identity"
  input: "gradients/Fill"
  input: "^gradients/total_loss_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/total_loss_grad/tuple/control_dependency_13"
  op: "Identity"
  input: "gradients/Fill"
  input: "^gradients/total_loss_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/total_loss_grad/tuple/control_dependency_14"
  op: "Identity"
  input: "gradients/Fill"
  input: "^gradients/total_loss_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/total_loss_grad/tuple/control_dependency_15"
  op: "Identity"
  input: "gradients/Fill"
  input: "^gradients/total_loss_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/value_grad/zeros_like/shape_as_tensor"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/value_grad/zeros_like/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/value_grad/zeros_like"
  op: "Fill"
  input: "gradients/softmax_cross_entropy_loss/value_grad/zeros_like/shape_as_tensor"
  input: "gradients/softmax_cross_entropy_loss/value_grad/zeros_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/value_grad/Select"
  op: "Select"
  input: "softmax_cross_entropy_loss/Greater"
  input: "gradients/total_loss_grad/tuple/control_dependency"
  input: "gradients/softmax_cross_entropy_loss/value_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/value_grad/Select_1"
  op: "Select"
  input: "softmax_cross_entropy_loss/Greater"
  input: "gradients/softmax_cross_entropy_loss/value_grad/zeros_like"
  input: "gradients/total_loss_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/value_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/softmax_cross_entropy_loss/value_grad/Select"
  input: "^gradients/softmax_cross_entropy_loss/value_grad/Select_1"
}
node {
  name: "gradients/softmax_cross_entropy_loss/value_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/softmax_cross_entropy_loss/value_grad/Select"
  input: "^gradients/softmax_cross_entropy_loss/value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/softmax_cross_entropy_loss/value_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/value_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/softmax_cross_entropy_loss/value_grad/Select_1"
  input: "^gradients/softmax_cross_entropy_loss/value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/softmax_cross_entropy_loss/value_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_0/kernel/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "gradients/total_loss_grad/tuple/control_dependency_1"
  input: "MobilenetV1/MobilenetV1/Conv2d_0/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_0/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "gradients/total_loss_grad/tuple/control_dependency_1"
  input: "MobilenetV1/MobilenetV1/Conv2d_0/kernel/Regularizer/l2_regularizer/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_0/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_0/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_0/kernel/Regularizer/l2_regularizer_grad/Mul_1"
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_0/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_0/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_0/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_0/kernel/Regularizer/l2_regularizer_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_0/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_0/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_0/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_0/kernel/Regularizer/l2_regularizer_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_1_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "gradients/total_loss_grad/tuple/control_dependency_2"
  input: "MobilenetV1/MobilenetV1/Conv2d_1_pointwise/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_1_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "gradients/total_loss_grad/tuple/control_dependency_2"
  input: "MobilenetV1/MobilenetV1/Conv2d_1_pointwise/kernel/Regularizer/l2_regularizer/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_1_pointwise/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_1_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_1_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul_1"
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_1_pointwise/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_1_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_1_pointwise/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_1_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_1_pointwise/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_1_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_1_pointwise/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_1_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_2_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "gradients/total_loss_grad/tuple/control_dependency_3"
  input: "MobilenetV1/MobilenetV1/Conv2d_2_pointwise/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_2_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "gradients/total_loss_grad/tuple/control_dependency_3"
  input: "MobilenetV1/MobilenetV1/Conv2d_2_pointwise/kernel/Regularizer/l2_regularizer/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_2_pointwise/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_2_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_2_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul_1"
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_2_pointwise/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_2_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_2_pointwise/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_2_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_2_pointwise/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_2_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_2_pointwise/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_2_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_3_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "gradients/total_loss_grad/tuple/control_dependency_4"
  input: "MobilenetV1/MobilenetV1/Conv2d_3_pointwise/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_3_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "gradients/total_loss_grad/tuple/control_dependency_4"
  input: "MobilenetV1/MobilenetV1/Conv2d_3_pointwise/kernel/Regularizer/l2_regularizer/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_3_pointwise/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_3_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_3_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul_1"
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_3_pointwise/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_3_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_3_pointwise/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_3_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_3_pointwise/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_3_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_3_pointwise/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_3_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_4_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "gradients/total_loss_grad/tuple/control_dependency_5"
  input: "MobilenetV1/MobilenetV1/Conv2d_4_pointwise/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_4_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "gradients/total_loss_grad/tuple/control_dependency_5"
  input: "MobilenetV1/MobilenetV1/Conv2d_4_pointwise/kernel/Regularizer/l2_regularizer/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_4_pointwise/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_4_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_4_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul_1"
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_4_pointwise/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_4_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_4_pointwise/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_4_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_4_pointwise/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_4_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_4_pointwise/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_4_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_5_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "gradients/total_loss_grad/tuple/control_dependency_6"
  input: "MobilenetV1/MobilenetV1/Conv2d_5_pointwise/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_5_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "gradients/total_loss_grad/tuple/control_dependency_6"
  input: "MobilenetV1/MobilenetV1/Conv2d_5_pointwise/kernel/Regularizer/l2_regularizer/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_5_pointwise/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_5_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_5_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul_1"
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_5_pointwise/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_5_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_5_pointwise/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_5_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_5_pointwise/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_5_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_5_pointwise/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_5_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_6_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "gradients/total_loss_grad/tuple/control_dependency_7"
  input: "MobilenetV1/MobilenetV1/Conv2d_6_pointwise/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_6_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "gradients/total_loss_grad/tuple/control_dependency_7"
  input: "MobilenetV1/MobilenetV1/Conv2d_6_pointwise/kernel/Regularizer/l2_regularizer/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_6_pointwise/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_6_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_6_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul_1"
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_6_pointwise/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_6_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_6_pointwise/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_6_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_6_pointwise/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_6_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_6_pointwise/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_6_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_7_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "gradients/total_loss_grad/tuple/control_dependency_8"
  input: "MobilenetV1/MobilenetV1/Conv2d_7_pointwise/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_7_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "gradients/total_loss_grad/tuple/control_dependency_8"
  input: "MobilenetV1/MobilenetV1/Conv2d_7_pointwise/kernel/Regularizer/l2_regularizer/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_7_pointwise/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_7_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_7_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul_1"
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_7_pointwise/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_7_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_7_pointwise/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_7_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_7_pointwise/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_7_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_7_pointwise/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_7_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_8_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "gradients/total_loss_grad/tuple/control_dependency_9"
  input: "MobilenetV1/MobilenetV1/Conv2d_8_pointwise/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_8_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "gradients/total_loss_grad/tuple/control_dependency_9"
  input: "MobilenetV1/MobilenetV1/Conv2d_8_pointwise/kernel/Regularizer/l2_regularizer/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_8_pointwise/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_8_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_8_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul_1"
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_8_pointwise/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_8_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_8_pointwise/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_8_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_8_pointwise/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_8_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_8_pointwise/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_8_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_9_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "gradients/total_loss_grad/tuple/control_dependency_10"
  input: "MobilenetV1/MobilenetV1/Conv2d_9_pointwise/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_9_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "gradients/total_loss_grad/tuple/control_dependency_10"
  input: "MobilenetV1/MobilenetV1/Conv2d_9_pointwise/kernel/Regularizer/l2_regularizer/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_9_pointwise/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_9_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_9_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul_1"
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_9_pointwise/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_9_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_9_pointwise/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_9_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_9_pointwise/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_9_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_9_pointwise/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_9_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_10_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "gradients/total_loss_grad/tuple/control_dependency_11"
  input: "MobilenetV1/MobilenetV1/Conv2d_10_pointwise/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_10_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "gradients/total_loss_grad/tuple/control_dependency_11"
  input: "MobilenetV1/MobilenetV1/Conv2d_10_pointwise/kernel/Regularizer/l2_regularizer/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_10_pointwise/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_10_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_10_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul_1"
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_10_pointwise/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_10_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_10_pointwise/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_10_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_10_pointwise/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_10_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_10_pointwise/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_10_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_11_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "gradients/total_loss_grad/tuple/control_dependency_12"
  input: "MobilenetV1/MobilenetV1/Conv2d_11_pointwise/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_11_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "gradients/total_loss_grad/tuple/control_dependency_12"
  input: "MobilenetV1/MobilenetV1/Conv2d_11_pointwise/kernel/Regularizer/l2_regularizer/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_11_pointwise/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_11_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_11_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul_1"
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_11_pointwise/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_11_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_11_pointwise/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_11_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_11_pointwise/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_11_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_11_pointwise/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_11_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_12_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "gradients/total_loss_grad/tuple/control_dependency_13"
  input: "MobilenetV1/MobilenetV1/Conv2d_12_pointwise/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_12_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "gradients/total_loss_grad/tuple/control_dependency_13"
  input: "MobilenetV1/MobilenetV1/Conv2d_12_pointwise/kernel/Regularizer/l2_regularizer/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_12_pointwise/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_12_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_12_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul_1"
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_12_pointwise/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_12_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_12_pointwise/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_12_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_12_pointwise/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_12_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_12_pointwise/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_12_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_13_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "gradients/total_loss_grad/tuple/control_dependency_14"
  input: "MobilenetV1/MobilenetV1/Conv2d_13_pointwise/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_13_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "gradients/total_loss_grad/tuple/control_dependency_14"
  input: "MobilenetV1/MobilenetV1/Conv2d_13_pointwise/kernel/Regularizer/l2_regularizer/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_13_pointwise/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_13_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_13_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul_1"
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_13_pointwise/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_13_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_13_pointwise/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_13_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_13_pointwise/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_13_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_13_pointwise/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_13_pointwise/kernel/Regularizer/l2_regularizer_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/Logits/Conv2d_1c_1x1/kernel/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "gradients/total_loss_grad/tuple/control_dependency_15"
  input: "MobilenetV1/Logits/Conv2d_1c_1x1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/Logits/Conv2d_1c_1x1/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "gradients/total_loss_grad/tuple/control_dependency_15"
  input: "MobilenetV1/Logits/Conv2d_1c_1x1/kernel/Regularizer/l2_regularizer/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/Logits/Conv2d_1c_1x1/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/MobilenetV1/Logits/Conv2d_1c_1x1/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/MobilenetV1/Logits/Conv2d_1c_1x1/kernel/Regularizer/l2_regularizer_grad/Mul_1"
}
node {
  name: "gradients/MobilenetV1/Logits/Conv2d_1c_1x1/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/MobilenetV1/Logits/Conv2d_1c_1x1/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/MobilenetV1/Logits/Conv2d_1c_1x1/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/Logits/Conv2d_1c_1x1/kernel/Regularizer/l2_regularizer_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/Logits/Conv2d_1c_1x1/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/MobilenetV1/Logits/Conv2d_1c_1x1/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  input: "^gradients/MobilenetV1/Logits/Conv2d_1c_1x1/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/Logits/Conv2d_1c_1x1/kernel/Regularizer/l2_regularizer_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/div_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/div_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/softmax_cross_entropy_loss/div_grad/Shape"
  input: "gradients/softmax_cross_entropy_loss/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/div_grad/RealDiv"
  op: "RealDiv"
  input: "gradients/softmax_cross_entropy_loss/value_grad/tuple/control_dependency"
  input: "softmax_cross_entropy_loss/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/div_grad/Sum"
  op: "Sum"
  input: "gradients/softmax_cross_entropy_loss/div_grad/RealDiv"
  input: "gradients/softmax_cross_entropy_loss/div_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/div_grad/Reshape"
  op: "Reshape"
  input: "gradients/softmax_cross_entropy_loss/div_grad/Sum"
  input: "gradients/softmax_cross_entropy_loss/div_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/div_grad/Neg"
  op: "Neg"
  input: "softmax_cross_entropy_loss/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "gradients/softmax_cross_entropy_loss/div_grad/Neg"
  input: "softmax_cross_entropy_loss/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "gradients/softmax_cross_entropy_loss/div_grad/RealDiv_1"
  input: "softmax_cross_entropy_loss/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/div_grad/mul"
  op: "Mul"
  input: "gradients/softmax_cross_entropy_loss/value_grad/tuple/control_dependency"
  input: "gradients/softmax_cross_entropy_loss/div_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/div_grad/Sum_1"
  op: "Sum"
  input: "gradients/softmax_cross_entropy_loss/div_grad/mul"
  input: "gradients/softmax_cross_entropy_loss/div_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/div_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/softmax_cross_entropy_loss/div_grad/Sum_1"
  input: "gradients/softmax_cross_entropy_loss/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/div_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/softmax_cross_entropy_loss/div_grad/Reshape"
  input: "^gradients/softmax_cross_entropy_loss/div_grad/Reshape_1"
}
node {
  name: "gradients/softmax_cross_entropy_loss/div_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/softmax_cross_entropy_loss/div_grad/Reshape"
  input: "^gradients/softmax_cross_entropy_loss/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/softmax_cross_entropy_loss/div_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/div_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/softmax_cross_entropy_loss/div_grad/Reshape_1"
  input: "^gradients/softmax_cross_entropy_loss/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/softmax_cross_entropy_loss/div_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_0/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "MobilenetV1/Conv2d_0/weights/read"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_0/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_1_pointwise/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "MobilenetV1/Conv2d_1_pointwise/weights/read"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_1_pointwise/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 24
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_2_pointwise/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "MobilenetV1/Conv2d_2_pointwise/weights/read"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_2_pointwise/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 48
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_3_pointwise/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "MobilenetV1/Conv2d_3_pointwise/weights/read"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_3_pointwise/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_4_pointwise/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "MobilenetV1/Conv2d_4_pointwise/weights/read"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_4_pointwise/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_5_pointwise/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "MobilenetV1/Conv2d_5_pointwise/weights/read"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_5_pointwise/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 192
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_6_pointwise/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "MobilenetV1/Conv2d_6_pointwise/weights/read"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_6_pointwise/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 192
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_7_pointwise/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "MobilenetV1/Conv2d_7_pointwise/weights/read"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_7_pointwise/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_8_pointwise/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "MobilenetV1/Conv2d_8_pointwise/weights/read"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_8_pointwise/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_9_pointwise/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "MobilenetV1/Conv2d_9_pointwise/weights/read"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_9_pointwise/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_10_pointwise/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "MobilenetV1/Conv2d_10_pointwise/weights/read"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_10_pointwise/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_11_pointwise/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "MobilenetV1/Conv2d_11_pointwise/weights/read"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_11_pointwise/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_12_pointwise/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "MobilenetV1/Conv2d_12_pointwise/weights/read"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_12_pointwise/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_13_pointwise/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "MobilenetV1/Conv2d_13_pointwise/weights/read"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_13_pointwise/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/Logits/Conv2d_1c_1x1/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "MobilenetV1/Logits/Conv2d_1c_1x1/weights/read"
  input: "gradients/MobilenetV1/Logits/Conv2d_1c_1x1/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 768
          }
          dim {
            size: 36
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Sum_1_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Sum_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/softmax_cross_entropy_loss/div_grad/tuple/control_dependency"
  input: "gradients/softmax_cross_entropy_loss/Sum_1_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Sum_1_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Sum_1_grad/Tile"
  op: "Tile"
  input: "gradients/softmax_cross_entropy_loss/Sum_1_grad/Reshape"
  input: "gradients/softmax_cross_entropy_loss/Sum_1_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Sum_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Sum_grad/Reshape"
  op: "Reshape"
  input: "gradients/softmax_cross_entropy_loss/Sum_1_grad/Tile"
  input: "gradients/softmax_cross_entropy_loss/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Sum_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Sum_grad/Tile"
  op: "Tile"
  input: "gradients/softmax_cross_entropy_loss/Sum_grad/Reshape"
  input: "gradients/softmax_cross_entropy_loss/Sum_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/Shape"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Mul_grad/Mul"
  op: "Mul"
  input: "gradients/softmax_cross_entropy_loss/Sum_grad/Tile"
  input: "softmax_cross_entropy_loss/ToFloat_1/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Mul_grad/Sum"
  op: "Sum"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/Mul"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/Sum"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Mul_grad/Mul_1"
  op: "Mul"
  input: "softmax_cross_entropy_loss/xentropy/Reshape_2"
  input: "gradients/softmax_cross_entropy_loss/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/Mul_1"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/Sum_1"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/softmax_cross_entropy_loss/Mul_grad/Reshape"
  input: "^gradients/softmax_cross_entropy_loss/Mul_grad/Reshape_1"
}
node {
  name: "gradients/softmax_cross_entropy_loss/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/Reshape"
  input: "^gradients/softmax_cross_entropy_loss/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/softmax_cross_entropy_loss/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/Reshape_1"
  input: "^gradients/softmax_cross_entropy_loss/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/softmax_cross_entropy_loss/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy/Reshape_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/tuple/control_dependency"
  input: "gradients/softmax_cross_entropy_loss/xentropy/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like"
  op: "ZerosLike"
  input: "softmax_cross_entropy_loss/xentropy:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 36
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy_grad/ExpandDims"
  op: "ExpandDims"
  input: "gradients/softmax_cross_entropy_loss/xentropy/Reshape_2_grad/Reshape"
  input: "gradients/softmax_cross_entropy_loss/xentropy_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy_grad/mul"
  op: "Mul"
  input: "gradients/softmax_cross_entropy_loss/xentropy_grad/ExpandDims"
  input: "softmax_cross_entropy_loss/xentropy:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 36
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy_grad/LogSoftmax"
  op: "LogSoftmax"
  input: "softmax_cross_entropy_loss/xentropy/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 36
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy_grad/Neg"
  op: "Neg"
  input: "gradients/softmax_cross_entropy_loss/xentropy_grad/LogSoftmax"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 36
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy_grad/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy_grad/ExpandDims_1"
  op: "ExpandDims"
  input: "gradients/softmax_cross_entropy_loss/xentropy/Reshape_2_grad/Reshape"
  input: "gradients/softmax_cross_entropy_loss/xentropy_grad/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy_grad/mul_1"
  op: "Mul"
  input: "gradients/softmax_cross_entropy_loss/xentropy_grad/ExpandDims_1"
  input: "gradients/softmax_cross_entropy_loss/xentropy_grad/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 36
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/softmax_cross_entropy_loss/xentropy_grad/mul"
  input: "^gradients/softmax_cross_entropy_loss/xentropy_grad/mul_1"
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/softmax_cross_entropy_loss/xentropy_grad/mul"
  input: "^gradients/softmax_cross_entropy_loss/xentropy_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/softmax_cross_entropy_loss/xentropy_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 36
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/softmax_cross_entropy_loss/xentropy_grad/mul_1"
  input: "^gradients/softmax_cross_entropy_loss/xentropy_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/softmax_cross_entropy_loss/xentropy_grad/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 36
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\020\000\000\000$\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/softmax_cross_entropy_loss/xentropy_grad/tuple/control_dependency"
  input: "gradients/softmax_cross_entropy_loss/xentropy/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 36
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/Logits/SpatialSqueeze_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\001\000\000\000\001\000\000\000$\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/Logits/SpatialSqueeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/softmax_cross_entropy_loss/xentropy/Reshape_grad/Reshape"
  input: "gradients/MobilenetV1/Logits/SpatialSqueeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 36
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/Logits/Conv2d_1c_1x1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/MobilenetV1/Logits/SpatialSqueeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 36
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/MobilenetV1/Logits/Conv2d_1c_1x1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/MobilenetV1/Logits/SpatialSqueeze_grad/Reshape"
  input: "^gradients/MobilenetV1/Logits/Conv2d_1c_1x1/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/MobilenetV1/Logits/Conv2d_1c_1x1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/MobilenetV1/Logits/SpatialSqueeze_grad/Reshape"
  input: "^gradients/MobilenetV1/Logits/Conv2d_1c_1x1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/Logits/SpatialSqueeze_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 36
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/Logits/Conv2d_1c_1x1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/MobilenetV1/Logits/Conv2d_1c_1x1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/MobilenetV1/Logits/Conv2d_1c_1x1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/Logits/Conv2d_1c_1x1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 36
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/Logits/Conv2d_1c_1x1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "MobilenetV1/Logits/Dropout_1b/dropout/mul"
  input: "MobilenetV1/Logits/Conv2d_1c_1x1/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/MobilenetV1/Logits/Conv2d_1c_1x1/Conv2D_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\001\000\000\000\001\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/Logits/Conv2d_1c_1x1/Conv2D_grad/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\003\000\000$\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/Logits/Conv2d_1c_1x1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/MobilenetV1/Logits/Conv2d_1c_1x1/Conv2D_grad/Const"
  input: "MobilenetV1/Logits/Conv2d_1c_1x1/weights/read"
  input: "gradients/MobilenetV1/Logits/Conv2d_1c_1x1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/MobilenetV1/Logits/Conv2d_1c_1x1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "MobilenetV1/Logits/Dropout_1b/dropout/mul"
  input: "gradients/MobilenetV1/Logits/Conv2d_1c_1x1/Conv2D_grad/Const_1"
  input: "gradients/MobilenetV1/Logits/Conv2d_1c_1x1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 768
          }
          dim {
            size: 36
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/MobilenetV1/Logits/Conv2d_1c_1x1/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/MobilenetV1/Logits/Conv2d_1c_1x1/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/MobilenetV1/Logits/Conv2d_1c_1x1/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "gradients/MobilenetV1/Logits/Conv2d_1c_1x1/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/MobilenetV1/Logits/Conv2d_1c_1x1/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/MobilenetV1/Logits/Conv2d_1c_1x1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/Logits/Conv2d_1c_1x1/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/Logits/Conv2d_1c_1x1/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/MobilenetV1/Logits/Conv2d_1c_1x1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/MobilenetV1/Logits/Conv2d_1c_1x1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/Logits/Conv2d_1c_1x1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 768
          }
          dim {
            size: 36
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/Logits/Dropout_1b/dropout/mul_grad/Mul"
  op: "Mul"
  input: "gradients/MobilenetV1/Logits/Conv2d_1c_1x1/Conv2D_grad/tuple/control_dependency"
  input: "MobilenetV1/Logits/Dropout_1b/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/Logits/Dropout_1b/dropout/mul_grad/Mul_1"
  op: "Mul"
  input: "gradients/MobilenetV1/Logits/Conv2d_1c_1x1/Conv2D_grad/tuple/control_dependency"
  input: "MobilenetV1/Logits/Dropout_1b/dropout/div"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/Logits/Dropout_1b/dropout/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/MobilenetV1/Logits/Dropout_1b/dropout/mul_grad/Mul"
  input: "^gradients/MobilenetV1/Logits/Dropout_1b/dropout/mul_grad/Mul_1"
}
node {
  name: "gradients/MobilenetV1/Logits/Dropout_1b/dropout/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/MobilenetV1/Logits/Dropout_1b/dropout/mul_grad/Mul"
  input: "^gradients/MobilenetV1/Logits/Dropout_1b/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/Logits/Dropout_1b/dropout/mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/Logits/Dropout_1b/dropout/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/MobilenetV1/Logits/Dropout_1b/dropout/mul_grad/Mul_1"
  input: "^gradients/MobilenetV1/Logits/Dropout_1b/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/Logits/Dropout_1b/dropout/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN"
  op: "AddN"
  input: "gradients/MobilenetV1/Logits/Conv2d_1c_1x1/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "gradients/MobilenetV1/Logits/Conv2d_1c_1x1/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/Logits/Conv2d_1c_1x1/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 768
          }
          dim {
            size: 36
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/Logits/Dropout_1b/dropout/div_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\001\000\000\000\001\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/Logits/Dropout_1b/dropout/div_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/Logits/Dropout_1b/dropout/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/MobilenetV1/Logits/Dropout_1b/dropout/div_grad/Shape"
  input: "gradients/MobilenetV1/Logits/Dropout_1b/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/Logits/Dropout_1b/dropout/div_grad/RealDiv"
  op: "RealDiv"
  input: "gradients/MobilenetV1/Logits/Dropout_1b/dropout/mul_grad/tuple/control_dependency"
  input: "MobilenetV1/Logits/Dropout_1b/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/Logits/Dropout_1b/dropout/div_grad/Sum"
  op: "Sum"
  input: "gradients/MobilenetV1/Logits/Dropout_1b/dropout/div_grad/RealDiv"
  input: "gradients/MobilenetV1/Logits/Dropout_1b/dropout/div_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/MobilenetV1/Logits/Dropout_1b/dropout/div_grad/Reshape"
  op: "Reshape"
  input: "gradients/MobilenetV1/Logits/Dropout_1b/dropout/div_grad/Sum"
  input: "gradients/MobilenetV1/Logits/Dropout_1b/dropout/div_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/Logits/Dropout_1b/dropout/div_grad/Neg"
  op: "Neg"
  input: "MobilenetV1/Logits/AvgPool_1a/AvgPool"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/Logits/Dropout_1b/dropout/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "gradients/MobilenetV1/Logits/Dropout_1b/dropout/div_grad/Neg"
  input: "MobilenetV1/Logits/Dropout_1b/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/Logits/Dropout_1b/dropout/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "gradients/MobilenetV1/Logits/Dropout_1b/dropout/div_grad/RealDiv_1"
  input: "MobilenetV1/Logits/Dropout_1b/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/Logits/Dropout_1b/dropout/div_grad/mul"
  op: "Mul"
  input: "gradients/MobilenetV1/Logits/Dropout_1b/dropout/mul_grad/tuple/control_dependency"
  input: "gradients/MobilenetV1/Logits/Dropout_1b/dropout/div_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/Logits/Dropout_1b/dropout/div_grad/Sum_1"
  op: "Sum"
  input: "gradients/MobilenetV1/Logits/Dropout_1b/dropout/div_grad/mul"
  input: "gradients/MobilenetV1/Logits/Dropout_1b/dropout/div_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/MobilenetV1/Logits/Dropout_1b/dropout/div_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/MobilenetV1/Logits/Dropout_1b/dropout/div_grad/Sum_1"
  input: "gradients/MobilenetV1/Logits/Dropout_1b/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/Logits/Dropout_1b/dropout/div_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/MobilenetV1/Logits/Dropout_1b/dropout/div_grad/Reshape"
  input: "^gradients/MobilenetV1/Logits/Dropout_1b/dropout/div_grad/Reshape_1"
}
node {
  name: "gradients/MobilenetV1/Logits/Dropout_1b/dropout/div_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/MobilenetV1/Logits/Dropout_1b/dropout/div_grad/Reshape"
  input: "^gradients/MobilenetV1/Logits/Dropout_1b/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/Logits/Dropout_1b/dropout/div_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/Logits/Dropout_1b/dropout/div_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/MobilenetV1/Logits/Dropout_1b/dropout/div_grad/Reshape_1"
  input: "^gradients/MobilenetV1/Logits/Dropout_1b/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/Logits/Dropout_1b/dropout/div_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/Logits/AvgPool_1a/AvgPool_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\004\000\000\000\004\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/Logits/AvgPool_1a/AvgPool_grad/AvgPoolGrad"
  op: "AvgPoolGrad"
  input: "gradients/MobilenetV1/Logits/AvgPool_1a/AvgPool_grad/Shape"
  input: "gradients/MobilenetV1/Logits/Dropout_1b/dropout/div_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 4
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_13_pointwise/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "gradients/MobilenetV1/Logits/AvgPool_1a/AvgPool_grad/AvgPoolGrad"
  input: "MobilenetV1/MobilenetV1/Conv2d_13_pointwise/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_1"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_13_pointwise/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_2"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_13_pointwise/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_3"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_13_pointwise/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_4"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_13_pointwise/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_13_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_13_pointwise/Relu6_grad/Relu6Grad"
  input: "MobilenetV1/MobilenetV1/Conv2d_13_pointwise/Conv2D"
  input: "MobilenetV1/Conv2d_13_pointwise/BatchNorm/gamma/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_13_pointwise/BatchNorm/FusedBatchNorm:3"
  input: "MobilenetV1/MobilenetV1/Conv2d_13_pointwise/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 768
          }
        }
        shape {
          dim {
            size: 768
          }
        }
        shape {
          dim {
            size: 768
          }
        }
        shape {
          dim {
          }
        }
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_13_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_13_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_13_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_13_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_13_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_13_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_13_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_13_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_13_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_13_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_13_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_13_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_13_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_13_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_13_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_13_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_13_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_13_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_13_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_13_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_13_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_13_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_13_pointwise/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "MobilenetV1/MobilenetV1/Conv2d_13_depthwise/Relu6"
  input: "MobilenetV1/Conv2d_13_pointwise/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_13_pointwise/Conv2D_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\004\000\000\000\004\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_13_pointwise/Conv2D_grad/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\003\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_13_pointwise/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_13_pointwise/Conv2D_grad/Const"
  input: "MobilenetV1/Conv2d_13_pointwise/weights/read"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_13_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_13_pointwise/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "MobilenetV1/MobilenetV1/Conv2d_13_depthwise/Relu6"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_13_pointwise/Conv2D_grad/Const_1"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_13_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_13_pointwise/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_13_pointwise/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_13_pointwise/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_13_pointwise/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_13_pointwise/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_13_pointwise/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_13_pointwise/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_13_pointwise/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_13_pointwise/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_13_pointwise/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_13_pointwise/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_13_depthwise/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_13_pointwise/Conv2D_grad/tuple/control_dependency"
  input: "MobilenetV1/MobilenetV1/Conv2d_13_depthwise/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_1"
  op: "AddN"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_13_pointwise/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_13_pointwise/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_13_pointwise/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_5"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_13_depthwise/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_6"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_13_depthwise/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_7"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_13_depthwise/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_8"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_13_depthwise/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_13_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_13_depthwise/Relu6_grad/Relu6Grad"
  input: "MobilenetV1/MobilenetV1/Conv2d_13_depthwise/depthwise"
  input: "MobilenetV1/Conv2d_13_depthwise/BatchNorm/gamma/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_13_depthwise/BatchNorm/FusedBatchNorm:3"
  input: "MobilenetV1/MobilenetV1/Conv2d_13_depthwise/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 768
          }
        }
        shape {
          dim {
            size: 768
          }
        }
        shape {
          dim {
            size: 768
          }
        }
        shape {
          dim {
          }
        }
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_13_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_13_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_13_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_13_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_13_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_13_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_13_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_13_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_13_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_13_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_13_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_13_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_13_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_13_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_13_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_13_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_13_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_13_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_13_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_13_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_13_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_13_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_13_depthwise/depthwise_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\004\000\000\000\004\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_13_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  op: "DepthwiseConv2dNativeBackpropInput"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_13_depthwise/depthwise_grad/Shape"
  input: "MobilenetV1/Conv2d_13_depthwise/depthwise_weights/read"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_13_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_13_depthwise/depthwise_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_13_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  op: "DepthwiseConv2dNativeBackpropFilter"
  input: "MobilenetV1/MobilenetV1/Conv2d_12_pointwise/Relu6"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_13_depthwise/depthwise_grad/Shape_1"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_13_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 768
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_13_depthwise/depthwise_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_13_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_13_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_13_depthwise/depthwise_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_13_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_13_depthwise/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_13_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_13_depthwise/depthwise_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_13_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_13_depthwise/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_13_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 768
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_12_pointwise/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_13_depthwise/depthwise_grad/tuple/control_dependency"
  input: "MobilenetV1/MobilenetV1/Conv2d_12_pointwise/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_9"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_12_pointwise/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_10"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_12_pointwise/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_11"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_12_pointwise/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_12"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_12_pointwise/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_12_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_12_pointwise/Relu6_grad/Relu6Grad"
  input: "MobilenetV1/MobilenetV1/Conv2d_12_pointwise/Conv2D"
  input: "MobilenetV1/Conv2d_12_pointwise/BatchNorm/gamma/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_12_pointwise/BatchNorm/FusedBatchNorm:3"
  input: "MobilenetV1/MobilenetV1/Conv2d_12_pointwise/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 768
          }
        }
        shape {
          dim {
            size: 768
          }
        }
        shape {
          dim {
            size: 768
          }
        }
        shape {
          dim {
          }
        }
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_12_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_12_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_12_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_12_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_12_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_12_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_12_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_12_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_12_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_12_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_12_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_12_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_12_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_12_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_12_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_12_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_12_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_12_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_12_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_12_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_12_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_12_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_12_pointwise/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "MobilenetV1/MobilenetV1/Conv2d_12_depthwise/Relu6"
  input: "MobilenetV1/Conv2d_12_pointwise/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_12_pointwise/Conv2D_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\004\000\000\000\004\000\000\000\200\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_12_pointwise/Conv2D_grad/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\001\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_12_pointwise/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_12_pointwise/Conv2D_grad/Const"
  input: "MobilenetV1/Conv2d_12_pointwise/weights/read"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_12_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_12_pointwise/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "MobilenetV1/MobilenetV1/Conv2d_12_depthwise/Relu6"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_12_pointwise/Conv2D_grad/Const_1"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_12_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_12_pointwise/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_12_pointwise/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_12_pointwise/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_12_pointwise/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_12_pointwise/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_12_pointwise/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_12_pointwise/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_12_pointwise/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_12_pointwise/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_12_pointwise/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_12_pointwise/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_12_depthwise/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_12_pointwise/Conv2D_grad/tuple/control_dependency"
  input: "MobilenetV1/MobilenetV1/Conv2d_12_depthwise/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_2"
  op: "AddN"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_12_pointwise/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_12_pointwise/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_12_pointwise/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_13"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_12_depthwise/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_14"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_12_depthwise/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_15"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_12_depthwise/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_16"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_12_depthwise/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_12_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_12_depthwise/Relu6_grad/Relu6Grad"
  input: "MobilenetV1/MobilenetV1/Conv2d_12_depthwise/depthwise"
  input: "MobilenetV1/Conv2d_12_depthwise/BatchNorm/gamma/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_12_depthwise/BatchNorm/FusedBatchNorm:3"
  input: "MobilenetV1/MobilenetV1/Conv2d_12_depthwise/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 384
          }
        }
        shape {
          dim {
            size: 384
          }
        }
        shape {
          dim {
            size: 384
          }
        }
        shape {
          dim {
          }
        }
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_12_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_12_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_12_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_12_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_12_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_12_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_12_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_12_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_12_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_12_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_12_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_12_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_12_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_12_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_12_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_12_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_12_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_12_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_12_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_12_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_12_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_12_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_12_depthwise/depthwise_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\010\000\000\000\010\000\000\000\200\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_12_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  op: "DepthwiseConv2dNativeBackpropInput"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_12_depthwise/depthwise_grad/Shape"
  input: "MobilenetV1/Conv2d_12_depthwise/depthwise_weights/read"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_12_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_12_depthwise/depthwise_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_12_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  op: "DepthwiseConv2dNativeBackpropFilter"
  input: "MobilenetV1/MobilenetV1/Conv2d_11_pointwise/Relu6"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_12_depthwise/depthwise_grad/Shape_1"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_12_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_12_depthwise/depthwise_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_12_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_12_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_12_depthwise/depthwise_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_12_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_12_depthwise/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_12_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_12_depthwise/depthwise_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_12_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_12_depthwise/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_12_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_11_pointwise/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_12_depthwise/depthwise_grad/tuple/control_dependency"
  input: "MobilenetV1/MobilenetV1/Conv2d_11_pointwise/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_17"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_11_pointwise/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_18"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_11_pointwise/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_19"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_11_pointwise/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_20"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_11_pointwise/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_11_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_11_pointwise/Relu6_grad/Relu6Grad"
  input: "MobilenetV1/MobilenetV1/Conv2d_11_pointwise/Conv2D"
  input: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/gamma/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_11_pointwise/BatchNorm/FusedBatchNorm:3"
  input: "MobilenetV1/MobilenetV1/Conv2d_11_pointwise/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 384
          }
        }
        shape {
          dim {
            size: 384
          }
        }
        shape {
          dim {
            size: 384
          }
        }
        shape {
          dim {
          }
        }
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_11_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_11_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_11_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_11_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_11_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_11_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_11_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_11_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_11_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_11_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_11_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_11_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_11_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_11_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_11_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_11_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_11_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_11_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_11_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_11_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_11_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_11_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_11_pointwise/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "MobilenetV1/MobilenetV1/Conv2d_11_depthwise/Relu6"
  input: "MobilenetV1/Conv2d_11_pointwise/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_11_pointwise/Conv2D_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\010\000\000\000\010\000\000\000\200\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_11_pointwise/Conv2D_grad/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\001\000\000\200\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_11_pointwise/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_11_pointwise/Conv2D_grad/Const"
  input: "MobilenetV1/Conv2d_11_pointwise/weights/read"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_11_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_11_pointwise/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "MobilenetV1/MobilenetV1/Conv2d_11_depthwise/Relu6"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_11_pointwise/Conv2D_grad/Const_1"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_11_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_11_pointwise/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_11_pointwise/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_11_pointwise/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_11_pointwise/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_11_pointwise/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_11_pointwise/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_11_pointwise/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_11_pointwise/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_11_pointwise/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_11_pointwise/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_11_pointwise/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_11_depthwise/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_11_pointwise/Conv2D_grad/tuple/control_dependency"
  input: "MobilenetV1/MobilenetV1/Conv2d_11_depthwise/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_3"
  op: "AddN"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_11_pointwise/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_11_pointwise/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_11_pointwise/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_21"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_11_depthwise/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_22"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_11_depthwise/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_23"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_11_depthwise/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_24"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_11_depthwise/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_11_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_11_depthwise/Relu6_grad/Relu6Grad"
  input: "MobilenetV1/MobilenetV1/Conv2d_11_depthwise/depthwise"
  input: "MobilenetV1/Conv2d_11_depthwise/BatchNorm/gamma/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_11_depthwise/BatchNorm/FusedBatchNorm:3"
  input: "MobilenetV1/MobilenetV1/Conv2d_11_depthwise/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 384
          }
        }
        shape {
          dim {
            size: 384
          }
        }
        shape {
          dim {
            size: 384
          }
        }
        shape {
          dim {
          }
        }
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_11_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_11_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_11_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_11_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_11_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_11_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_11_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_11_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_11_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_11_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_11_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_11_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_11_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_11_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_11_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_11_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_11_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_11_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_11_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_11_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_11_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_11_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_11_depthwise/depthwise_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\010\000\000\000\010\000\000\000\200\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_11_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  op: "DepthwiseConv2dNativeBackpropInput"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_11_depthwise/depthwise_grad/Shape"
  input: "MobilenetV1/Conv2d_11_depthwise/depthwise_weights/read"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_11_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_11_depthwise/depthwise_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_11_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  op: "DepthwiseConv2dNativeBackpropFilter"
  input: "MobilenetV1/MobilenetV1/Conv2d_10_pointwise/Relu6"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_11_depthwise/depthwise_grad/Shape_1"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_11_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_11_depthwise/depthwise_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_11_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_11_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_11_depthwise/depthwise_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_11_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_11_depthwise/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_11_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_11_depthwise/depthwise_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_11_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_11_depthwise/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_11_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_10_pointwise/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_11_depthwise/depthwise_grad/tuple/control_dependency"
  input: "MobilenetV1/MobilenetV1/Conv2d_10_pointwise/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_25"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_10_pointwise/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_26"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_10_pointwise/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_27"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_10_pointwise/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_28"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_10_pointwise/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_10_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_10_pointwise/Relu6_grad/Relu6Grad"
  input: "MobilenetV1/MobilenetV1/Conv2d_10_pointwise/Conv2D"
  input: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/gamma/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_10_pointwise/BatchNorm/FusedBatchNorm:3"
  input: "MobilenetV1/MobilenetV1/Conv2d_10_pointwise/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 384
          }
        }
        shape {
          dim {
            size: 384
          }
        }
        shape {
          dim {
            size: 384
          }
        }
        shape {
          dim {
          }
        }
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_10_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_10_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_10_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_10_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_10_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_10_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_10_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_10_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_10_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_10_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_10_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_10_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_10_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_10_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_10_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_10_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_10_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_10_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_10_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_10_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_10_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_10_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_10_pointwise/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "MobilenetV1/MobilenetV1/Conv2d_10_depthwise/Relu6"
  input: "MobilenetV1/Conv2d_10_pointwise/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_10_pointwise/Conv2D_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\010\000\000\000\010\000\000\000\200\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_10_pointwise/Conv2D_grad/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\001\000\000\200\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_10_pointwise/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_10_pointwise/Conv2D_grad/Const"
  input: "MobilenetV1/Conv2d_10_pointwise/weights/read"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_10_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_10_pointwise/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "MobilenetV1/MobilenetV1/Conv2d_10_depthwise/Relu6"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_10_pointwise/Conv2D_grad/Const_1"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_10_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_10_pointwise/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_10_pointwise/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_10_pointwise/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_10_pointwise/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_10_pointwise/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_10_pointwise/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_10_pointwise/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_10_pointwise/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_10_pointwise/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_10_pointwise/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_10_pointwise/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_10_depthwise/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_10_pointwise/Conv2D_grad/tuple/control_dependency"
  input: "MobilenetV1/MobilenetV1/Conv2d_10_depthwise/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_4"
  op: "AddN"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_10_pointwise/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_10_pointwise/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_10_pointwise/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_29"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_10_depthwise/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_30"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_10_depthwise/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_31"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_10_depthwise/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_32"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_10_depthwise/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_10_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_10_depthwise/Relu6_grad/Relu6Grad"
  input: "MobilenetV1/MobilenetV1/Conv2d_10_depthwise/depthwise"
  input: "MobilenetV1/Conv2d_10_depthwise/BatchNorm/gamma/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_10_depthwise/BatchNorm/FusedBatchNorm:3"
  input: "MobilenetV1/MobilenetV1/Conv2d_10_depthwise/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 384
          }
        }
        shape {
          dim {
            size: 384
          }
        }
        shape {
          dim {
            size: 384
          }
        }
        shape {
          dim {
          }
        }
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_10_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_10_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_10_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_10_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_10_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_10_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_10_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_10_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_10_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_10_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_10_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_10_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_10_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_10_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_10_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_10_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_10_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_10_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_10_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_10_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_10_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_10_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_10_depthwise/depthwise_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\010\000\000\000\010\000\000\000\200\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_10_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  op: "DepthwiseConv2dNativeBackpropInput"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_10_depthwise/depthwise_grad/Shape"
  input: "MobilenetV1/Conv2d_10_depthwise/depthwise_weights/read"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_10_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_10_depthwise/depthwise_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_10_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  op: "DepthwiseConv2dNativeBackpropFilter"
  input: "MobilenetV1/MobilenetV1/Conv2d_9_pointwise/Relu6"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_10_depthwise/depthwise_grad/Shape_1"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_10_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_10_depthwise/depthwise_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_10_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_10_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_10_depthwise/depthwise_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_10_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_10_depthwise/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_10_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_10_depthwise/depthwise_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_10_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_10_depthwise/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_10_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_9_pointwise/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_10_depthwise/depthwise_grad/tuple/control_dependency"
  input: "MobilenetV1/MobilenetV1/Conv2d_9_pointwise/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_33"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_9_pointwise/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_34"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_9_pointwise/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_35"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_9_pointwise/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_36"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_9_pointwise/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_9_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_9_pointwise/Relu6_grad/Relu6Grad"
  input: "MobilenetV1/MobilenetV1/Conv2d_9_pointwise/Conv2D"
  input: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/gamma/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_9_pointwise/BatchNorm/FusedBatchNorm:3"
  input: "MobilenetV1/MobilenetV1/Conv2d_9_pointwise/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 384
          }
        }
        shape {
          dim {
            size: 384
          }
        }
        shape {
          dim {
            size: 384
          }
        }
        shape {
          dim {
          }
        }
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_9_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_9_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_9_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_9_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_9_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_9_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_9_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_9_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_9_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_9_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_9_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_9_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_9_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_9_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_9_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_9_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_9_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_9_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_9_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_9_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_9_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_9_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_9_pointwise/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "MobilenetV1/MobilenetV1/Conv2d_9_depthwise/Relu6"
  input: "MobilenetV1/Conv2d_9_pointwise/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_9_pointwise/Conv2D_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\010\000\000\000\010\000\000\000\200\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_9_pointwise/Conv2D_grad/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\001\000\000\200\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_9_pointwise/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_9_pointwise/Conv2D_grad/Const"
  input: "MobilenetV1/Conv2d_9_pointwise/weights/read"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_9_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_9_pointwise/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "MobilenetV1/MobilenetV1/Conv2d_9_depthwise/Relu6"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_9_pointwise/Conv2D_grad/Const_1"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_9_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_9_pointwise/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_9_pointwise/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_9_pointwise/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_9_pointwise/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_9_pointwise/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_9_pointwise/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_9_pointwise/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_9_pointwise/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_9_pointwise/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_9_pointwise/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_9_pointwise/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_9_depthwise/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_9_pointwise/Conv2D_grad/tuple/control_dependency"
  input: "MobilenetV1/MobilenetV1/Conv2d_9_depthwise/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_5"
  op: "AddN"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_9_pointwise/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_9_pointwise/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_9_pointwise/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_37"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_9_depthwise/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_38"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_9_depthwise/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_39"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_9_depthwise/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_40"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_9_depthwise/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_9_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_9_depthwise/Relu6_grad/Relu6Grad"
  input: "MobilenetV1/MobilenetV1/Conv2d_9_depthwise/depthwise"
  input: "MobilenetV1/Conv2d_9_depthwise/BatchNorm/gamma/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_9_depthwise/BatchNorm/FusedBatchNorm:3"
  input: "MobilenetV1/MobilenetV1/Conv2d_9_depthwise/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 384
          }
        }
        shape {
          dim {
            size: 384
          }
        }
        shape {
          dim {
            size: 384
          }
        }
        shape {
          dim {
          }
        }
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_9_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_9_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_9_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_9_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_9_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_9_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_9_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_9_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_9_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_9_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_9_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_9_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_9_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_9_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_9_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_9_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_9_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_9_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_9_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_9_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_9_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_9_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_9_depthwise/depthwise_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\010\000\000\000\010\000\000\000\200\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_9_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  op: "DepthwiseConv2dNativeBackpropInput"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_9_depthwise/depthwise_grad/Shape"
  input: "MobilenetV1/Conv2d_9_depthwise/depthwise_weights/read"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_9_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_9_depthwise/depthwise_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_9_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  op: "DepthwiseConv2dNativeBackpropFilter"
  input: "MobilenetV1/MobilenetV1/Conv2d_8_pointwise/Relu6"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_9_depthwise/depthwise_grad/Shape_1"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_9_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_9_depthwise/depthwise_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_9_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_9_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_9_depthwise/depthwise_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_9_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_9_depthwise/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_9_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_9_depthwise/depthwise_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_9_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_9_depthwise/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_9_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_8_pointwise/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_9_depthwise/depthwise_grad/tuple/control_dependency"
  input: "MobilenetV1/MobilenetV1/Conv2d_8_pointwise/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_41"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_8_pointwise/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_42"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_8_pointwise/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_43"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_8_pointwise/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_44"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_8_pointwise/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_8_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_8_pointwise/Relu6_grad/Relu6Grad"
  input: "MobilenetV1/MobilenetV1/Conv2d_8_pointwise/Conv2D"
  input: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/gamma/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_8_pointwise/BatchNorm/FusedBatchNorm:3"
  input: "MobilenetV1/MobilenetV1/Conv2d_8_pointwise/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 384
          }
        }
        shape {
          dim {
            size: 384
          }
        }
        shape {
          dim {
            size: 384
          }
        }
        shape {
          dim {
          }
        }
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_8_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_8_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_8_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_8_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_8_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_8_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_8_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_8_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_8_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_8_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_8_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_8_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_8_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_8_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_8_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_8_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_8_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_8_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_8_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_8_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_8_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_8_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_8_pointwise/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "MobilenetV1/MobilenetV1/Conv2d_8_depthwise/Relu6"
  input: "MobilenetV1/Conv2d_8_pointwise/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_8_pointwise/Conv2D_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\010\000\000\000\010\000\000\000\200\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_8_pointwise/Conv2D_grad/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\001\000\000\200\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_8_pointwise/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_8_pointwise/Conv2D_grad/Const"
  input: "MobilenetV1/Conv2d_8_pointwise/weights/read"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_8_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_8_pointwise/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "MobilenetV1/MobilenetV1/Conv2d_8_depthwise/Relu6"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_8_pointwise/Conv2D_grad/Const_1"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_8_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_8_pointwise/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_8_pointwise/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_8_pointwise/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_8_pointwise/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_8_pointwise/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_8_pointwise/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_8_pointwise/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_8_pointwise/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_8_pointwise/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_8_pointwise/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_8_pointwise/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_8_depthwise/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_8_pointwise/Conv2D_grad/tuple/control_dependency"
  input: "MobilenetV1/MobilenetV1/Conv2d_8_depthwise/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_6"
  op: "AddN"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_8_pointwise/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_8_pointwise/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_8_pointwise/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_45"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_8_depthwise/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_46"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_8_depthwise/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_47"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_8_depthwise/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_48"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_8_depthwise/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_8_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_8_depthwise/Relu6_grad/Relu6Grad"
  input: "MobilenetV1/MobilenetV1/Conv2d_8_depthwise/depthwise"
  input: "MobilenetV1/Conv2d_8_depthwise/BatchNorm/gamma/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_8_depthwise/BatchNorm/FusedBatchNorm:3"
  input: "MobilenetV1/MobilenetV1/Conv2d_8_depthwise/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 384
          }
        }
        shape {
          dim {
            size: 384
          }
        }
        shape {
          dim {
            size: 384
          }
        }
        shape {
          dim {
          }
        }
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_8_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_8_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_8_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_8_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_8_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_8_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_8_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_8_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_8_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_8_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_8_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_8_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_8_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_8_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_8_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_8_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_8_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_8_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_8_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_8_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_8_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_8_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_8_depthwise/depthwise_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\010\000\000\000\010\000\000\000\200\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_8_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  op: "DepthwiseConv2dNativeBackpropInput"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_8_depthwise/depthwise_grad/Shape"
  input: "MobilenetV1/Conv2d_8_depthwise/depthwise_weights/read"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_8_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_8_depthwise/depthwise_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_8_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  op: "DepthwiseConv2dNativeBackpropFilter"
  input: "MobilenetV1/MobilenetV1/Conv2d_7_pointwise/Relu6"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_8_depthwise/depthwise_grad/Shape_1"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_8_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_8_depthwise/depthwise_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_8_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_8_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_8_depthwise/depthwise_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_8_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_8_depthwise/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_8_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_8_depthwise/depthwise_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_8_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_8_depthwise/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_8_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_7_pointwise/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_8_depthwise/depthwise_grad/tuple/control_dependency"
  input: "MobilenetV1/MobilenetV1/Conv2d_7_pointwise/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_49"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_7_pointwise/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_50"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_7_pointwise/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_51"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_7_pointwise/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_52"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_7_pointwise/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_7_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_7_pointwise/Relu6_grad/Relu6Grad"
  input: "MobilenetV1/MobilenetV1/Conv2d_7_pointwise/Conv2D"
  input: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/gamma/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_7_pointwise/BatchNorm/FusedBatchNorm:3"
  input: "MobilenetV1/MobilenetV1/Conv2d_7_pointwise/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 384
          }
        }
        shape {
          dim {
            size: 384
          }
        }
        shape {
          dim {
            size: 384
          }
        }
        shape {
          dim {
          }
        }
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_7_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_7_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_7_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_7_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_7_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_7_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_7_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_7_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_7_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_7_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_7_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_7_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_7_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_7_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_7_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_7_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_7_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_7_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_7_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_7_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_7_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_7_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_7_pointwise/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "MobilenetV1/MobilenetV1/Conv2d_7_depthwise/Relu6"
  input: "MobilenetV1/Conv2d_7_pointwise/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_7_pointwise/Conv2D_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\010\000\000\000\010\000\000\000\200\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_7_pointwise/Conv2D_grad/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\001\000\000\200\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_7_pointwise/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_7_pointwise/Conv2D_grad/Const"
  input: "MobilenetV1/Conv2d_7_pointwise/weights/read"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_7_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_7_pointwise/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "MobilenetV1/MobilenetV1/Conv2d_7_depthwise/Relu6"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_7_pointwise/Conv2D_grad/Const_1"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_7_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_7_pointwise/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_7_pointwise/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_7_pointwise/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_7_pointwise/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_7_pointwise/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_7_pointwise/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_7_pointwise/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_7_pointwise/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_7_pointwise/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_7_pointwise/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_7_pointwise/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_7_depthwise/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_7_pointwise/Conv2D_grad/tuple/control_dependency"
  input: "MobilenetV1/MobilenetV1/Conv2d_7_depthwise/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_7"
  op: "AddN"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_7_pointwise/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_7_pointwise/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_7_pointwise/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_53"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_7_depthwise/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_54"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_7_depthwise/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_55"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_7_depthwise/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_56"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_7_depthwise/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_7_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_7_depthwise/Relu6_grad/Relu6Grad"
  input: "MobilenetV1/MobilenetV1/Conv2d_7_depthwise/depthwise"
  input: "MobilenetV1/Conv2d_7_depthwise/BatchNorm/gamma/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_7_depthwise/BatchNorm/FusedBatchNorm:3"
  input: "MobilenetV1/MobilenetV1/Conv2d_7_depthwise/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 384
          }
        }
        shape {
          dim {
            size: 384
          }
        }
        shape {
          dim {
            size: 384
          }
        }
        shape {
          dim {
          }
        }
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_7_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_7_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_7_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_7_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_7_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_7_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_7_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_7_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_7_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_7_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_7_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_7_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_7_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_7_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_7_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_7_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_7_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_7_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_7_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_7_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_7_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_7_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_7_depthwise/depthwise_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\010\000\000\000\010\000\000\000\200\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_7_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  op: "DepthwiseConv2dNativeBackpropInput"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_7_depthwise/depthwise_grad/Shape"
  input: "MobilenetV1/Conv2d_7_depthwise/depthwise_weights/read"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_7_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_7_depthwise/depthwise_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_7_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  op: "DepthwiseConv2dNativeBackpropFilter"
  input: "MobilenetV1/MobilenetV1/Conv2d_6_pointwise/Relu6"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_7_depthwise/depthwise_grad/Shape_1"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_7_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_7_depthwise/depthwise_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_7_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_7_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_7_depthwise/depthwise_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_7_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_7_depthwise/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_7_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_7_depthwise/depthwise_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_7_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_7_depthwise/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_7_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_6_pointwise/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_7_depthwise/depthwise_grad/tuple/control_dependency"
  input: "MobilenetV1/MobilenetV1/Conv2d_6_pointwise/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_57"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_6_pointwise/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_58"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_6_pointwise/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_59"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_6_pointwise/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_60"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_6_pointwise/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_6_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_6_pointwise/Relu6_grad/Relu6Grad"
  input: "MobilenetV1/MobilenetV1/Conv2d_6_pointwise/Conv2D"
  input: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/gamma/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_6_pointwise/BatchNorm/FusedBatchNorm:3"
  input: "MobilenetV1/MobilenetV1/Conv2d_6_pointwise/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 384
          }
        }
        shape {
          dim {
            size: 384
          }
        }
        shape {
          dim {
            size: 384
          }
        }
        shape {
          dim {
          }
        }
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_6_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_6_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_6_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_6_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_6_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_6_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_6_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_6_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_6_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_6_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_6_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_6_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_6_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_6_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_6_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_6_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_6_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_6_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_6_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_6_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_6_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_6_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_6_pointwise/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "MobilenetV1/MobilenetV1/Conv2d_6_depthwise/Relu6"
  input: "MobilenetV1/Conv2d_6_pointwise/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_6_pointwise/Conv2D_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\010\000\000\000\010\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_6_pointwise/Conv2D_grad/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\300\000\000\000\200\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_6_pointwise/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_6_pointwise/Conv2D_grad/Const"
  input: "MobilenetV1/Conv2d_6_pointwise/weights/read"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_6_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_6_pointwise/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "MobilenetV1/MobilenetV1/Conv2d_6_depthwise/Relu6"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_6_pointwise/Conv2D_grad/Const_1"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_6_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 192
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_6_pointwise/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_6_pointwise/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_6_pointwise/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_6_pointwise/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_6_pointwise/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_6_pointwise/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_6_pointwise/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_6_pointwise/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_6_pointwise/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_6_pointwise/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_6_pointwise/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 192
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_6_depthwise/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_6_pointwise/Conv2D_grad/tuple/control_dependency"
  input: "MobilenetV1/MobilenetV1/Conv2d_6_depthwise/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_8"
  op: "AddN"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_6_pointwise/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_6_pointwise/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_6_pointwise/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 192
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_61"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_6_depthwise/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_62"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_6_depthwise/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_63"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_6_depthwise/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_64"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_6_depthwise/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_6_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_6_depthwise/Relu6_grad/Relu6Grad"
  input: "MobilenetV1/MobilenetV1/Conv2d_6_depthwise/depthwise"
  input: "MobilenetV1/Conv2d_6_depthwise/BatchNorm/gamma/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_6_depthwise/BatchNorm/FusedBatchNorm:3"
  input: "MobilenetV1/MobilenetV1/Conv2d_6_depthwise/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 192
          }
        }
        shape {
          dim {
            size: 192
          }
        }
        shape {
          dim {
            size: 192
          }
        }
        shape {
          dim {
          }
        }
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_6_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_6_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_6_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_6_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_6_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_6_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_6_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_6_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_6_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_6_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_6_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_6_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_6_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_6_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_6_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_6_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_6_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_6_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_6_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_6_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_6_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_6_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_6_depthwise/depthwise_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\020\000\000\000\020\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_6_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  op: "DepthwiseConv2dNativeBackpropInput"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_6_depthwise/depthwise_grad/Shape"
  input: "MobilenetV1/Conv2d_6_depthwise/depthwise_weights/read"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_6_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_6_depthwise/depthwise_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_6_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  op: "DepthwiseConv2dNativeBackpropFilter"
  input: "MobilenetV1/MobilenetV1/Conv2d_5_pointwise/Relu6"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_6_depthwise/depthwise_grad/Shape_1"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_6_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 192
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_6_depthwise/depthwise_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_6_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_6_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_6_depthwise/depthwise_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_6_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_6_depthwise/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_6_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_6_depthwise/depthwise_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_6_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_6_depthwise/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_6_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 192
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_5_pointwise/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_6_depthwise/depthwise_grad/tuple/control_dependency"
  input: "MobilenetV1/MobilenetV1/Conv2d_5_pointwise/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_65"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_5_pointwise/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_66"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_5_pointwise/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_67"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_5_pointwise/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_68"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_5_pointwise/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_5_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_5_pointwise/Relu6_grad/Relu6Grad"
  input: "MobilenetV1/MobilenetV1/Conv2d_5_pointwise/Conv2D"
  input: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/gamma/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_5_pointwise/BatchNorm/FusedBatchNorm:3"
  input: "MobilenetV1/MobilenetV1/Conv2d_5_pointwise/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 192
          }
        }
        shape {
          dim {
            size: 192
          }
        }
        shape {
          dim {
            size: 192
          }
        }
        shape {
          dim {
          }
        }
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_5_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_5_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_5_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_5_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_5_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_5_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_5_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_5_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_5_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_5_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_5_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_5_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_5_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_5_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_5_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_5_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_5_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_5_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_5_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_5_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_5_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_5_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_5_pointwise/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "MobilenetV1/MobilenetV1/Conv2d_5_depthwise/Relu6"
  input: "MobilenetV1/Conv2d_5_pointwise/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_5_pointwise/Conv2D_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\020\000\000\000\020\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_5_pointwise/Conv2D_grad/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\300\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_5_pointwise/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_5_pointwise/Conv2D_grad/Const"
  input: "MobilenetV1/Conv2d_5_pointwise/weights/read"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_5_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_5_pointwise/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "MobilenetV1/MobilenetV1/Conv2d_5_depthwise/Relu6"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_5_pointwise/Conv2D_grad/Const_1"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_5_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 192
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_5_pointwise/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_5_pointwise/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_5_pointwise/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_5_pointwise/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_5_pointwise/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_5_pointwise/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_5_pointwise/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_5_pointwise/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_5_pointwise/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_5_pointwise/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_5_pointwise/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 192
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_5_depthwise/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_5_pointwise/Conv2D_grad/tuple/control_dependency"
  input: "MobilenetV1/MobilenetV1/Conv2d_5_depthwise/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_9"
  op: "AddN"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_5_pointwise/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_5_pointwise/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_5_pointwise/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 192
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_69"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_5_depthwise/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_70"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_5_depthwise/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_71"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_5_depthwise/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_72"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_5_depthwise/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_5_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_5_depthwise/Relu6_grad/Relu6Grad"
  input: "MobilenetV1/MobilenetV1/Conv2d_5_depthwise/depthwise"
  input: "MobilenetV1/Conv2d_5_depthwise/BatchNorm/gamma/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_5_depthwise/BatchNorm/FusedBatchNorm:3"
  input: "MobilenetV1/MobilenetV1/Conv2d_5_depthwise/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 192
          }
        }
        shape {
          dim {
            size: 192
          }
        }
        shape {
          dim {
            size: 192
          }
        }
        shape {
          dim {
          }
        }
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_5_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_5_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_5_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_5_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_5_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_5_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_5_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_5_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_5_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_5_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_5_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_5_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_5_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_5_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_5_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_5_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_5_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_5_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_5_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_5_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_5_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_5_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_5_depthwise/depthwise_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\020\000\000\000\020\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_5_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  op: "DepthwiseConv2dNativeBackpropInput"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_5_depthwise/depthwise_grad/Shape"
  input: "MobilenetV1/Conv2d_5_depthwise/depthwise_weights/read"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_5_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_5_depthwise/depthwise_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_5_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  op: "DepthwiseConv2dNativeBackpropFilter"
  input: "MobilenetV1/MobilenetV1/Conv2d_4_pointwise/Relu6"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_5_depthwise/depthwise_grad/Shape_1"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_5_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 192
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_5_depthwise/depthwise_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_5_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_5_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_5_depthwise/depthwise_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_5_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_5_depthwise/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_5_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_5_depthwise/depthwise_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_5_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_5_depthwise/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_5_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 192
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_4_pointwise/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_5_depthwise/depthwise_grad/tuple/control_dependency"
  input: "MobilenetV1/MobilenetV1/Conv2d_4_pointwise/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_73"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_4_pointwise/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_74"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_4_pointwise/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_75"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_4_pointwise/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_76"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_4_pointwise/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_4_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_4_pointwise/Relu6_grad/Relu6Grad"
  input: "MobilenetV1/MobilenetV1/Conv2d_4_pointwise/Conv2D"
  input: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/gamma/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_4_pointwise/BatchNorm/FusedBatchNorm:3"
  input: "MobilenetV1/MobilenetV1/Conv2d_4_pointwise/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 192
          }
        }
        shape {
          dim {
            size: 192
          }
        }
        shape {
          dim {
            size: 192
          }
        }
        shape {
          dim {
          }
        }
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_4_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_4_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_4_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_4_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_4_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_4_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_4_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_4_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_4_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_4_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_4_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_4_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_4_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_4_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_4_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_4_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_4_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_4_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_4_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_4_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_4_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_4_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_4_pointwise/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "MobilenetV1/MobilenetV1/Conv2d_4_depthwise/Relu6"
  input: "MobilenetV1/Conv2d_4_pointwise/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_4_pointwise/Conv2D_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\020\000\000\000\020\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_4_pointwise/Conv2D_grad/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_4_pointwise/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_4_pointwise/Conv2D_grad/Const"
  input: "MobilenetV1/Conv2d_4_pointwise/weights/read"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_4_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_4_pointwise/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "MobilenetV1/MobilenetV1/Conv2d_4_depthwise/Relu6"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_4_pointwise/Conv2D_grad/Const_1"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_4_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_4_pointwise/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_4_pointwise/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_4_pointwise/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_4_pointwise/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_4_pointwise/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_4_pointwise/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_4_pointwise/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_4_pointwise/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_4_pointwise/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_4_pointwise/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_4_pointwise/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_4_depthwise/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_4_pointwise/Conv2D_grad/tuple/control_dependency"
  input: "MobilenetV1/MobilenetV1/Conv2d_4_depthwise/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_10"
  op: "AddN"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_4_pointwise/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_4_pointwise/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_4_pointwise/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_77"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_4_depthwise/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_78"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_4_depthwise/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_79"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_4_depthwise/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_80"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_4_depthwise/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_4_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_4_depthwise/Relu6_grad/Relu6Grad"
  input: "MobilenetV1/MobilenetV1/Conv2d_4_depthwise/depthwise"
  input: "MobilenetV1/Conv2d_4_depthwise/BatchNorm/gamma/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_4_depthwise/BatchNorm/FusedBatchNorm:3"
  input: "MobilenetV1/MobilenetV1/Conv2d_4_depthwise/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 96
          }
        }
        shape {
          dim {
            size: 96
          }
        }
        shape {
          dim {
            size: 96
          }
        }
        shape {
          dim {
          }
        }
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_4_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_4_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_4_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_4_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_4_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_4_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_4_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_4_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_4_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_4_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_4_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_4_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_4_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_4_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_4_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_4_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_4_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_4_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_4_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_4_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_4_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_4_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_4_depthwise/depthwise_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000 \000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_4_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  op: "DepthwiseConv2dNativeBackpropInput"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_4_depthwise/depthwise_grad/Shape"
  input: "MobilenetV1/Conv2d_4_depthwise/depthwise_weights/read"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_4_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_4_depthwise/depthwise_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_4_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  op: "DepthwiseConv2dNativeBackpropFilter"
  input: "MobilenetV1/MobilenetV1/Conv2d_3_pointwise/Relu6"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_4_depthwise/depthwise_grad/Shape_1"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_4_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_4_depthwise/depthwise_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_4_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_4_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_4_depthwise/depthwise_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_4_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_4_depthwise/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_4_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_4_depthwise/depthwise_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_4_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_4_depthwise/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_4_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_3_pointwise/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_4_depthwise/depthwise_grad/tuple/control_dependency"
  input: "MobilenetV1/MobilenetV1/Conv2d_3_pointwise/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_81"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_3_pointwise/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_82"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_3_pointwise/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_83"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_3_pointwise/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_84"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_3_pointwise/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_3_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_3_pointwise/Relu6_grad/Relu6Grad"
  input: "MobilenetV1/MobilenetV1/Conv2d_3_pointwise/Conv2D"
  input: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/gamma/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_3_pointwise/BatchNorm/FusedBatchNorm:3"
  input: "MobilenetV1/MobilenetV1/Conv2d_3_pointwise/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 96
          }
        }
        shape {
          dim {
            size: 96
          }
        }
        shape {
          dim {
            size: 96
          }
        }
        shape {
          dim {
          }
        }
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_3_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_3_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_3_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_3_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_3_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_3_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_3_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_3_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_3_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_3_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_3_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_3_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_3_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_3_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_3_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_3_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_3_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_3_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_3_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_3_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_3_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_3_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_3_pointwise/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "MobilenetV1/MobilenetV1/Conv2d_3_depthwise/Relu6"
  input: "MobilenetV1/Conv2d_3_pointwise/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_3_pointwise/Conv2D_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000 \000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_3_pointwise/Conv2D_grad/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_3_pointwise/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_3_pointwise/Conv2D_grad/Const"
  input: "MobilenetV1/Conv2d_3_pointwise/weights/read"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_3_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_3_pointwise/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "MobilenetV1/MobilenetV1/Conv2d_3_depthwise/Relu6"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_3_pointwise/Conv2D_grad/Const_1"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_3_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_3_pointwise/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_3_pointwise/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_3_pointwise/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_3_pointwise/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_3_pointwise/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_3_pointwise/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_3_pointwise/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_3_pointwise/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_3_pointwise/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_3_pointwise/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_3_pointwise/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_3_depthwise/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_3_pointwise/Conv2D_grad/tuple/control_dependency"
  input: "MobilenetV1/MobilenetV1/Conv2d_3_depthwise/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_11"
  op: "AddN"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_3_pointwise/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_3_pointwise/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_3_pointwise/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_85"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_3_depthwise/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_86"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_3_depthwise/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_87"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_3_depthwise/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_88"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_3_depthwise/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_3_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_3_depthwise/Relu6_grad/Relu6Grad"
  input: "MobilenetV1/MobilenetV1/Conv2d_3_depthwise/depthwise"
  input: "MobilenetV1/Conv2d_3_depthwise/BatchNorm/gamma/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_3_depthwise/BatchNorm/FusedBatchNorm:3"
  input: "MobilenetV1/MobilenetV1/Conv2d_3_depthwise/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 96
          }
        }
        shape {
          dim {
            size: 96
          }
        }
        shape {
          dim {
            size: 96
          }
        }
        shape {
          dim {
          }
        }
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_3_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_3_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_3_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_3_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_3_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_3_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_3_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_3_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_3_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_3_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_3_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_3_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_3_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_3_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_3_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_3_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_3_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_3_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_3_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_3_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_3_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_3_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_3_depthwise/depthwise_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000 \000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_3_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  op: "DepthwiseConv2dNativeBackpropInput"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_3_depthwise/depthwise_grad/Shape"
  input: "MobilenetV1/Conv2d_3_depthwise/depthwise_weights/read"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_3_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_3_depthwise/depthwise_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_3_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  op: "DepthwiseConv2dNativeBackpropFilter"
  input: "MobilenetV1/MobilenetV1/Conv2d_2_pointwise/Relu6"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_3_depthwise/depthwise_grad/Shape_1"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_3_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_3_depthwise/depthwise_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_3_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_3_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_3_depthwise/depthwise_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_3_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_3_depthwise/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_3_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_3_depthwise/depthwise_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_3_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_3_depthwise/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_3_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_2_pointwise/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_3_depthwise/depthwise_grad/tuple/control_dependency"
  input: "MobilenetV1/MobilenetV1/Conv2d_2_pointwise/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_89"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_2_pointwise/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_90"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_2_pointwise/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_91"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_2_pointwise/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_92"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_2_pointwise/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_2_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_2_pointwise/Relu6_grad/Relu6Grad"
  input: "MobilenetV1/MobilenetV1/Conv2d_2_pointwise/Conv2D"
  input: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/gamma/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_2_pointwise/BatchNorm/FusedBatchNorm:3"
  input: "MobilenetV1/MobilenetV1/Conv2d_2_pointwise/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 96
          }
        }
        shape {
          dim {
            size: 96
          }
        }
        shape {
          dim {
            size: 96
          }
        }
        shape {
          dim {
          }
        }
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_2_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_2_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_2_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_2_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_2_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_2_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_2_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_2_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_2_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_2_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_2_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_2_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_2_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_2_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_2_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_2_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_2_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_2_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_2_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_2_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_2_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_2_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_2_pointwise/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "MobilenetV1/MobilenetV1/Conv2d_2_depthwise/Relu6"
  input: "MobilenetV1/Conv2d_2_pointwise/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_2_pointwise/Conv2D_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000 \000\000\0000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_2_pointwise/Conv2D_grad/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\0000\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_2_pointwise/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_2_pointwise/Conv2D_grad/Const"
  input: "MobilenetV1/Conv2d_2_pointwise/weights/read"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_2_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_2_pointwise/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "MobilenetV1/MobilenetV1/Conv2d_2_depthwise/Relu6"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_2_pointwise/Conv2D_grad/Const_1"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_2_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 48
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_2_pointwise/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_2_pointwise/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_2_pointwise/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_2_pointwise/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_2_pointwise/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_2_pointwise/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_2_pointwise/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_2_pointwise/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_2_pointwise/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_2_pointwise/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_2_pointwise/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 48
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_2_depthwise/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_2_pointwise/Conv2D_grad/tuple/control_dependency"
  input: "MobilenetV1/MobilenetV1/Conv2d_2_depthwise/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_12"
  op: "AddN"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_2_pointwise/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_2_pointwise/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_2_pointwise/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 48
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_93"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_2_depthwise/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_94"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_2_depthwise/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_95"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_2_depthwise/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_96"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_2_depthwise/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_2_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_2_depthwise/Relu6_grad/Relu6Grad"
  input: "MobilenetV1/MobilenetV1/Conv2d_2_depthwise/depthwise"
  input: "MobilenetV1/Conv2d_2_depthwise/BatchNorm/gamma/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_2_depthwise/BatchNorm/FusedBatchNorm:3"
  input: "MobilenetV1/MobilenetV1/Conv2d_2_depthwise/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 48
          }
        }
        shape {
          dim {
            size: 48
          }
        }
        shape {
          dim {
            size: 48
          }
        }
        shape {
          dim {
          }
        }
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_2_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_2_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_2_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_2_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_2_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_2_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_2_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_2_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_2_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_2_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_2_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_2_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_2_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_2_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_2_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_2_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_2_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_2_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_2_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_2_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_2_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_2_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_2_depthwise/depthwise_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\0000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_2_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  op: "DepthwiseConv2dNativeBackpropInput"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_2_depthwise/depthwise_grad/Shape"
  input: "MobilenetV1/Conv2d_2_depthwise/depthwise_weights/read"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_2_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_2_depthwise/depthwise_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\0000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_2_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  op: "DepthwiseConv2dNativeBackpropFilter"
  input: "MobilenetV1/MobilenetV1/Conv2d_1_pointwise/Relu6"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_2_depthwise/depthwise_grad/Shape_1"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_2_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 48
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_2_depthwise/depthwise_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_2_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_2_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_2_depthwise/depthwise_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_2_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_2_depthwise/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_2_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_2_depthwise/depthwise_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_2_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_2_depthwise/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_2_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 48
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_1_pointwise/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_2_depthwise/depthwise_grad/tuple/control_dependency"
  input: "MobilenetV1/MobilenetV1/Conv2d_1_pointwise/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_97"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_1_pointwise/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_98"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_1_pointwise/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_99"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_1_pointwise/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_100"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_1_pointwise/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_1_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_1_pointwise/Relu6_grad/Relu6Grad"
  input: "MobilenetV1/MobilenetV1/Conv2d_1_pointwise/Conv2D"
  input: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/gamma/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_1_pointwise/BatchNorm/FusedBatchNorm:3"
  input: "MobilenetV1/MobilenetV1/Conv2d_1_pointwise/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 48
          }
        }
        shape {
          dim {
            size: 48
          }
        }
        shape {
          dim {
            size: 48
          }
        }
        shape {
          dim {
          }
        }
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_1_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_1_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_1_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_1_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_1_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_1_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_1_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_1_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_1_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_1_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_1_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_1_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_1_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_1_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_1_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_1_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_1_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_1_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_1_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_1_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_1_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_1_pointwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_1_pointwise/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "MobilenetV1/MobilenetV1/Conv2d_1_depthwise/Relu6"
  input: "MobilenetV1/Conv2d_1_pointwise/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_1_pointwise/Conv2D_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_1_pointwise/Conv2D_grad/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\030\000\000\0000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_1_pointwise/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_1_pointwise/Conv2D_grad/Const"
  input: "MobilenetV1/Conv2d_1_pointwise/weights/read"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_1_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_1_pointwise/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "MobilenetV1/MobilenetV1/Conv2d_1_depthwise/Relu6"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_1_pointwise/Conv2D_grad/Const_1"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_1_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 24
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_1_pointwise/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_1_pointwise/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_1_pointwise/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_1_pointwise/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_1_pointwise/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_1_pointwise/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_1_pointwise/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_1_pointwise/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_1_pointwise/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_1_pointwise/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_1_pointwise/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 24
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_1_depthwise/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_1_pointwise/Conv2D_grad/tuple/control_dependency"
  input: "MobilenetV1/MobilenetV1/Conv2d_1_depthwise/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_13"
  op: "AddN"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_1_pointwise/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_1_pointwise/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_1_pointwise/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 24
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_101"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_1_depthwise/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_102"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_1_depthwise/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_103"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_1_depthwise/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_104"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_1_depthwise/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_1_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_1_depthwise/Relu6_grad/Relu6Grad"
  input: "MobilenetV1/MobilenetV1/Conv2d_1_depthwise/depthwise"
  input: "MobilenetV1/Conv2d_1_depthwise/BatchNorm/gamma/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_1_depthwise/BatchNorm/FusedBatchNorm:3"
  input: "MobilenetV1/MobilenetV1/Conv2d_1_depthwise/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 24
          }
        }
        shape {
          dim {
            size: 24
          }
        }
        shape {
          dim {
            size: 24
          }
        }
        shape {
          dim {
          }
        }
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_1_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_1_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_1_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_1_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_1_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_1_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_1_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_1_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_1_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_1_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_1_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_1_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_1_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_1_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_1_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_1_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_1_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_1_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_1_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_1_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_1_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_1_depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_1_depthwise/depthwise_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_1_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  op: "DepthwiseConv2dNativeBackpropInput"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_1_depthwise/depthwise_grad/Shape"
  input: "MobilenetV1/Conv2d_1_depthwise/depthwise_weights/read"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_1_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_1_depthwise/depthwise_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\030\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_1_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  op: "DepthwiseConv2dNativeBackpropFilter"
  input: "MobilenetV1/MobilenetV1/Conv2d_0/Relu6"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_1_depthwise/depthwise_grad/Shape_1"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_1_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 24
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_1_depthwise/depthwise_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_1_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_1_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_1_depthwise/depthwise_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_1_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_1_depthwise/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_1_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_1_depthwise/depthwise_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_1_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_1_depthwise/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_1_depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 24
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_0/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_1_depthwise/depthwise_grad/tuple/control_dependency"
  input: "MobilenetV1/MobilenetV1/Conv2d_0/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_105"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_0/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_106"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_0/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_107"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_0/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_108"
  op: "ZerosLike"
  input: "MobilenetV1/MobilenetV1/Conv2d_0/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_0/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_0/Relu6_grad/Relu6Grad"
  input: "MobilenetV1/MobilenetV1/Conv2d_0/Conv2D"
  input: "MobilenetV1/Conv2d_0/BatchNorm/gamma/read"
  input: "MobilenetV1/MobilenetV1/Conv2d_0/BatchNorm/FusedBatchNorm:3"
  input: "MobilenetV1/MobilenetV1/Conv2d_0/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 24
          }
        }
        shape {
          dim {
            size: 24
          }
        }
        shape {
          dim {
            size: 24
          }
        }
        shape {
          dim {
          }
        }
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_0/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_0/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_0/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_0/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_0/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_0/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_0/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_0/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_0/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_0/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_0/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_0/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_0/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_0/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_0/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_0/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_0/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_0/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_0/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_0/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_0/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_0/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_0/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "batch"
  input: "MobilenetV1/Conv2d_0/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_0/Conv2D_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\200\000\000\000\200\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_0/Conv2D_grad/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_0/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_0/Conv2D_grad/Const"
  input: "MobilenetV1/Conv2d_0/weights/read"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_0/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_0/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "batch"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_0/Conv2D_grad/Const_1"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_0/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_0/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_0/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_0/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_0/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_0/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_0/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_0/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MobilenetV1/MobilenetV1/Conv2d_0/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_0/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/MobilenetV1/MobilenetV1/Conv2d_0/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_0/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_14"
  op: "AddN"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_0/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_0/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MobilenetV1/MobilenetV1/Conv2d_0/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "GradientDescent/update_MobilenetV1/Conv2d_0/weights/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "MobilenetV1/Conv2d_0/weights"
  input: "ExponentialDecay"
  input: "gradients/AddN_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_0/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_MobilenetV1/Conv2d_0/BatchNorm/gamma/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "MobilenetV1/Conv2d_0/BatchNorm/gamma"
  input: "ExponentialDecay"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_0/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_0/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_MobilenetV1/Conv2d_0/BatchNorm/beta/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "MobilenetV1/Conv2d_0/BatchNorm/beta"
  input: "ExponentialDecay"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_0/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_0/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_MobilenetV1/Conv2d_1_depthwise/depthwise_weights/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "MobilenetV1/Conv2d_1_depthwise/depthwise_weights"
  input: "ExponentialDecay"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_1_depthwise/depthwise_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 24
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_MobilenetV1/Conv2d_1_depthwise/BatchNorm/gamma/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "MobilenetV1/Conv2d_1_depthwise/BatchNorm/gamma"
  input: "ExponentialDecay"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_1_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_MobilenetV1/Conv2d_1_depthwise/BatchNorm/beta/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "MobilenetV1/Conv2d_1_depthwise/BatchNorm/beta"
  input: "ExponentialDecay"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_1_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_MobilenetV1/Conv2d_1_pointwise/weights/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "MobilenetV1/Conv2d_1_pointwise/weights"
  input: "ExponentialDecay"
  input: "gradients/AddN_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 24
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_MobilenetV1/Conv2d_1_pointwise/BatchNorm/gamma/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/gamma"
  input: "ExponentialDecay"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_1_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_MobilenetV1/Conv2d_1_pointwise/BatchNorm/beta/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/beta"
  input: "ExponentialDecay"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_1_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_MobilenetV1/Conv2d_2_depthwise/depthwise_weights/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "MobilenetV1/Conv2d_2_depthwise/depthwise_weights"
  input: "ExponentialDecay"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_2_depthwise/depthwise_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 48
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_MobilenetV1/Conv2d_2_depthwise/BatchNorm/gamma/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "MobilenetV1/Conv2d_2_depthwise/BatchNorm/gamma"
  input: "ExponentialDecay"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_2_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_MobilenetV1/Conv2d_2_depthwise/BatchNorm/beta/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "MobilenetV1/Conv2d_2_depthwise/BatchNorm/beta"
  input: "ExponentialDecay"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_2_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_MobilenetV1/Conv2d_2_pointwise/weights/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "MobilenetV1/Conv2d_2_pointwise/weights"
  input: "ExponentialDecay"
  input: "gradients/AddN_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 48
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_MobilenetV1/Conv2d_2_pointwise/BatchNorm/gamma/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/gamma"
  input: "ExponentialDecay"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_2_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_MobilenetV1/Conv2d_2_pointwise/BatchNorm/beta/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/beta"
  input: "ExponentialDecay"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_2_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_MobilenetV1/Conv2d_3_depthwise/depthwise_weights/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "MobilenetV1/Conv2d_3_depthwise/depthwise_weights"
  input: "ExponentialDecay"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_3_depthwise/depthwise_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_MobilenetV1/Conv2d_3_depthwise/BatchNorm/gamma/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "MobilenetV1/Conv2d_3_depthwise/BatchNorm/gamma"
  input: "ExponentialDecay"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_3_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_MobilenetV1/Conv2d_3_depthwise/BatchNorm/beta/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "MobilenetV1/Conv2d_3_depthwise/BatchNorm/beta"
  input: "ExponentialDecay"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_3_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_MobilenetV1/Conv2d_3_pointwise/weights/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "MobilenetV1/Conv2d_3_pointwise/weights"
  input: "ExponentialDecay"
  input: "gradients/AddN_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_MobilenetV1/Conv2d_3_pointwise/BatchNorm/gamma/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/gamma"
  input: "ExponentialDecay"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_3_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_MobilenetV1/Conv2d_3_pointwise/BatchNorm/beta/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/beta"
  input: "ExponentialDecay"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_3_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_MobilenetV1/Conv2d_4_depthwise/depthwise_weights/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "MobilenetV1/Conv2d_4_depthwise/depthwise_weights"
  input: "ExponentialDecay"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_4_depthwise/depthwise_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_MobilenetV1/Conv2d_4_depthwise/BatchNorm/gamma/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "MobilenetV1/Conv2d_4_depthwise/BatchNorm/gamma"
  input: "ExponentialDecay"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_4_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_MobilenetV1/Conv2d_4_depthwise/BatchNorm/beta/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "MobilenetV1/Conv2d_4_depthwise/BatchNorm/beta"
  input: "ExponentialDecay"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_4_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_MobilenetV1/Conv2d_4_pointwise/weights/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "MobilenetV1/Conv2d_4_pointwise/weights"
  input: "ExponentialDecay"
  input: "gradients/AddN_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_MobilenetV1/Conv2d_4_pointwise/BatchNorm/gamma/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/gamma"
  input: "ExponentialDecay"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_4_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_MobilenetV1/Conv2d_4_pointwise/BatchNorm/beta/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/beta"
  input: "ExponentialDecay"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_4_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_MobilenetV1/Conv2d_5_depthwise/depthwise_weights/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "MobilenetV1/Conv2d_5_depthwise/depthwise_weights"
  input: "ExponentialDecay"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_5_depthwise/depthwise_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 192
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_MobilenetV1/Conv2d_5_depthwise/BatchNorm/gamma/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "MobilenetV1/Conv2d_5_depthwise/BatchNorm/gamma"
  input: "ExponentialDecay"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_5_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_MobilenetV1/Conv2d_5_depthwise/BatchNorm/beta/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "MobilenetV1/Conv2d_5_depthwise/BatchNorm/beta"
  input: "ExponentialDecay"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_5_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_MobilenetV1/Conv2d_5_pointwise/weights/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "MobilenetV1/Conv2d_5_pointwise/weights"
  input: "ExponentialDecay"
  input: "gradients/AddN_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 192
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_MobilenetV1/Conv2d_5_pointwise/BatchNorm/gamma/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/gamma"
  input: "ExponentialDecay"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_5_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_MobilenetV1/Conv2d_5_pointwise/BatchNorm/beta/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/beta"
  input: "ExponentialDecay"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_5_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_MobilenetV1/Conv2d_6_depthwise/depthwise_weights/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "MobilenetV1/Conv2d_6_depthwise/depthwise_weights"
  input: "ExponentialDecay"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_6_depthwise/depthwise_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 192
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_MobilenetV1/Conv2d_6_depthwise/BatchNorm/gamma/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "MobilenetV1/Conv2d_6_depthwise/BatchNorm/gamma"
  input: "ExponentialDecay"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_6_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_MobilenetV1/Conv2d_6_depthwise/BatchNorm/beta/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "MobilenetV1/Conv2d_6_depthwise/BatchNorm/beta"
  input: "ExponentialDecay"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_6_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_MobilenetV1/Conv2d_6_pointwise/weights/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "MobilenetV1/Conv2d_6_pointwise/weights"
  input: "ExponentialDecay"
  input: "gradients/AddN_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 192
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_MobilenetV1/Conv2d_6_pointwise/BatchNorm/gamma/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/gamma"
  input: "ExponentialDecay"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_6_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_MobilenetV1/Conv2d_6_pointwise/BatchNorm/beta/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/beta"
  input: "ExponentialDecay"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_6_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_MobilenetV1/Conv2d_7_depthwise/depthwise_weights/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "MobilenetV1/Conv2d_7_depthwise/depthwise_weights"
  input: "ExponentialDecay"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_7_depthwise/depthwise_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_MobilenetV1/Conv2d_7_depthwise/BatchNorm/gamma/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "MobilenetV1/Conv2d_7_depthwise/BatchNorm/gamma"
  input: "ExponentialDecay"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_7_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_MobilenetV1/Conv2d_7_depthwise/BatchNorm/beta/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "MobilenetV1/Conv2d_7_depthwise/BatchNorm/beta"
  input: "ExponentialDecay"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_7_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_MobilenetV1/Conv2d_7_pointwise/weights/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "MobilenetV1/Conv2d_7_pointwise/weights"
  input: "ExponentialDecay"
  input: "gradients/AddN_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_MobilenetV1/Conv2d_7_pointwise/BatchNorm/gamma/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/gamma"
  input: "ExponentialDecay"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_7_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_MobilenetV1/Conv2d_7_pointwise/BatchNorm/beta/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/beta"
  input: "ExponentialDecay"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_7_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_MobilenetV1/Conv2d_8_depthwise/depthwise_weights/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "MobilenetV1/Conv2d_8_depthwise/depthwise_weights"
  input: "ExponentialDecay"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_8_depthwise/depthwise_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_MobilenetV1/Conv2d_8_depthwise/BatchNorm/gamma/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "MobilenetV1/Conv2d_8_depthwise/BatchNorm/gamma"
  input: "ExponentialDecay"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_8_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_MobilenetV1/Conv2d_8_depthwise/BatchNorm/beta/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "MobilenetV1/Conv2d_8_depthwise/BatchNorm/beta"
  input: "ExponentialDecay"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_8_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_MobilenetV1/Conv2d_8_pointwise/weights/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "MobilenetV1/Conv2d_8_pointwise/weights"
  input: "ExponentialDecay"
  input: "gradients/AddN_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_MobilenetV1/Conv2d_8_pointwise/BatchNorm/gamma/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/gamma"
  input: "ExponentialDecay"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_8_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_MobilenetV1/Conv2d_8_pointwise/BatchNorm/beta/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/beta"
  input: "ExponentialDecay"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_8_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_MobilenetV1/Conv2d_9_depthwise/depthwise_weights/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "MobilenetV1/Conv2d_9_depthwise/depthwise_weights"
  input: "ExponentialDecay"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_9_depthwise/depthwise_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_MobilenetV1/Conv2d_9_depthwise/BatchNorm/gamma/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "MobilenetV1/Conv2d_9_depthwise/BatchNorm/gamma"
  input: "ExponentialDecay"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_9_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_MobilenetV1/Conv2d_9_depthwise/BatchNorm/beta/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "MobilenetV1/Conv2d_9_depthwise/BatchNorm/beta"
  input: "ExponentialDecay"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_9_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_MobilenetV1/Conv2d_9_pointwise/weights/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "MobilenetV1/Conv2d_9_pointwise/weights"
  input: "ExponentialDecay"
  input: "gradients/AddN_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_MobilenetV1/Conv2d_9_pointwise/BatchNorm/gamma/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/gamma"
  input: "ExponentialDecay"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_9_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_MobilenetV1/Conv2d_9_pointwise/BatchNorm/beta/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/beta"
  input: "ExponentialDecay"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_9_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_MobilenetV1/Conv2d_10_depthwise/depthwise_weights/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "MobilenetV1/Conv2d_10_depthwise/depthwise_weights"
  input: "ExponentialDecay"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_10_depthwise/depthwise_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_MobilenetV1/Conv2d_10_depthwise/BatchNorm/gamma/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "MobilenetV1/Conv2d_10_depthwise/BatchNorm/gamma"
  input: "ExponentialDecay"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_10_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_MobilenetV1/Conv2d_10_depthwise/BatchNorm/beta/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "MobilenetV1/Conv2d_10_depthwise/BatchNorm/beta"
  input: "ExponentialDecay"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_10_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_MobilenetV1/Conv2d_10_pointwise/weights/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "MobilenetV1/Conv2d_10_pointwise/weights"
  input: "ExponentialDecay"
  input: "gradients/AddN_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_MobilenetV1/Conv2d_10_pointwise/BatchNorm/gamma/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/gamma"
  input: "ExponentialDecay"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_10_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_MobilenetV1/Conv2d_10_pointwise/BatchNorm/beta/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/beta"
  input: "ExponentialDecay"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_10_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_MobilenetV1/Conv2d_11_depthwise/depthwise_weights/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "MobilenetV1/Conv2d_11_depthwise/depthwise_weights"
  input: "ExponentialDecay"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_11_depthwise/depthwise_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_MobilenetV1/Conv2d_11_depthwise/BatchNorm/gamma/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "MobilenetV1/Conv2d_11_depthwise/BatchNorm/gamma"
  input: "ExponentialDecay"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_11_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_MobilenetV1/Conv2d_11_depthwise/BatchNorm/beta/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "MobilenetV1/Conv2d_11_depthwise/BatchNorm/beta"
  input: "ExponentialDecay"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_11_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_MobilenetV1/Conv2d_11_pointwise/weights/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "MobilenetV1/Conv2d_11_pointwise/weights"
  input: "ExponentialDecay"
  input: "gradients/AddN_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_MobilenetV1/Conv2d_11_pointwise/BatchNorm/gamma/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/gamma"
  input: "ExponentialDecay"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_11_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_MobilenetV1/Conv2d_11_pointwise/BatchNorm/beta/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/beta"
  input: "ExponentialDecay"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_11_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_MobilenetV1/Conv2d_12_depthwise/depthwise_weights/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "MobilenetV1/Conv2d_12_depthwise/depthwise_weights"
  input: "ExponentialDecay"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_12_depthwise/depthwise_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_MobilenetV1/Conv2d_12_depthwise/BatchNorm/gamma/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "MobilenetV1/Conv2d_12_depthwise/BatchNorm/gamma"
  input: "ExponentialDecay"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_12_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_MobilenetV1/Conv2d_12_depthwise/BatchNorm/beta/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "MobilenetV1/Conv2d_12_depthwise/BatchNorm/beta"
  input: "ExponentialDecay"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_12_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_MobilenetV1/Conv2d_12_pointwise/weights/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "MobilenetV1/Conv2d_12_pointwise/weights"
  input: "ExponentialDecay"
  input: "gradients/AddN_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_MobilenetV1/Conv2d_12_pointwise/BatchNorm/gamma/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "MobilenetV1/Conv2d_12_pointwise/BatchNorm/gamma"
  input: "ExponentialDecay"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_12_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_MobilenetV1/Conv2d_12_pointwise/BatchNorm/beta/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "MobilenetV1/Conv2d_12_pointwise/BatchNorm/beta"
  input: "ExponentialDecay"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_12_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_MobilenetV1/Conv2d_13_depthwise/depthwise_weights/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "MobilenetV1/Conv2d_13_depthwise/depthwise_weights"
  input: "ExponentialDecay"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_13_depthwise/depthwise_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 768
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_MobilenetV1/Conv2d_13_depthwise/BatchNorm/gamma/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "MobilenetV1/Conv2d_13_depthwise/BatchNorm/gamma"
  input: "ExponentialDecay"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_13_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_MobilenetV1/Conv2d_13_depthwise/BatchNorm/beta/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "MobilenetV1/Conv2d_13_depthwise/BatchNorm/beta"
  input: "ExponentialDecay"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_13_depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_MobilenetV1/Conv2d_13_pointwise/weights/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "MobilenetV1/Conv2d_13_pointwise/weights"
  input: "ExponentialDecay"
  input: "gradients/AddN_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_MobilenetV1/Conv2d_13_pointwise/BatchNorm/gamma/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "MobilenetV1/Conv2d_13_pointwise/BatchNorm/gamma"
  input: "ExponentialDecay"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_13_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_MobilenetV1/Conv2d_13_pointwise/BatchNorm/beta/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "MobilenetV1/Conv2d_13_pointwise/BatchNorm/beta"
  input: "ExponentialDecay"
  input: "gradients/MobilenetV1/MobilenetV1/Conv2d_13_pointwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_MobilenetV1/Logits/Conv2d_1c_1x1/weights/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "MobilenetV1/Logits/Conv2d_1c_1x1/weights"
  input: "ExponentialDecay"
  input: "gradients/AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Logits/Conv2d_1c_1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 768
          }
          dim {
            size: 36
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_MobilenetV1/Logits/Conv2d_1c_1x1/biases/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "MobilenetV1/Logits/Conv2d_1c_1x1/biases"
  input: "ExponentialDecay"
  input: "gradients/MobilenetV1/Logits/Conv2d_1c_1x1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Logits/Conv2d_1c_1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 36
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update"
  op: "NoOp"
  input: "^GradientDescent/update_MobilenetV1/Conv2d_0/weights/ApplyGradientDescent"
  input: "^GradientDescent/update_MobilenetV1/Conv2d_0/BatchNorm/gamma/ApplyGradientDescent"
  input: "^GradientDescent/update_MobilenetV1/Conv2d_0/BatchNorm/beta/ApplyGradientDescent"
  input: "^GradientDescent/update_MobilenetV1/Conv2d_1_depthwise/depthwise_weights/ApplyGradientDescent"
  input: "^GradientDescent/update_MobilenetV1/Conv2d_1_depthwise/BatchNorm/gamma/ApplyGradientDescent"
  input: "^GradientDescent/update_MobilenetV1/Conv2d_1_depthwise/BatchNorm/beta/ApplyGradientDescent"
  input: "^GradientDescent/update_MobilenetV1/Conv2d_1_pointwise/weights/ApplyGradientDescent"
  input: "^GradientDescent/update_MobilenetV1/Conv2d_1_pointwise/BatchNorm/gamma/ApplyGradientDescent"
  input: "^GradientDescent/update_MobilenetV1/Conv2d_1_pointwise/BatchNorm/beta/ApplyGradientDescent"
  input: "^GradientDescent/update_MobilenetV1/Conv2d_2_depthwise/depthwise_weights/ApplyGradientDescent"
  input: "^GradientDescent/update_MobilenetV1/Conv2d_2_depthwise/BatchNorm/gamma/ApplyGradientDescent"
  input: "^GradientDescent/update_MobilenetV1/Conv2d_2_depthwise/BatchNorm/beta/ApplyGradientDescent"
  input: "^GradientDescent/update_MobilenetV1/Conv2d_2_pointwise/weights/ApplyGradientDescent"
  input: "^GradientDescent/update_MobilenetV1/Conv2d_2_pointwise/BatchNorm/gamma/ApplyGradientDescent"
  input: "^GradientDescent/update_MobilenetV1/Conv2d_2_pointwise/BatchNorm/beta/ApplyGradientDescent"
  input: "^GradientDescent/update_MobilenetV1/Conv2d_3_depthwise/depthwise_weights/ApplyGradientDescent"
  input: "^GradientDescent/update_MobilenetV1/Conv2d_3_depthwise/BatchNorm/gamma/ApplyGradientDescent"
  input: "^GradientDescent/update_MobilenetV1/Conv2d_3_depthwise/BatchNorm/beta/ApplyGradientDescent"
  input: "^GradientDescent/update_MobilenetV1/Conv2d_3_pointwise/weights/ApplyGradientDescent"
  input: "^GradientDescent/update_MobilenetV1/Conv2d_3_pointwise/BatchNorm/gamma/ApplyGradientDescent"
  input: "^GradientDescent/update_MobilenetV1/Conv2d_3_pointwise/BatchNorm/beta/ApplyGradientDescent"
  input: "^GradientDescent/update_MobilenetV1/Conv2d_4_depthwise/depthwise_weights/ApplyGradientDescent"
  input: "^GradientDescent/update_MobilenetV1/Conv2d_4_depthwise/BatchNorm/gamma/ApplyGradientDescent"
  input: "^GradientDescent/update_MobilenetV1/Conv2d_4_depthwise/BatchNorm/beta/ApplyGradientDescent"
  input: "^GradientDescent/update_MobilenetV1/Conv2d_4_pointwise/weights/ApplyGradientDescent"
  input: "^GradientDescent/update_MobilenetV1/Conv2d_4_pointwise/BatchNorm/gamma/ApplyGradientDescent"
  input: "^GradientDescent/update_MobilenetV1/Conv2d_4_pointwise/BatchNorm/beta/ApplyGradientDescent"
  input: "^GradientDescent/update_MobilenetV1/Conv2d_5_depthwise/depthwise_weights/ApplyGradientDescent"
  input: "^GradientDescent/update_MobilenetV1/Conv2d_5_depthwise/BatchNorm/gamma/ApplyGradientDescent"
  input: "^GradientDescent/update_MobilenetV1/Conv2d_5_depthwise/BatchNorm/beta/ApplyGradientDescent"
  input: "^GradientDescent/update_MobilenetV1/Conv2d_5_pointwise/weights/ApplyGradientDescent"
  input: "^GradientDescent/update_MobilenetV1/Conv2d_5_pointwise/BatchNorm/gamma/ApplyGradientDescent"
  input: "^GradientDescent/update_MobilenetV1/Conv2d_5_pointwise/BatchNorm/beta/ApplyGradientDescent"
  input: "^GradientDescent/update_MobilenetV1/Conv2d_6_depthwise/depthwise_weights/ApplyGradientDescent"
  input: "^GradientDescent/update_MobilenetV1/Conv2d_6_depthwise/BatchNorm/gamma/ApplyGradientDescent"
  input: "^GradientDescent/update_MobilenetV1/Conv2d_6_depthwise/BatchNorm/beta/ApplyGradientDescent"
  input: "^GradientDescent/update_MobilenetV1/Conv2d_6_pointwise/weights/ApplyGradientDescent"
  input: "^GradientDescent/update_MobilenetV1/Conv2d_6_pointwise/BatchNorm/gamma/ApplyGradientDescent"
  input: "^GradientDescent/update_MobilenetV1/Conv2d_6_pointwise/BatchNorm/beta/ApplyGradientDescent"
  input: "^GradientDescent/update_MobilenetV1/Conv2d_7_depthwise/depthwise_weights/ApplyGradientDescent"
  input: "^GradientDescent/update_MobilenetV1/Conv2d_7_depthwise/BatchNorm/gamma/ApplyGradientDescent"
  input: "^GradientDescent/update_MobilenetV1/Conv2d_7_depthwise/BatchNorm/beta/ApplyGradientDescent"
  input: "^GradientDescent/update_MobilenetV1/Conv2d_7_pointwise/weights/ApplyGradientDescent"
  input: "^GradientDescent/update_MobilenetV1/Conv2d_7_pointwise/BatchNorm/gamma/ApplyGradientDescent"
  input: "^GradientDescent/update_MobilenetV1/Conv2d_7_pointwise/BatchNorm/beta/ApplyGradientDescent"
  input: "^GradientDescent/update_MobilenetV1/Conv2d_8_depthwise/depthwise_weights/ApplyGradientDescent"
  input: "^GradientDescent/update_MobilenetV1/Conv2d_8_depthwise/BatchNorm/gamma/ApplyGradientDescent"
  input: "^GradientDescent/update_MobilenetV1/Conv2d_8_depthwise/BatchNorm/beta/ApplyGradientDescent"
  input: "^GradientDescent/update_MobilenetV1/Conv2d_8_pointwise/weights/ApplyGradientDescent"
  input: "^GradientDescent/update_MobilenetV1/Conv2d_8_pointwise/BatchNorm/gamma/ApplyGradientDescent"
  input: "^GradientDescent/update_MobilenetV1/Conv2d_8_pointwise/BatchNorm/beta/ApplyGradientDescent"
  input: "^GradientDescent/update_MobilenetV1/Conv2d_9_depthwise/depthwise_weights/ApplyGradientDescent"
  input: "^GradientDescent/update_MobilenetV1/Conv2d_9_depthwise/BatchNorm/gamma/ApplyGradientDescent"
  input: "^GradientDescent/update_MobilenetV1/Conv2d_9_depthwise/BatchNorm/beta/ApplyGradientDescent"
  input: "^GradientDescent/update_MobilenetV1/Conv2d_9_pointwise/weights/ApplyGradientDescent"
  input: "^GradientDescent/update_MobilenetV1/Conv2d_9_pointwise/BatchNorm/gamma/ApplyGradientDescent"
  input: "^GradientDescent/update_MobilenetV1/Conv2d_9_pointwise/BatchNorm/beta/ApplyGradientDescent"
  input: "^GradientDescent/update_MobilenetV1/Conv2d_10_depthwise/depthwise_weights/ApplyGradientDescent"
  input: "^GradientDescent/update_MobilenetV1/Conv2d_10_depthwise/BatchNorm/gamma/ApplyGradientDescent"
  input: "^GradientDescent/update_MobilenetV1/Conv2d_10_depthwise/BatchNorm/beta/ApplyGradientDescent"
  input: "^GradientDescent/update_MobilenetV1/Conv2d_10_pointwise/weights/ApplyGradientDescent"
  input: "^GradientDescent/update_MobilenetV1/Conv2d_10_pointwise/BatchNorm/gamma/ApplyGradientDescent"
  input: "^GradientDescent/update_MobilenetV1/Conv2d_10_pointwise/BatchNorm/beta/ApplyGradientDescent"
  input: "^GradientDescent/update_MobilenetV1/Conv2d_11_depthwise/depthwise_weights/ApplyGradientDescent"
  input: "^GradientDescent/update_MobilenetV1/Conv2d_11_depthwise/BatchNorm/gamma/ApplyGradientDescent"
  input: "^GradientDescent/update_MobilenetV1/Conv2d_11_depthwise/BatchNorm/beta/ApplyGradientDescent"
  input: "^GradientDescent/update_MobilenetV1/Conv2d_11_pointwise/weights/ApplyGradientDescent"
  input: "^GradientDescent/update_MobilenetV1/Conv2d_11_pointwise/BatchNorm/gamma/ApplyGradientDescent"
  input: "^GradientDescent/update_MobilenetV1/Conv2d_11_pointwise/BatchNorm/beta/ApplyGradientDescent"
  input: "^GradientDescent/update_MobilenetV1/Conv2d_12_depthwise/depthwise_weights/ApplyGradientDescent"
  input: "^GradientDescent/update_MobilenetV1/Conv2d_12_depthwise/BatchNorm/gamma/ApplyGradientDescent"
  input: "^GradientDescent/update_MobilenetV1/Conv2d_12_depthwise/BatchNorm/beta/ApplyGradientDescent"
  input: "^GradientDescent/update_MobilenetV1/Conv2d_12_pointwise/weights/ApplyGradientDescent"
  input: "^GradientDescent/update_MobilenetV1/Conv2d_12_pointwise/BatchNorm/gamma/ApplyGradientDescent"
  input: "^GradientDescent/update_MobilenetV1/Conv2d_12_pointwise/BatchNorm/beta/ApplyGradientDescent"
  input: "^GradientDescent/update_MobilenetV1/Conv2d_13_depthwise/depthwise_weights/ApplyGradientDescent"
  input: "^GradientDescent/update_MobilenetV1/Conv2d_13_depthwise/BatchNorm/gamma/ApplyGradientDescent"
  input: "^GradientDescent/update_MobilenetV1/Conv2d_13_depthwise/BatchNorm/beta/ApplyGradientDescent"
  input: "^GradientDescent/update_MobilenetV1/Conv2d_13_pointwise/weights/ApplyGradientDescent"
  input: "^GradientDescent/update_MobilenetV1/Conv2d_13_pointwise/BatchNorm/gamma/ApplyGradientDescent"
  input: "^GradientDescent/update_MobilenetV1/Conv2d_13_pointwise/BatchNorm/beta/ApplyGradientDescent"
  input: "^GradientDescent/update_MobilenetV1/Logits/Conv2d_1c_1x1/weights/ApplyGradientDescent"
  input: "^GradientDescent/update_MobilenetV1/Logits/Conv2d_1c_1x1/biases/ApplyGradientDescent"
}
node {
  name: "GradientDescent/value"
  op: "Const"
  input: "^GradientDescent/update"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "GradientDescent"
  op: "AssignAdd"
  input: "global_step"
  input: "GradientDescent/value"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/CheckNumerics"
  op: "CheckNumerics"
  input: "control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "message"
    value {
      s: "LossTensor is inf or nan"
    }
  }
}
node {
  name: "train_op/control_dependency"
  op: "Identity"
  input: "train_op/CheckNumerics"
  input: "^GradientDescent"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/CheckNumerics"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "losses/total_loss/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "losses/total_loss"
      }
    }
  }
}
node {
  name: "losses/total_loss"
  op: "ScalarSummary"
  input: "losses/total_loss/tags"
  input: "total_loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/learning_rate/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "training/learning_rate"
      }
    }
  }
}
node {
  name: "training/learning_rate"
  op: "ScalarSummary"
  input: "training/learning_rate/tags"
  input: "ExponentialDecay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/accuracy/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "training/accuracy"
      }
    }
  }
}
node {
  name: "training/accuracy"
  op: "ScalarSummary"
  input: "training/accuracy/tags"
  input: "Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 138
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 138
          }
        }
        string_val: "MobilenetV1/Conv2d_0/BatchNorm/beta"
        string_val: "MobilenetV1/Conv2d_0/BatchNorm/gamma"
        string_val: "MobilenetV1/Conv2d_0/BatchNorm/moving_mean"
        string_val: "MobilenetV1/Conv2d_0/BatchNorm/moving_variance"
        string_val: "MobilenetV1/Conv2d_0/weights"
        string_val: "MobilenetV1/Conv2d_10_depthwise/BatchNorm/beta"
        string_val: "MobilenetV1/Conv2d_10_depthwise/BatchNorm/gamma"
        string_val: "MobilenetV1/Conv2d_10_depthwise/BatchNorm/moving_mean"
        string_val: "MobilenetV1/Conv2d_10_depthwise/BatchNorm/moving_variance"
        string_val: "MobilenetV1/Conv2d_10_depthwise/depthwise_weights"
        string_val: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/beta"
        string_val: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/gamma"
        string_val: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_mean"
        string_val: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_variance"
        string_val: "MobilenetV1/Conv2d_10_pointwise/weights"
        string_val: "MobilenetV1/Conv2d_11_depthwise/BatchNorm/beta"
        string_val: "MobilenetV1/Conv2d_11_depthwise/BatchNorm/gamma"
        string_val: "MobilenetV1/Conv2d_11_depthwise/BatchNorm/moving_mean"
        string_val: "MobilenetV1/Conv2d_11_depthwise/BatchNorm/moving_variance"
        string_val: "MobilenetV1/Conv2d_11_depthwise/depthwise_weights"
        string_val: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/beta"
        string_val: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/gamma"
        string_val: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_mean"
        string_val: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_variance"
        string_val: "MobilenetV1/Conv2d_11_pointwise/weights"
        string_val: "MobilenetV1/Conv2d_12_depthwise/BatchNorm/beta"
        string_val: "MobilenetV1/Conv2d_12_depthwise/BatchNorm/gamma"
        string_val: "MobilenetV1/Conv2d_12_depthwise/BatchNorm/moving_mean"
        string_val: "MobilenetV1/Conv2d_12_depthwise/BatchNorm/moving_variance"
        string_val: "MobilenetV1/Conv2d_12_depthwise/depthwise_weights"
        string_val: "MobilenetV1/Conv2d_12_pointwise/BatchNorm/beta"
        string_val: "MobilenetV1/Conv2d_12_pointwise/BatchNorm/gamma"
        string_val: "MobilenetV1/Conv2d_12_pointwise/BatchNorm/moving_mean"
        string_val: "MobilenetV1/Conv2d_12_pointwise/BatchNorm/moving_variance"
        string_val: "MobilenetV1/Conv2d_12_pointwise/weights"
        string_val: "MobilenetV1/Conv2d_13_depthwise/BatchNorm/beta"
        string_val: "MobilenetV1/Conv2d_13_depthwise/BatchNorm/gamma"
        string_val: "MobilenetV1/Conv2d_13_depthwise/BatchNorm/moving_mean"
        string_val: "MobilenetV1/Conv2d_13_depthwise/BatchNorm/moving_variance"
        string_val: "MobilenetV1/Conv2d_13_depthwise/depthwise_weights"
        string_val: "MobilenetV1/Conv2d_13_pointwise/BatchNorm/beta"
        string_val: "MobilenetV1/Conv2d_13_pointwise/BatchNorm/gamma"
        string_val: "MobilenetV1/Conv2d_13_pointwise/BatchNorm/moving_mean"
        string_val: "MobilenetV1/Conv2d_13_pointwise/BatchNorm/moving_variance"
        string_val: "MobilenetV1/Conv2d_13_pointwise/weights"
        string_val: "MobilenetV1/Conv2d_1_depthwise/BatchNorm/beta"
        string_val: "MobilenetV1/Conv2d_1_depthwise/BatchNorm/gamma"
        string_val: "MobilenetV1/Conv2d_1_depthwise/BatchNorm/moving_mean"
        string_val: "MobilenetV1/Conv2d_1_depthwise/BatchNorm/moving_variance"
        string_val: "MobilenetV1/Conv2d_1_depthwise/depthwise_weights"
        string_val: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/beta"
        string_val: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/gamma"
        string_val: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_mean"
        string_val: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_variance"
        string_val: "MobilenetV1/Conv2d_1_pointwise/weights"
        string_val: "MobilenetV1/Conv2d_2_depthwise/BatchNorm/beta"
        string_val: "MobilenetV1/Conv2d_2_depthwise/BatchNorm/gamma"
        string_val: "MobilenetV1/Conv2d_2_depthwise/BatchNorm/moving_mean"
        string_val: "MobilenetV1/Conv2d_2_depthwise/BatchNorm/moving_variance"
        string_val: "MobilenetV1/Conv2d_2_depthwise/depthwise_weights"
        string_val: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/beta"
        string_val: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/gamma"
        string_val: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_mean"
        string_val: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_variance"
        string_val: "MobilenetV1/Conv2d_2_pointwise/weights"
        string_val: "MobilenetV1/Conv2d_3_depthwise/BatchNorm/beta"
        string_val: "MobilenetV1/Conv2d_3_depthwise/BatchNorm/gamma"
        string_val: "MobilenetV1/Conv2d_3_depthwise/BatchNorm/moving_mean"
        string_val: "MobilenetV1/Conv2d_3_depthwise/BatchNorm/moving_variance"
        string_val: "MobilenetV1/Conv2d_3_depthwise/depthwise_weights"
        string_val: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/beta"
        string_val: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/gamma"
        string_val: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_mean"
        string_val: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_variance"
        string_val: "MobilenetV1/Conv2d_3_pointwise/weights"
        string_val: "MobilenetV1/Conv2d_4_depthwise/BatchNorm/beta"
        string_val: "MobilenetV1/Conv2d_4_depthwise/BatchNorm/gamma"
        string_val: "MobilenetV1/Conv2d_4_depthwise/BatchNorm/moving_mean"
        string_val: "MobilenetV1/Conv2d_4_depthwise/BatchNorm/moving_variance"
        string_val: "MobilenetV1/Conv2d_4_depthwise/depthwise_weights"
        string_val: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/beta"
        string_val: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/gamma"
        string_val: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_mean"
        string_val: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_variance"
        string_val: "MobilenetV1/Conv2d_4_pointwise/weights"
        string_val: "MobilenetV1/Conv2d_5_depthwise/BatchNorm/beta"
        string_val: "MobilenetV1/Conv2d_5_depthwise/BatchNorm/gamma"
        string_val: "MobilenetV1/Conv2d_5_depthwise/BatchNorm/moving_mean"
        string_val: "MobilenetV1/Conv2d_5_depthwise/BatchNorm/moving_variance"
        string_val: "MobilenetV1/Conv2d_5_depthwise/depthwise_weights"
        string_val: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/beta"
        string_val: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/gamma"
        string_val: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_mean"
        string_val: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_variance"
        string_val: "MobilenetV1/Conv2d_5_pointwise/weights"
        string_val: "MobilenetV1/Conv2d_6_depthwise/BatchNorm/beta"
        string_val: "MobilenetV1/Conv2d_6_depthwise/BatchNorm/gamma"
        string_val: "MobilenetV1/Conv2d_6_depthwise/BatchNorm/moving_mean"
        string_val: "MobilenetV1/Conv2d_6_depthwise/BatchNorm/moving_variance"
        string_val: "MobilenetV1/Conv2d_6_depthwise/depthwise_weights"
        string_val: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/beta"
        string_val: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/gamma"
        string_val: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_mean"
        string_val: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_variance"
        string_val: "MobilenetV1/Conv2d_6_pointwise/weights"
        string_val: "MobilenetV1/Conv2d_7_depthwise/BatchNorm/beta"
        string_val: "MobilenetV1/Conv2d_7_depthwise/BatchNorm/gamma"
        string_val: "MobilenetV1/Conv2d_7_depthwise/BatchNorm/moving_mean"
        string_val: "MobilenetV1/Conv2d_7_depthwise/BatchNorm/moving_variance"
        string_val: "MobilenetV1/Conv2d_7_depthwise/depthwise_weights"
        string_val: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/beta"
        string_val: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/gamma"
        string_val: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_mean"
        string_val: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_variance"
        string_val: "MobilenetV1/Conv2d_7_pointwise/weights"
        string_val: "MobilenetV1/Conv2d_8_depthwise/BatchNorm/beta"
        string_val: "MobilenetV1/Conv2d_8_depthwise/BatchNorm/gamma"
        string_val: "MobilenetV1/Conv2d_8_depthwise/BatchNorm/moving_mean"
        string_val: "MobilenetV1/Conv2d_8_depthwise/BatchNorm/moving_variance"
        string_val: "MobilenetV1/Conv2d_8_depthwise/depthwise_weights"
        string_val: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/beta"
        string_val: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/gamma"
        string_val: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_mean"
        string_val: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_variance"
        string_val: "MobilenetV1/Conv2d_8_pointwise/weights"
        string_val: "MobilenetV1/Conv2d_9_depthwise/BatchNorm/beta"
        string_val: "MobilenetV1/Conv2d_9_depthwise/BatchNorm/gamma"
        string_val: "MobilenetV1/Conv2d_9_depthwise/BatchNorm/moving_mean"
        string_val: "MobilenetV1/Conv2d_9_depthwise/BatchNorm/moving_variance"
        string_val: "MobilenetV1/Conv2d_9_depthwise/depthwise_weights"
        string_val: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/beta"
        string_val: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/gamma"
        string_val: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_mean"
        string_val: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_variance"
        string_val: "MobilenetV1/Conv2d_9_pointwise/weights"
        string_val: "MobilenetV1/Logits/Conv2d_1c_1x1/biases"
        string_val: "MobilenetV1/Logits/Conv2d_1c_1x1/weights"
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 138
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 138
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/Const"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "MobilenetV1/Conv2d_0/BatchNorm/beta"
  input: "MobilenetV1/Conv2d_0/BatchNorm/gamma"
  input: "MobilenetV1/Conv2d_0/BatchNorm/moving_mean"
  input: "MobilenetV1/Conv2d_0/BatchNorm/moving_variance"
  input: "MobilenetV1/Conv2d_0/weights"
  input: "MobilenetV1/Conv2d_10_depthwise/BatchNorm/beta"
  input: "MobilenetV1/Conv2d_10_depthwise/BatchNorm/gamma"
  input: "MobilenetV1/Conv2d_10_depthwise/BatchNorm/moving_mean"
  input: "MobilenetV1/Conv2d_10_depthwise/BatchNorm/moving_variance"
  input: "MobilenetV1/Conv2d_10_depthwise/depthwise_weights"
  input: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/beta"
  input: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/gamma"
  input: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_mean"
  input: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_variance"
  input: "MobilenetV1/Conv2d_10_pointwise/weights"
  input: "MobilenetV1/Conv2d_11_depthwise/BatchNorm/beta"
  input: "MobilenetV1/Conv2d_11_depthwise/BatchNorm/gamma"
  input: "MobilenetV1/Conv2d_11_depthwise/BatchNorm/moving_mean"
  input: "MobilenetV1/Conv2d_11_depthwise/BatchNorm/moving_variance"
  input: "MobilenetV1/Conv2d_11_depthwise/depthwise_weights"
  input: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/beta"
  input: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/gamma"
  input: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_mean"
  input: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_variance"
  input: "MobilenetV1/Conv2d_11_pointwise/weights"
  input: "MobilenetV1/Conv2d_12_depthwise/BatchNorm/beta"
  input: "MobilenetV1/Conv2d_12_depthwise/BatchNorm/gamma"
  input: "MobilenetV1/Conv2d_12_depthwise/BatchNorm/moving_mean"
  input: "MobilenetV1/Conv2d_12_depthwise/BatchNorm/moving_variance"
  input: "MobilenetV1/Conv2d_12_depthwise/depthwise_weights"
  input: "MobilenetV1/Conv2d_12_pointwise/BatchNorm/beta"
  input: "MobilenetV1/Conv2d_12_pointwise/BatchNorm/gamma"
  input: "MobilenetV1/Conv2d_12_pointwise/BatchNorm/moving_mean"
  input: "MobilenetV1/Conv2d_12_pointwise/BatchNorm/moving_variance"
  input: "MobilenetV1/Conv2d_12_pointwise/weights"
  input: "MobilenetV1/Conv2d_13_depthwise/BatchNorm/beta"
  input: "MobilenetV1/Conv2d_13_depthwise/BatchNorm/gamma"
  input: "MobilenetV1/Conv2d_13_depthwise/BatchNorm/moving_mean"
  input: "MobilenetV1/Conv2d_13_depthwise/BatchNorm/moving_variance"
  input: "MobilenetV1/Conv2d_13_depthwise/depthwise_weights"
  input: "MobilenetV1/Conv2d_13_pointwise/BatchNorm/beta"
  input: "MobilenetV1/Conv2d_13_pointwise/BatchNorm/gamma"
  input: "MobilenetV1/Conv2d_13_pointwise/BatchNorm/moving_mean"
  input: "MobilenetV1/Conv2d_13_pointwise/BatchNorm/moving_variance"
  input: "MobilenetV1/Conv2d_13_pointwise/weights"
  input: "MobilenetV1/Conv2d_1_depthwise/BatchNorm/beta"
  input: "MobilenetV1/Conv2d_1_depthwise/BatchNorm/gamma"
  input: "MobilenetV1/Conv2d_1_depthwise/BatchNorm/moving_mean"
  input: "MobilenetV1/Conv2d_1_depthwise/BatchNorm/moving_variance"
  input: "MobilenetV1/Conv2d_1_depthwise/depthwise_weights"
  input: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/beta"
  input: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/gamma"
  input: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_mean"
  input: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_variance"
  input: "MobilenetV1/Conv2d_1_pointwise/weights"
  input: "MobilenetV1/Conv2d_2_depthwise/BatchNorm/beta"
  input: "MobilenetV1/Conv2d_2_depthwise/BatchNorm/gamma"
  input: "MobilenetV1/Conv2d_2_depthwise/BatchNorm/moving_mean"
  input: "MobilenetV1/Conv2d_2_depthwise/BatchNorm/moving_variance"
  input: "MobilenetV1/Conv2d_2_depthwise/depthwise_weights"
  input: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/beta"
  input: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/gamma"
  input: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_mean"
  input: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_variance"
  input: "MobilenetV1/Conv2d_2_pointwise/weights"
  input: "MobilenetV1/Conv2d_3_depthwise/BatchNorm/beta"
  input: "MobilenetV1/Conv2d_3_depthwise/BatchNorm/gamma"
  input: "MobilenetV1/Conv2d_3_depthwise/BatchNorm/moving_mean"
  input: "MobilenetV1/Conv2d_3_depthwise/BatchNorm/moving_variance"
  input: "MobilenetV1/Conv2d_3_depthwise/depthwise_weights"
  input: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/beta"
  input: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/gamma"
  input: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_mean"
  input: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_variance"
  input: "MobilenetV1/Conv2d_3_pointwise/weights"
  input: "MobilenetV1/Conv2d_4_depthwise/BatchNorm/beta"
  input: "MobilenetV1/Conv2d_4_depthwise/BatchNorm/gamma"
  input: "MobilenetV1/Conv2d_4_depthwise/BatchNorm/moving_mean"
  input: "MobilenetV1/Conv2d_4_depthwise/BatchNorm/moving_variance"
  input: "MobilenetV1/Conv2d_4_depthwise/depthwise_weights"
  input: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/beta"
  input: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/gamma"
  input: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_mean"
  input: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_variance"
  input: "MobilenetV1/Conv2d_4_pointwise/weights"
  input: "MobilenetV1/Conv2d_5_depthwise/BatchNorm/beta"
  input: "MobilenetV1/Conv2d_5_depthwise/BatchNorm/gamma"
  input: "MobilenetV1/Conv2d_5_depthwise/BatchNorm/moving_mean"
  input: "MobilenetV1/Conv2d_5_depthwise/BatchNorm/moving_variance"
  input: "MobilenetV1/Conv2d_5_depthwise/depthwise_weights"
  input: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/beta"
  input: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/gamma"
  input: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_mean"
  input: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_variance"
  input: "MobilenetV1/Conv2d_5_pointwise/weights"
  input: "MobilenetV1/Conv2d_6_depthwise/BatchNorm/beta"
  input: "MobilenetV1/Conv2d_6_depthwise/BatchNorm/gamma"
  input: "MobilenetV1/Conv2d_6_depthwise/BatchNorm/moving_mean"
  input: "MobilenetV1/Conv2d_6_depthwise/BatchNorm/moving_variance"
  input: "MobilenetV1/Conv2d_6_depthwise/depthwise_weights"
  input: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/beta"
  input: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/gamma"
  input: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_mean"
  input: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_variance"
  input: "MobilenetV1/Conv2d_6_pointwise/weights"
  input: "MobilenetV1/Conv2d_7_depthwise/BatchNorm/beta"
  input: "MobilenetV1/Conv2d_7_depthwise/BatchNorm/gamma"
  input: "MobilenetV1/Conv2d_7_depthwise/BatchNorm/moving_mean"
  input: "MobilenetV1/Conv2d_7_depthwise/BatchNorm/moving_variance"
  input: "MobilenetV1/Conv2d_7_depthwise/depthwise_weights"
  input: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/beta"
  input: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/gamma"
  input: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_mean"
  input: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_variance"
  input: "MobilenetV1/Conv2d_7_pointwise/weights"
  input: "MobilenetV1/Conv2d_8_depthwise/BatchNorm/beta"
  input: "MobilenetV1/Conv2d_8_depthwise/BatchNorm/gamma"
  input: "MobilenetV1/Conv2d_8_depthwise/BatchNorm/moving_mean"
  input: "MobilenetV1/Conv2d_8_depthwise/BatchNorm/moving_variance"
  input: "MobilenetV1/Conv2d_8_depthwise/depthwise_weights"
  input: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/beta"
  input: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/gamma"
  input: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_mean"
  input: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_variance"
  input: "MobilenetV1/Conv2d_8_pointwise/weights"
  input: "MobilenetV1/Conv2d_9_depthwise/BatchNorm/beta"
  input: "MobilenetV1/Conv2d_9_depthwise/BatchNorm/gamma"
  input: "MobilenetV1/Conv2d_9_depthwise/BatchNorm/moving_mean"
  input: "MobilenetV1/Conv2d_9_depthwise/BatchNorm/moving_variance"
  input: "MobilenetV1/Conv2d_9_depthwise/depthwise_weights"
  input: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/beta"
  input: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/gamma"
  input: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_mean"
  input: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_variance"
  input: "MobilenetV1/Conv2d_9_pointwise/weights"
  input: "MobilenetV1/Logits/Conv2d_1c_1x1/biases"
  input: "MobilenetV1/Logits/Conv2d_1c_1x1/weights"
  input: "global_step"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/Const"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 138
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 138
          }
        }
        string_val: "MobilenetV1/Conv2d_0/BatchNorm/beta"
        string_val: "MobilenetV1/Conv2d_0/BatchNorm/gamma"
        string_val: "MobilenetV1/Conv2d_0/BatchNorm/moving_mean"
        string_val: "MobilenetV1/Conv2d_0/BatchNorm/moving_variance"
        string_val: "MobilenetV1/Conv2d_0/weights"
        string_val: "MobilenetV1/Conv2d_10_depthwise/BatchNorm/beta"
        string_val: "MobilenetV1/Conv2d_10_depthwise/BatchNorm/gamma"
        string_val: "MobilenetV1/Conv2d_10_depthwise/BatchNorm/moving_mean"
        string_val: "MobilenetV1/Conv2d_10_depthwise/BatchNorm/moving_variance"
        string_val: "MobilenetV1/Conv2d_10_depthwise/depthwise_weights"
        string_val: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/beta"
        string_val: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/gamma"
        string_val: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_mean"
        string_val: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_variance"
        string_val: "MobilenetV1/Conv2d_10_pointwise/weights"
        string_val: "MobilenetV1/Conv2d_11_depthwise/BatchNorm/beta"
        string_val: "MobilenetV1/Conv2d_11_depthwise/BatchNorm/gamma"
        string_val: "MobilenetV1/Conv2d_11_depthwise/BatchNorm/moving_mean"
        string_val: "MobilenetV1/Conv2d_11_depthwise/BatchNorm/moving_variance"
        string_val: "MobilenetV1/Conv2d_11_depthwise/depthwise_weights"
        string_val: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/beta"
        string_val: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/gamma"
        string_val: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_mean"
        string_val: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_variance"
        string_val: "MobilenetV1/Conv2d_11_pointwise/weights"
        string_val: "MobilenetV1/Conv2d_12_depthwise/BatchNorm/beta"
        string_val: "MobilenetV1/Conv2d_12_depthwise/BatchNorm/gamma"
        string_val: "MobilenetV1/Conv2d_12_depthwise/BatchNorm/moving_mean"
        string_val: "MobilenetV1/Conv2d_12_depthwise/BatchNorm/moving_variance"
        string_val: "MobilenetV1/Conv2d_12_depthwise/depthwise_weights"
        string_val: "MobilenetV1/Conv2d_12_pointwise/BatchNorm/beta"
        string_val: "MobilenetV1/Conv2d_12_pointwise/BatchNorm/gamma"
        string_val: "MobilenetV1/Conv2d_12_pointwise/BatchNorm/moving_mean"
        string_val: "MobilenetV1/Conv2d_12_pointwise/BatchNorm/moving_variance"
        string_val: "MobilenetV1/Conv2d_12_pointwise/weights"
        string_val: "MobilenetV1/Conv2d_13_depthwise/BatchNorm/beta"
        string_val: "MobilenetV1/Conv2d_13_depthwise/BatchNorm/gamma"
        string_val: "MobilenetV1/Conv2d_13_depthwise/BatchNorm/moving_mean"
        string_val: "MobilenetV1/Conv2d_13_depthwise/BatchNorm/moving_variance"
        string_val: "MobilenetV1/Conv2d_13_depthwise/depthwise_weights"
        string_val: "MobilenetV1/Conv2d_13_pointwise/BatchNorm/beta"
        string_val: "MobilenetV1/Conv2d_13_pointwise/BatchNorm/gamma"
        string_val: "MobilenetV1/Conv2d_13_pointwise/BatchNorm/moving_mean"
        string_val: "MobilenetV1/Conv2d_13_pointwise/BatchNorm/moving_variance"
        string_val: "MobilenetV1/Conv2d_13_pointwise/weights"
        string_val: "MobilenetV1/Conv2d_1_depthwise/BatchNorm/beta"
        string_val: "MobilenetV1/Conv2d_1_depthwise/BatchNorm/gamma"
        string_val: "MobilenetV1/Conv2d_1_depthwise/BatchNorm/moving_mean"
        string_val: "MobilenetV1/Conv2d_1_depthwise/BatchNorm/moving_variance"
        string_val: "MobilenetV1/Conv2d_1_depthwise/depthwise_weights"
        string_val: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/beta"
        string_val: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/gamma"
        string_val: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_mean"
        string_val: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_variance"
        string_val: "MobilenetV1/Conv2d_1_pointwise/weights"
        string_val: "MobilenetV1/Conv2d_2_depthwise/BatchNorm/beta"
        string_val: "MobilenetV1/Conv2d_2_depthwise/BatchNorm/gamma"
        string_val: "MobilenetV1/Conv2d_2_depthwise/BatchNorm/moving_mean"
        string_val: "MobilenetV1/Conv2d_2_depthwise/BatchNorm/moving_variance"
        string_val: "MobilenetV1/Conv2d_2_depthwise/depthwise_weights"
        string_val: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/beta"
        string_val: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/gamma"
        string_val: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_mean"
        string_val: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_variance"
        string_val: "MobilenetV1/Conv2d_2_pointwise/weights"
        string_val: "MobilenetV1/Conv2d_3_depthwise/BatchNorm/beta"
        string_val: "MobilenetV1/Conv2d_3_depthwise/BatchNorm/gamma"
        string_val: "MobilenetV1/Conv2d_3_depthwise/BatchNorm/moving_mean"
        string_val: "MobilenetV1/Conv2d_3_depthwise/BatchNorm/moving_variance"
        string_val: "MobilenetV1/Conv2d_3_depthwise/depthwise_weights"
        string_val: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/beta"
        string_val: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/gamma"
        string_val: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_mean"
        string_val: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_variance"
        string_val: "MobilenetV1/Conv2d_3_pointwise/weights"
        string_val: "MobilenetV1/Conv2d_4_depthwise/BatchNorm/beta"
        string_val: "MobilenetV1/Conv2d_4_depthwise/BatchNorm/gamma"
        string_val: "MobilenetV1/Conv2d_4_depthwise/BatchNorm/moving_mean"
        string_val: "MobilenetV1/Conv2d_4_depthwise/BatchNorm/moving_variance"
        string_val: "MobilenetV1/Conv2d_4_depthwise/depthwise_weights"
        string_val: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/beta"
        string_val: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/gamma"
        string_val: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_mean"
        string_val: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_variance"
        string_val: "MobilenetV1/Conv2d_4_pointwise/weights"
        string_val: "MobilenetV1/Conv2d_5_depthwise/BatchNorm/beta"
        string_val: "MobilenetV1/Conv2d_5_depthwise/BatchNorm/gamma"
        string_val: "MobilenetV1/Conv2d_5_depthwise/BatchNorm/moving_mean"
        string_val: "MobilenetV1/Conv2d_5_depthwise/BatchNorm/moving_variance"
        string_val: "MobilenetV1/Conv2d_5_depthwise/depthwise_weights"
        string_val: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/beta"
        string_val: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/gamma"
        string_val: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_mean"
        string_val: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_variance"
        string_val: "MobilenetV1/Conv2d_5_pointwise/weights"
        string_val: "MobilenetV1/Conv2d_6_depthwise/BatchNorm/beta"
        string_val: "MobilenetV1/Conv2d_6_depthwise/BatchNorm/gamma"
        string_val: "MobilenetV1/Conv2d_6_depthwise/BatchNorm/moving_mean"
        string_val: "MobilenetV1/Conv2d_6_depthwise/BatchNorm/moving_variance"
        string_val: "MobilenetV1/Conv2d_6_depthwise/depthwise_weights"
        string_val: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/beta"
        string_val: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/gamma"
        string_val: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_mean"
        string_val: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_variance"
        string_val: "MobilenetV1/Conv2d_6_pointwise/weights"
        string_val: "MobilenetV1/Conv2d_7_depthwise/BatchNorm/beta"
        string_val: "MobilenetV1/Conv2d_7_depthwise/BatchNorm/gamma"
        string_val: "MobilenetV1/Conv2d_7_depthwise/BatchNorm/moving_mean"
        string_val: "MobilenetV1/Conv2d_7_depthwise/BatchNorm/moving_variance"
        string_val: "MobilenetV1/Conv2d_7_depthwise/depthwise_weights"
        string_val: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/beta"
        string_val: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/gamma"
        string_val: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_mean"
        string_val: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_variance"
        string_val: "MobilenetV1/Conv2d_7_pointwise/weights"
        string_val: "MobilenetV1/Conv2d_8_depthwise/BatchNorm/beta"
        string_val: "MobilenetV1/Conv2d_8_depthwise/BatchNorm/gamma"
        string_val: "MobilenetV1/Conv2d_8_depthwise/BatchNorm/moving_mean"
        string_val: "MobilenetV1/Conv2d_8_depthwise/BatchNorm/moving_variance"
        string_val: "MobilenetV1/Conv2d_8_depthwise/depthwise_weights"
        string_val: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/beta"
        string_val: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/gamma"
        string_val: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_mean"
        string_val: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_variance"
        string_val: "MobilenetV1/Conv2d_8_pointwise/weights"
        string_val: "MobilenetV1/Conv2d_9_depthwise/BatchNorm/beta"
        string_val: "MobilenetV1/Conv2d_9_depthwise/BatchNorm/gamma"
        string_val: "MobilenetV1/Conv2d_9_depthwise/BatchNorm/moving_mean"
        string_val: "MobilenetV1/Conv2d_9_depthwise/BatchNorm/moving_variance"
        string_val: "MobilenetV1/Conv2d_9_depthwise/depthwise_weights"
        string_val: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/beta"
        string_val: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/gamma"
        string_val: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_mean"
        string_val: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_variance"
        string_val: "MobilenetV1/Conv2d_9_pointwise/weights"
        string_val: "MobilenetV1/Logits/Conv2d_1c_1x1/biases"
        string_val: "MobilenetV1/Logits/Conv2d_1c_1x1/weights"
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 138
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 138
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
      }
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "MobilenetV1/Conv2d_0/BatchNorm/beta"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_0/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "MobilenetV1/Conv2d_0/BatchNorm/gamma"
  input: "save/RestoreV2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_0/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "MobilenetV1/Conv2d_0/BatchNorm/moving_mean"
  input: "save/RestoreV2:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_0/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "MobilenetV1/Conv2d_0/BatchNorm/moving_variance"
  input: "save/RestoreV2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_0/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "MobilenetV1/Conv2d_0/weights"
  input: "save/RestoreV2:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_0/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "MobilenetV1/Conv2d_10_depthwise/BatchNorm/beta"
  input: "save/RestoreV2:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "MobilenetV1/Conv2d_10_depthwise/BatchNorm/gamma"
  input: "save/RestoreV2:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "MobilenetV1/Conv2d_10_depthwise/BatchNorm/moving_mean"
  input: "save/RestoreV2:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "MobilenetV1/Conv2d_10_depthwise/BatchNorm/moving_variance"
  input: "save/RestoreV2:8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "MobilenetV1/Conv2d_10_depthwise/depthwise_weights"
  input: "save/RestoreV2:9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/beta"
  input: "save/RestoreV2:10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/gamma"
  input: "save/RestoreV2:11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_mean"
  input: "save/RestoreV2:12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_variance"
  input: "save/RestoreV2:13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "MobilenetV1/Conv2d_10_pointwise/weights"
  input: "save/RestoreV2:14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "MobilenetV1/Conv2d_11_depthwise/BatchNorm/beta"
  input: "save/RestoreV2:15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "MobilenetV1/Conv2d_11_depthwise/BatchNorm/gamma"
  input: "save/RestoreV2:16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "MobilenetV1/Conv2d_11_depthwise/BatchNorm/moving_mean"
  input: "save/RestoreV2:17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "MobilenetV1/Conv2d_11_depthwise/BatchNorm/moving_variance"
  input: "save/RestoreV2:18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "MobilenetV1/Conv2d_11_depthwise/depthwise_weights"
  input: "save/RestoreV2:19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/beta"
  input: "save/RestoreV2:20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/gamma"
  input: "save/RestoreV2:21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_22"
  op: "Assign"
  input: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_mean"
  input: "save/RestoreV2:22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_23"
  op: "Assign"
  input: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_variance"
  input: "save/RestoreV2:23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_24"
  op: "Assign"
  input: "MobilenetV1/Conv2d_11_pointwise/weights"
  input: "save/RestoreV2:24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_25"
  op: "Assign"
  input: "MobilenetV1/Conv2d_12_depthwise/BatchNorm/beta"
  input: "save/RestoreV2:25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_26"
  op: "Assign"
  input: "MobilenetV1/Conv2d_12_depthwise/BatchNorm/gamma"
  input: "save/RestoreV2:26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_27"
  op: "Assign"
  input: "MobilenetV1/Conv2d_12_depthwise/BatchNorm/moving_mean"
  input: "save/RestoreV2:27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_28"
  op: "Assign"
  input: "MobilenetV1/Conv2d_12_depthwise/BatchNorm/moving_variance"
  input: "save/RestoreV2:28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_29"
  op: "Assign"
  input: "MobilenetV1/Conv2d_12_depthwise/depthwise_weights"
  input: "save/RestoreV2:29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_30"
  op: "Assign"
  input: "MobilenetV1/Conv2d_12_pointwise/BatchNorm/beta"
  input: "save/RestoreV2:30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_31"
  op: "Assign"
  input: "MobilenetV1/Conv2d_12_pointwise/BatchNorm/gamma"
  input: "save/RestoreV2:31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_32"
  op: "Assign"
  input: "MobilenetV1/Conv2d_12_pointwise/BatchNorm/moving_mean"
  input: "save/RestoreV2:32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_33"
  op: "Assign"
  input: "MobilenetV1/Conv2d_12_pointwise/BatchNorm/moving_variance"
  input: "save/RestoreV2:33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_34"
  op: "Assign"
  input: "MobilenetV1/Conv2d_12_pointwise/weights"
  input: "save/RestoreV2:34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_35"
  op: "Assign"
  input: "MobilenetV1/Conv2d_13_depthwise/BatchNorm/beta"
  input: "save/RestoreV2:35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_36"
  op: "Assign"
  input: "MobilenetV1/Conv2d_13_depthwise/BatchNorm/gamma"
  input: "save/RestoreV2:36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_37"
  op: "Assign"
  input: "MobilenetV1/Conv2d_13_depthwise/BatchNorm/moving_mean"
  input: "save/RestoreV2:37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_38"
  op: "Assign"
  input: "MobilenetV1/Conv2d_13_depthwise/BatchNorm/moving_variance"
  input: "save/RestoreV2:38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_39"
  op: "Assign"
  input: "MobilenetV1/Conv2d_13_depthwise/depthwise_weights"
  input: "save/RestoreV2:39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 768
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_40"
  op: "Assign"
  input: "MobilenetV1/Conv2d_13_pointwise/BatchNorm/beta"
  input: "save/RestoreV2:40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_41"
  op: "Assign"
  input: "MobilenetV1/Conv2d_13_pointwise/BatchNorm/gamma"
  input: "save/RestoreV2:41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_42"
  op: "Assign"
  input: "MobilenetV1/Conv2d_13_pointwise/BatchNorm/moving_mean"
  input: "save/RestoreV2:42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_43"
  op: "Assign"
  input: "MobilenetV1/Conv2d_13_pointwise/BatchNorm/moving_variance"
  input: "save/RestoreV2:43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_44"
  op: "Assign"
  input: "MobilenetV1/Conv2d_13_pointwise/weights"
  input: "save/RestoreV2:44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 768
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_45"
  op: "Assign"
  input: "MobilenetV1/Conv2d_1_depthwise/BatchNorm/beta"
  input: "save/RestoreV2:45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_46"
  op: "Assign"
  input: "MobilenetV1/Conv2d_1_depthwise/BatchNorm/gamma"
  input: "save/RestoreV2:46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_47"
  op: "Assign"
  input: "MobilenetV1/Conv2d_1_depthwise/BatchNorm/moving_mean"
  input: "save/RestoreV2:47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_48"
  op: "Assign"
  input: "MobilenetV1/Conv2d_1_depthwise/BatchNorm/moving_variance"
  input: "save/RestoreV2:48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_49"
  op: "Assign"
  input: "MobilenetV1/Conv2d_1_depthwise/depthwise_weights"
  input: "save/RestoreV2:49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 24
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_50"
  op: "Assign"
  input: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/beta"
  input: "save/RestoreV2:50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_51"
  op: "Assign"
  input: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/gamma"
  input: "save/RestoreV2:51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_52"
  op: "Assign"
  input: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_mean"
  input: "save/RestoreV2:52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_53"
  op: "Assign"
  input: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_variance"
  input: "save/RestoreV2:53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_54"
  op: "Assign"
  input: "MobilenetV1/Conv2d_1_pointwise/weights"
  input: "save/RestoreV2:54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 24
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_55"
  op: "Assign"
  input: "MobilenetV1/Conv2d_2_depthwise/BatchNorm/beta"
  input: "save/RestoreV2:55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_56"
  op: "Assign"
  input: "MobilenetV1/Conv2d_2_depthwise/BatchNorm/gamma"
  input: "save/RestoreV2:56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_57"
  op: "Assign"
  input: "MobilenetV1/Conv2d_2_depthwise/BatchNorm/moving_mean"
  input: "save/RestoreV2:57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_58"
  op: "Assign"
  input: "MobilenetV1/Conv2d_2_depthwise/BatchNorm/moving_variance"
  input: "save/RestoreV2:58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_59"
  op: "Assign"
  input: "MobilenetV1/Conv2d_2_depthwise/depthwise_weights"
  input: "save/RestoreV2:59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 48
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_60"
  op: "Assign"
  input: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/beta"
  input: "save/RestoreV2:60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_61"
  op: "Assign"
  input: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/gamma"
  input: "save/RestoreV2:61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_62"
  op: "Assign"
  input: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_mean"
  input: "save/RestoreV2:62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_63"
  op: "Assign"
  input: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_variance"
  input: "save/RestoreV2:63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_64"
  op: "Assign"
  input: "MobilenetV1/Conv2d_2_pointwise/weights"
  input: "save/RestoreV2:64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 48
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_65"
  op: "Assign"
  input: "MobilenetV1/Conv2d_3_depthwise/BatchNorm/beta"
  input: "save/RestoreV2:65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_66"
  op: "Assign"
  input: "MobilenetV1/Conv2d_3_depthwise/BatchNorm/gamma"
  input: "save/RestoreV2:66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_67"
  op: "Assign"
  input: "MobilenetV1/Conv2d_3_depthwise/BatchNorm/moving_mean"
  input: "save/RestoreV2:67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_68"
  op: "Assign"
  input: "MobilenetV1/Conv2d_3_depthwise/BatchNorm/moving_variance"
  input: "save/RestoreV2:68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_69"
  op: "Assign"
  input: "MobilenetV1/Conv2d_3_depthwise/depthwise_weights"
  input: "save/RestoreV2:69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_70"
  op: "Assign"
  input: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/beta"
  input: "save/RestoreV2:70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_71"
  op: "Assign"
  input: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/gamma"
  input: "save/RestoreV2:71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_72"
  op: "Assign"
  input: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_mean"
  input: "save/RestoreV2:72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_73"
  op: "Assign"
  input: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_variance"
  input: "save/RestoreV2:73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_74"
  op: "Assign"
  input: "MobilenetV1/Conv2d_3_pointwise/weights"
  input: "save/RestoreV2:74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_75"
  op: "Assign"
  input: "MobilenetV1/Conv2d_4_depthwise/BatchNorm/beta"
  input: "save/RestoreV2:75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_76"
  op: "Assign"
  input: "MobilenetV1/Conv2d_4_depthwise/BatchNorm/gamma"
  input: "save/RestoreV2:76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_77"
  op: "Assign"
  input: "MobilenetV1/Conv2d_4_depthwise/BatchNorm/moving_mean"
  input: "save/RestoreV2:77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_78"
  op: "Assign"
  input: "MobilenetV1/Conv2d_4_depthwise/BatchNorm/moving_variance"
  input: "save/RestoreV2:78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_79"
  op: "Assign"
  input: "MobilenetV1/Conv2d_4_depthwise/depthwise_weights"
  input: "save/RestoreV2:79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_80"
  op: "Assign"
  input: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/beta"
  input: "save/RestoreV2:80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_81"
  op: "Assign"
  input: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/gamma"
  input: "save/RestoreV2:81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_82"
  op: "Assign"
  input: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_mean"
  input: "save/RestoreV2:82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_83"
  op: "Assign"
  input: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_variance"
  input: "save/RestoreV2:83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_84"
  op: "Assign"
  input: "MobilenetV1/Conv2d_4_pointwise/weights"
  input: "save/RestoreV2:84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_85"
  op: "Assign"
  input: "MobilenetV1/Conv2d_5_depthwise/BatchNorm/beta"
  input: "save/RestoreV2:85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_86"
  op: "Assign"
  input: "MobilenetV1/Conv2d_5_depthwise/BatchNorm/gamma"
  input: "save/RestoreV2:86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_87"
  op: "Assign"
  input: "MobilenetV1/Conv2d_5_depthwise/BatchNorm/moving_mean"
  input: "save/RestoreV2:87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_88"
  op: "Assign"
  input: "MobilenetV1/Conv2d_5_depthwise/BatchNorm/moving_variance"
  input: "save/RestoreV2:88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_89"
  op: "Assign"
  input: "MobilenetV1/Conv2d_5_depthwise/depthwise_weights"
  input: "save/RestoreV2:89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 192
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_90"
  op: "Assign"
  input: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/beta"
  input: "save/RestoreV2:90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_91"
  op: "Assign"
  input: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/gamma"
  input: "save/RestoreV2:91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_92"
  op: "Assign"
  input: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_mean"
  input: "save/RestoreV2:92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_93"
  op: "Assign"
  input: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_variance"
  input: "save/RestoreV2:93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_94"
  op: "Assign"
  input: "MobilenetV1/Conv2d_5_pointwise/weights"
  input: "save/RestoreV2:94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 192
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_95"
  op: "Assign"
  input: "MobilenetV1/Conv2d_6_depthwise/BatchNorm/beta"
  input: "save/RestoreV2:95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_96"
  op: "Assign"
  input: "MobilenetV1/Conv2d_6_depthwise/BatchNorm/gamma"
  input: "save/RestoreV2:96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_97"
  op: "Assign"
  input: "MobilenetV1/Conv2d_6_depthwise/BatchNorm/moving_mean"
  input: "save/RestoreV2:97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_98"
  op: "Assign"
  input: "MobilenetV1/Conv2d_6_depthwise/BatchNorm/moving_variance"
  input: "save/RestoreV2:98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_99"
  op: "Assign"
  input: "MobilenetV1/Conv2d_6_depthwise/depthwise_weights"
  input: "save/RestoreV2:99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 192
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_100"
  op: "Assign"
  input: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/beta"
  input: "save/RestoreV2:100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_101"
  op: "Assign"
  input: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/gamma"
  input: "save/RestoreV2:101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_102"
  op: "Assign"
  input: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_mean"
  input: "save/RestoreV2:102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_103"
  op: "Assign"
  input: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_variance"
  input: "save/RestoreV2:103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_104"
  op: "Assign"
  input: "MobilenetV1/Conv2d_6_pointwise/weights"
  input: "save/RestoreV2:104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 192
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_105"
  op: "Assign"
  input: "MobilenetV1/Conv2d_7_depthwise/BatchNorm/beta"
  input: "save/RestoreV2:105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_106"
  op: "Assign"
  input: "MobilenetV1/Conv2d_7_depthwise/BatchNorm/gamma"
  input: "save/RestoreV2:106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_107"
  op: "Assign"
  input: "MobilenetV1/Conv2d_7_depthwise/BatchNorm/moving_mean"
  input: "save/RestoreV2:107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_108"
  op: "Assign"
  input: "MobilenetV1/Conv2d_7_depthwise/BatchNorm/moving_variance"
  input: "save/RestoreV2:108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_109"
  op: "Assign"
  input: "MobilenetV1/Conv2d_7_depthwise/depthwise_weights"
  input: "save/RestoreV2:109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_110"
  op: "Assign"
  input: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/beta"
  input: "save/RestoreV2:110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_111"
  op: "Assign"
  input: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/gamma"
  input: "save/RestoreV2:111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_112"
  op: "Assign"
  input: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_mean"
  input: "save/RestoreV2:112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_113"
  op: "Assign"
  input: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_variance"
  input: "save/RestoreV2:113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_114"
  op: "Assign"
  input: "MobilenetV1/Conv2d_7_pointwise/weights"
  input: "save/RestoreV2:114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_115"
  op: "Assign"
  input: "MobilenetV1/Conv2d_8_depthwise/BatchNorm/beta"
  input: "save/RestoreV2:115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_116"
  op: "Assign"
  input: "MobilenetV1/Conv2d_8_depthwise/BatchNorm/gamma"
  input: "save/RestoreV2:116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_117"
  op: "Assign"
  input: "MobilenetV1/Conv2d_8_depthwise/BatchNorm/moving_mean"
  input: "save/RestoreV2:117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_118"
  op: "Assign"
  input: "MobilenetV1/Conv2d_8_depthwise/BatchNorm/moving_variance"
  input: "save/RestoreV2:118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_119"
  op: "Assign"
  input: "MobilenetV1/Conv2d_8_depthwise/depthwise_weights"
  input: "save/RestoreV2:119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_120"
  op: "Assign"
  input: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/beta"
  input: "save/RestoreV2:120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_121"
  op: "Assign"
  input: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/gamma"
  input: "save/RestoreV2:121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_122"
  op: "Assign"
  input: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_mean"
  input: "save/RestoreV2:122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_123"
  op: "Assign"
  input: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_variance"
  input: "save/RestoreV2:123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_124"
  op: "Assign"
  input: "MobilenetV1/Conv2d_8_pointwise/weights"
  input: "save/RestoreV2:124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_125"
  op: "Assign"
  input: "MobilenetV1/Conv2d_9_depthwise/BatchNorm/beta"
  input: "save/RestoreV2:125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_126"
  op: "Assign"
  input: "MobilenetV1/Conv2d_9_depthwise/BatchNorm/gamma"
  input: "save/RestoreV2:126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_127"
  op: "Assign"
  input: "MobilenetV1/Conv2d_9_depthwise/BatchNorm/moving_mean"
  input: "save/RestoreV2:127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_128"
  op: "Assign"
  input: "MobilenetV1/Conv2d_9_depthwise/BatchNorm/moving_variance"
  input: "save/RestoreV2:128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_129"
  op: "Assign"
  input: "MobilenetV1/Conv2d_9_depthwise/depthwise_weights"
  input: "save/RestoreV2:129"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_130"
  op: "Assign"
  input: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/beta"
  input: "save/RestoreV2:130"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_131"
  op: "Assign"
  input: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/gamma"
  input: "save/RestoreV2:131"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_132"
  op: "Assign"
  input: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_mean"
  input: "save/RestoreV2:132"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_133"
  op: "Assign"
  input: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_variance"
  input: "save/RestoreV2:133"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_134"
  op: "Assign"
  input: "MobilenetV1/Conv2d_9_pointwise/weights"
  input: "save/RestoreV2:134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_135"
  op: "Assign"
  input: "MobilenetV1/Logits/Conv2d_1c_1x1/biases"
  input: "save/RestoreV2:135"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Logits/Conv2d_1c_1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 36
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_136"
  op: "Assign"
  input: "MobilenetV1/Logits/Conv2d_1c_1x1/weights"
  input: "save/RestoreV2:136"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Logits/Conv2d_1c_1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 768
          }
          dim {
            size: 36
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_137"
  op: "Assign"
  input: "global_step"
  input: "save/RestoreV2:137"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_2"
  input: "^save/Assign_3"
  input: "^save/Assign_4"
  input: "^save/Assign_5"
  input: "^save/Assign_6"
  input: "^save/Assign_7"
  input: "^save/Assign_8"
  input: "^save/Assign_9"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  input: "^save/Assign_14"
  input: "^save/Assign_15"
  input: "^save/Assign_16"
  input: "^save/Assign_17"
  input: "^save/Assign_18"
  input: "^save/Assign_19"
  input: "^save/Assign_20"
  input: "^save/Assign_21"
  input: "^save/Assign_22"
  input: "^save/Assign_23"
  input: "^save/Assign_24"
  input: "^save/Assign_25"
  input: "^save/Assign_26"
  input: "^save/Assign_27"
  input: "^save/Assign_28"
  input: "^save/Assign_29"
  input: "^save/Assign_30"
  input: "^save/Assign_31"
  input: "^save/Assign_32"
  input: "^save/Assign_33"
  input: "^save/Assign_34"
  input: "^save/Assign_35"
  input: "^save/Assign_36"
  input: "^save/Assign_37"
  input: "^save/Assign_38"
  input: "^save/Assign_39"
  input: "^save/Assign_40"
  input: "^save/Assign_41"
  input: "^save/Assign_42"
  input: "^save/Assign_43"
  input: "^save/Assign_44"
  input: "^save/Assign_45"
  input: "^save/Assign_46"
  input: "^save/Assign_47"
  input: "^save/Assign_48"
  input: "^save/Assign_49"
  input: "^save/Assign_50"
  input: "^save/Assign_51"
  input: "^save/Assign_52"
  input: "^save/Assign_53"
  input: "^save/Assign_54"
  input: "^save/Assign_55"
  input: "^save/Assign_56"
  input: "^save/Assign_57"
  input: "^save/Assign_58"
  input: "^save/Assign_59"
  input: "^save/Assign_60"
  input: "^save/Assign_61"
  input: "^save/Assign_62"
  input: "^save/Assign_63"
  input: "^save/Assign_64"
  input: "^save/Assign_65"
  input: "^save/Assign_66"
  input: "^save/Assign_67"
  input: "^save/Assign_68"
  input: "^save/Assign_69"
  input: "^save/Assign_70"
  input: "^save/Assign_71"
  input: "^save/Assign_72"
  input: "^save/Assign_73"
  input: "^save/Assign_74"
  input: "^save/Assign_75"
  input: "^save/Assign_76"
  input: "^save/Assign_77"
  input: "^save/Assign_78"
  input: "^save/Assign_79"
  input: "^save/Assign_80"
  input: "^save/Assign_81"
  input: "^save/Assign_82"
  input: "^save/Assign_83"
  input: "^save/Assign_84"
  input: "^save/Assign_85"
  input: "^save/Assign_86"
  input: "^save/Assign_87"
  input: "^save/Assign_88"
  input: "^save/Assign_89"
  input: "^save/Assign_90"
  input: "^save/Assign_91"
  input: "^save/Assign_92"
  input: "^save/Assign_93"
  input: "^save/Assign_94"
  input: "^save/Assign_95"
  input: "^save/Assign_96"
  input: "^save/Assign_97"
  input: "^save/Assign_98"
  input: "^save/Assign_99"
  input: "^save/Assign_100"
  input: "^save/Assign_101"
  input: "^save/Assign_102"
  input: "^save/Assign_103"
  input: "^save/Assign_104"
  input: "^save/Assign_105"
  input: "^save/Assign_106"
  input: "^save/Assign_107"
  input: "^save/Assign_108"
  input: "^save/Assign_109"
  input: "^save/Assign_110"
  input: "^save/Assign_111"
  input: "^save/Assign_112"
  input: "^save/Assign_113"
  input: "^save/Assign_114"
  input: "^save/Assign_115"
  input: "^save/Assign_116"
  input: "^save/Assign_117"
  input: "^save/Assign_118"
  input: "^save/Assign_119"
  input: "^save/Assign_120"
  input: "^save/Assign_121"
  input: "^save/Assign_122"
  input: "^save/Assign_123"
  input: "^save/Assign_124"
  input: "^save/Assign_125"
  input: "^save/Assign_126"
  input: "^save/Assign_127"
  input: "^save/Assign_128"
  input: "^save/Assign_129"
  input: "^save/Assign_130"
  input: "^save/Assign_131"
  input: "^save/Assign_132"
  input: "^save/Assign_133"
  input: "^save/Assign_134"
  input: "^save/Assign_135"
  input: "^save/Assign_136"
  input: "^save/Assign_137"
}
node {
  name: "init_ops/init"
  op: "NoOp"
  input: "^MobilenetV1/Conv2d_0/weights/Assign"
  input: "^MobilenetV1/Conv2d_0/BatchNorm/gamma/Assign"
  input: "^MobilenetV1/Conv2d_0/BatchNorm/beta/Assign"
  input: "^MobilenetV1/Conv2d_0/BatchNorm/moving_mean/Assign"
  input: "^MobilenetV1/Conv2d_0/BatchNorm/moving_variance/Assign"
  input: "^MobilenetV1/Conv2d_1_depthwise/depthwise_weights/Assign"
  input: "^MobilenetV1/Conv2d_1_depthwise/BatchNorm/gamma/Assign"
  input: "^MobilenetV1/Conv2d_1_depthwise/BatchNorm/beta/Assign"
  input: "^MobilenetV1/Conv2d_1_depthwise/BatchNorm/moving_mean/Assign"
  input: "^MobilenetV1/Conv2d_1_depthwise/BatchNorm/moving_variance/Assign"
  input: "^MobilenetV1/Conv2d_1_pointwise/weights/Assign"
  input: "^MobilenetV1/Conv2d_1_pointwise/BatchNorm/gamma/Assign"
  input: "^MobilenetV1/Conv2d_1_pointwise/BatchNorm/beta/Assign"
  input: "^MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_mean/Assign"
  input: "^MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_variance/Assign"
  input: "^MobilenetV1/Conv2d_2_depthwise/depthwise_weights/Assign"
  input: "^MobilenetV1/Conv2d_2_depthwise/BatchNorm/gamma/Assign"
  input: "^MobilenetV1/Conv2d_2_depthwise/BatchNorm/beta/Assign"
  input: "^MobilenetV1/Conv2d_2_depthwise/BatchNorm/moving_mean/Assign"
  input: "^MobilenetV1/Conv2d_2_depthwise/BatchNorm/moving_variance/Assign"
  input: "^MobilenetV1/Conv2d_2_pointwise/weights/Assign"
  input: "^MobilenetV1/Conv2d_2_pointwise/BatchNorm/gamma/Assign"
  input: "^MobilenetV1/Conv2d_2_pointwise/BatchNorm/beta/Assign"
  input: "^MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_mean/Assign"
  input: "^MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_variance/Assign"
  input: "^MobilenetV1/Conv2d_3_depthwise/depthwise_weights/Assign"
  input: "^MobilenetV1/Conv2d_3_depthwise/BatchNorm/gamma/Assign"
  input: "^MobilenetV1/Conv2d_3_depthwise/BatchNorm/beta/Assign"
  input: "^MobilenetV1/Conv2d_3_depthwise/BatchNorm/moving_mean/Assign"
  input: "^MobilenetV1/Conv2d_3_depthwise/BatchNorm/moving_variance/Assign"
  input: "^MobilenetV1/Conv2d_3_pointwise/weights/Assign"
  input: "^MobilenetV1/Conv2d_3_pointwise/BatchNorm/gamma/Assign"
  input: "^MobilenetV1/Conv2d_3_pointwise/BatchNorm/beta/Assign"
  input: "^MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_mean/Assign"
  input: "^MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_variance/Assign"
  input: "^MobilenetV1/Conv2d_4_depthwise/depthwise_weights/Assign"
  input: "^MobilenetV1/Conv2d_4_depthwise/BatchNorm/gamma/Assign"
  input: "^MobilenetV1/Conv2d_4_depthwise/BatchNorm/beta/Assign"
  input: "^MobilenetV1/Conv2d_4_depthwise/BatchNorm/moving_mean/Assign"
  input: "^MobilenetV1/Conv2d_4_depthwise/BatchNorm/moving_variance/Assign"
  input: "^MobilenetV1/Conv2d_4_pointwise/weights/Assign"
  input: "^MobilenetV1/Conv2d_4_pointwise/BatchNorm/gamma/Assign"
  input: "^MobilenetV1/Conv2d_4_pointwise/BatchNorm/beta/Assign"
  input: "^MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_mean/Assign"
  input: "^MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_variance/Assign"
  input: "^MobilenetV1/Conv2d_5_depthwise/depthwise_weights/Assign"
  input: "^MobilenetV1/Conv2d_5_depthwise/BatchNorm/gamma/Assign"
  input: "^MobilenetV1/Conv2d_5_depthwise/BatchNorm/beta/Assign"
  input: "^MobilenetV1/Conv2d_5_depthwise/BatchNorm/moving_mean/Assign"
  input: "^MobilenetV1/Conv2d_5_depthwise/BatchNorm/moving_variance/Assign"
  input: "^MobilenetV1/Conv2d_5_pointwise/weights/Assign"
  input: "^MobilenetV1/Conv2d_5_pointwise/BatchNorm/gamma/Assign"
  input: "^MobilenetV1/Conv2d_5_pointwise/BatchNorm/beta/Assign"
  input: "^MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_mean/Assign"
  input: "^MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_variance/Assign"
  input: "^MobilenetV1/Conv2d_6_depthwise/depthwise_weights/Assign"
  input: "^MobilenetV1/Conv2d_6_depthwise/BatchNorm/gamma/Assign"
  input: "^MobilenetV1/Conv2d_6_depthwise/BatchNorm/beta/Assign"
  input: "^MobilenetV1/Conv2d_6_depthwise/BatchNorm/moving_mean/Assign"
  input: "^MobilenetV1/Conv2d_6_depthwise/BatchNorm/moving_variance/Assign"
  input: "^MobilenetV1/Conv2d_6_pointwise/weights/Assign"
  input: "^MobilenetV1/Conv2d_6_pointwise/BatchNorm/gamma/Assign"
  input: "^MobilenetV1/Conv2d_6_pointwise/BatchNorm/beta/Assign"
  input: "^MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_mean/Assign"
  input: "^MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_variance/Assign"
  input: "^MobilenetV1/Conv2d_7_depthwise/depthwise_weights/Assign"
  input: "^MobilenetV1/Conv2d_7_depthwise/BatchNorm/gamma/Assign"
  input: "^MobilenetV1/Conv2d_7_depthwise/BatchNorm/beta/Assign"
  input: "^MobilenetV1/Conv2d_7_depthwise/BatchNorm/moving_mean/Assign"
  input: "^MobilenetV1/Conv2d_7_depthwise/BatchNorm/moving_variance/Assign"
  input: "^MobilenetV1/Conv2d_7_pointwise/weights/Assign"
  input: "^MobilenetV1/Conv2d_7_pointwise/BatchNorm/gamma/Assign"
  input: "^MobilenetV1/Conv2d_7_pointwise/BatchNorm/beta/Assign"
  input: "^MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_mean/Assign"
  input: "^MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_variance/Assign"
  input: "^MobilenetV1/Conv2d_8_depthwise/depthwise_weights/Assign"
  input: "^MobilenetV1/Conv2d_8_depthwise/BatchNorm/gamma/Assign"
  input: "^MobilenetV1/Conv2d_8_depthwise/BatchNorm/beta/Assign"
  input: "^MobilenetV1/Conv2d_8_depthwise/BatchNorm/moving_mean/Assign"
  input: "^MobilenetV1/Conv2d_8_depthwise/BatchNorm/moving_variance/Assign"
  input: "^MobilenetV1/Conv2d_8_pointwise/weights/Assign"
  input: "^MobilenetV1/Conv2d_8_pointwise/BatchNorm/gamma/Assign"
  input: "^MobilenetV1/Conv2d_8_pointwise/BatchNorm/beta/Assign"
  input: "^MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_mean/Assign"
  input: "^MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_variance/Assign"
  input: "^MobilenetV1/Conv2d_9_depthwise/depthwise_weights/Assign"
  input: "^MobilenetV1/Conv2d_9_depthwise/BatchNorm/gamma/Assign"
  input: "^MobilenetV1/Conv2d_9_depthwise/BatchNorm/beta/Assign"
  input: "^MobilenetV1/Conv2d_9_depthwise/BatchNorm/moving_mean/Assign"
  input: "^MobilenetV1/Conv2d_9_depthwise/BatchNorm/moving_variance/Assign"
  input: "^MobilenetV1/Conv2d_9_pointwise/weights/Assign"
  input: "^MobilenetV1/Conv2d_9_pointwise/BatchNorm/gamma/Assign"
  input: "^MobilenetV1/Conv2d_9_pointwise/BatchNorm/beta/Assign"
  input: "^MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_mean/Assign"
  input: "^MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_variance/Assign"
  input: "^MobilenetV1/Conv2d_10_depthwise/depthwise_weights/Assign"
  input: "^MobilenetV1/Conv2d_10_depthwise/BatchNorm/gamma/Assign"
  input: "^MobilenetV1/Conv2d_10_depthwise/BatchNorm/beta/Assign"
  input: "^MobilenetV1/Conv2d_10_depthwise/BatchNorm/moving_mean/Assign"
  input: "^MobilenetV1/Conv2d_10_depthwise/BatchNorm/moving_variance/Assign"
  input: "^MobilenetV1/Conv2d_10_pointwise/weights/Assign"
  input: "^MobilenetV1/Conv2d_10_pointwise/BatchNorm/gamma/Assign"
  input: "^MobilenetV1/Conv2d_10_pointwise/BatchNorm/beta/Assign"
  input: "^MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_mean/Assign"
  input: "^MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_variance/Assign"
  input: "^MobilenetV1/Conv2d_11_depthwise/depthwise_weights/Assign"
  input: "^MobilenetV1/Conv2d_11_depthwise/BatchNorm/gamma/Assign"
  input: "^MobilenetV1/Conv2d_11_depthwise/BatchNorm/beta/Assign"
  input: "^MobilenetV1/Conv2d_11_depthwise/BatchNorm/moving_mean/Assign"
  input: "^MobilenetV1/Conv2d_11_depthwise/BatchNorm/moving_variance/Assign"
  input: "^MobilenetV1/Conv2d_11_pointwise/weights/Assign"
  input: "^MobilenetV1/Conv2d_11_pointwise/BatchNorm/gamma/Assign"
  input: "^MobilenetV1/Conv2d_11_pointwise/BatchNorm/beta/Assign"
  input: "^MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_mean/Assign"
  input: "^MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_variance/Assign"
  input: "^MobilenetV1/Conv2d_12_depthwise/depthwise_weights/Assign"
  input: "^MobilenetV1/Conv2d_12_depthwise/BatchNorm/gamma/Assign"
  input: "^MobilenetV1/Conv2d_12_depthwise/BatchNorm/beta/Assign"
  input: "^MobilenetV1/Conv2d_12_depthwise/BatchNorm/moving_mean/Assign"
  input: "^MobilenetV1/Conv2d_12_depthwise/BatchNorm/moving_variance/Assign"
  input: "^MobilenetV1/Conv2d_12_pointwise/weights/Assign"
  input: "^MobilenetV1/Conv2d_12_pointwise/BatchNorm/gamma/Assign"
  input: "^MobilenetV1/Conv2d_12_pointwise/BatchNorm/beta/Assign"
  input: "^MobilenetV1/Conv2d_12_pointwise/BatchNorm/moving_mean/Assign"
  input: "^MobilenetV1/Conv2d_12_pointwise/BatchNorm/moving_variance/Assign"
  input: "^MobilenetV1/Conv2d_13_depthwise/depthwise_weights/Assign"
  input: "^MobilenetV1/Conv2d_13_depthwise/BatchNorm/gamma/Assign"
  input: "^MobilenetV1/Conv2d_13_depthwise/BatchNorm/beta/Assign"
  input: "^MobilenetV1/Conv2d_13_depthwise/BatchNorm/moving_mean/Assign"
  input: "^MobilenetV1/Conv2d_13_depthwise/BatchNorm/moving_variance/Assign"
  input: "^MobilenetV1/Conv2d_13_pointwise/weights/Assign"
  input: "^MobilenetV1/Conv2d_13_pointwise/BatchNorm/gamma/Assign"
  input: "^MobilenetV1/Conv2d_13_pointwise/BatchNorm/beta/Assign"
  input: "^MobilenetV1/Conv2d_13_pointwise/BatchNorm/moving_mean/Assign"
  input: "^MobilenetV1/Conv2d_13_pointwise/BatchNorm/moving_variance/Assign"
  input: "^MobilenetV1/Logits/Conv2d_1c_1x1/weights/Assign"
  input: "^MobilenetV1/Logits/Conv2d_1c_1x1/biases/Assign"
  input: "^global_step/Assign"
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_0/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_0/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_0/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_0/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_0/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_0/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_0/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_0/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_0/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_0/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_1_depthwise/depthwise_weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_1_depthwise/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_1_depthwise/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_1_depthwise/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_1_depthwise/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_10"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_1_pointwise/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_11"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_12"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_13"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_14"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_15"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_2_depthwise/depthwise_weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_16"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_2_depthwise/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_17"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_2_depthwise/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_18"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_2_depthwise/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_19"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_2_depthwise/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_20"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_2_pointwise/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_21"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_22"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_23"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_24"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_25"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_3_depthwise/depthwise_weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_26"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_3_depthwise/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_27"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_3_depthwise/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_28"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_3_depthwise/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_29"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_3_depthwise/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_30"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_3_pointwise/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_31"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_32"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_33"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_34"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_35"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_4_depthwise/depthwise_weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_36"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_4_depthwise/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_37"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_4_depthwise/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_38"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_4_depthwise/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_39"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_4_depthwise/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_40"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_4_pointwise/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_41"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_42"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_43"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_44"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_45"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_5_depthwise/depthwise_weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_46"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_5_depthwise/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_47"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_5_depthwise/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_48"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_5_depthwise/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_49"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_5_depthwise/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_50"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_5_pointwise/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_51"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_52"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_53"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_54"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_55"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_6_depthwise/depthwise_weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_56"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_6_depthwise/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_57"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_6_depthwise/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_58"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_6_depthwise/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_59"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_6_depthwise/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_60"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_6_pointwise/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_61"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_62"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_63"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_64"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_65"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_7_depthwise/depthwise_weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_66"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_7_depthwise/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_67"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_7_depthwise/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_68"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_7_depthwise/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_69"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_7_depthwise/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_70"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_7_pointwise/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_71"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_72"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_73"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_74"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_75"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_8_depthwise/depthwise_weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_76"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_8_depthwise/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_77"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_8_depthwise/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_78"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_8_depthwise/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_79"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_8_depthwise/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_80"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_8_pointwise/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_81"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_82"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_83"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_84"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_85"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_9_depthwise/depthwise_weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_86"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_9_depthwise/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_87"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_9_depthwise/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_88"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_9_depthwise/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_89"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_9_depthwise/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_90"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_9_pointwise/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_91"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_92"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_93"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_94"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_95"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_10_depthwise/depthwise_weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_96"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_10_depthwise/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_97"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_10_depthwise/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_98"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_10_depthwise/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_99"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_10_depthwise/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_100"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_10_pointwise/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_101"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_102"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_103"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_104"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_105"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_11_depthwise/depthwise_weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_106"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_11_depthwise/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_107"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_11_depthwise/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_108"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_11_depthwise/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_109"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_11_depthwise/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_110"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_11_pointwise/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_111"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_112"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_113"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_114"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_115"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_12_depthwise/depthwise_weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_116"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_12_depthwise/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_117"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_12_depthwise/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_118"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_12_depthwise/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_119"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_12_depthwise/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_120"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_12_pointwise/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_121"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_12_pointwise/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_122"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_12_pointwise/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_123"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_12_pointwise/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_124"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_12_pointwise/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_12_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_125"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_13_depthwise/depthwise_weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_depthwise/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_126"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_13_depthwise/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_depthwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_127"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_13_depthwise/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_depthwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_128"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_13_depthwise/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_129"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_13_depthwise/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_130"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_13_pointwise/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_pointwise/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_131"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_13_pointwise/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_pointwise/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_132"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_13_pointwise/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_pointwise/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_133"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_13_pointwise/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_134"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Conv2d_13_pointwise/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Conv2d_13_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_135"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Logits/Conv2d_1c_1x1/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Logits/Conv2d_1c_1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_136"
  op: "IsVariableInitialized"
  input: "MobilenetV1/Logits/Conv2d_1c_1x1/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobilenetV1/Logits/Conv2d_1c_1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_137"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/stack"
  op: "Pack"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_1"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_2"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_3"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_4"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_5"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_6"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_7"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_8"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_9"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_10"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_11"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_12"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_13"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_14"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_15"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_16"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_17"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_18"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_19"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_20"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_21"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_22"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_23"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_24"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_25"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_26"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_27"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_28"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_29"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_30"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_31"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_32"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_33"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_34"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_35"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_36"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_37"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_38"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_39"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_40"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_41"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_42"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_43"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_44"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_45"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_46"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_47"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_48"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_49"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_50"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_51"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_52"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_53"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_54"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_55"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_56"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_57"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_58"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_59"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_60"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_61"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_62"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_63"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_64"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_65"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_66"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_67"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_68"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_69"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_70"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_71"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_72"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_73"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_74"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_75"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_76"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_77"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_78"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_79"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_80"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_81"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_82"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_83"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_84"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_85"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_86"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_87"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_88"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_89"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_90"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_91"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_92"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_93"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_94"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_95"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_96"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_97"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_98"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_99"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_100"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_101"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_102"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_103"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_104"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_105"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_106"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_107"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_108"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_109"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_110"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_111"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_112"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_113"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_114"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_115"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_116"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_117"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_118"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_119"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_120"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_121"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_122"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_123"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_124"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_125"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_126"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_127"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_128"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_129"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_130"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_131"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_132"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_133"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_134"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_135"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_136"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_137"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 138
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 138
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/LogicalNot"
  op: "LogicalNot"
  input: "init_ops/report_uninitialized_variables/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 138
          }
        }
      }
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 138
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 138
          }
        }
        string_val: "MobilenetV1/Conv2d_0/weights"
        string_val: "MobilenetV1/Conv2d_0/BatchNorm/gamma"
        string_val: "MobilenetV1/Conv2d_0/BatchNorm/beta"
        string_val: "MobilenetV1/Conv2d_0/BatchNorm/moving_mean"
        string_val: "MobilenetV1/Conv2d_0/BatchNorm/moving_variance"
        string_val: "MobilenetV1/Conv2d_1_depthwise/depthwise_weights"
        string_val: "MobilenetV1/Conv2d_1_depthwise/BatchNorm/gamma"
        string_val: "MobilenetV1/Conv2d_1_depthwise/BatchNorm/beta"
        string_val: "MobilenetV1/Conv2d_1_depthwise/BatchNorm/moving_mean"
        string_val: "MobilenetV1/Conv2d_1_depthwise/BatchNorm/moving_variance"
        string_val: "MobilenetV1/Conv2d_1_pointwise/weights"
        string_val: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/gamma"
        string_val: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/beta"
        string_val: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_mean"
        string_val: "MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_variance"
        string_val: "MobilenetV1/Conv2d_2_depthwise/depthwise_weights"
        string_val: "MobilenetV1/Conv2d_2_depthwise/BatchNorm/gamma"
        string_val: "MobilenetV1/Conv2d_2_depthwise/BatchNorm/beta"
        string_val: "MobilenetV1/Conv2d_2_depthwise/BatchNorm/moving_mean"
        string_val: "MobilenetV1/Conv2d_2_depthwise/BatchNorm/moving_variance"
        string_val: "MobilenetV1/Conv2d_2_pointwise/weights"
        string_val: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/gamma"
        string_val: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/beta"
        string_val: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_mean"
        string_val: "MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_variance"
        string_val: "MobilenetV1/Conv2d_3_depthwise/depthwise_weights"
        string_val: "MobilenetV1/Conv2d_3_depthwise/BatchNorm/gamma"
        string_val: "MobilenetV1/Conv2d_3_depthwise/BatchNorm/beta"
        string_val: "MobilenetV1/Conv2d_3_depthwise/BatchNorm/moving_mean"
        string_val: "MobilenetV1/Conv2d_3_depthwise/BatchNorm/moving_variance"
        string_val: "MobilenetV1/Conv2d_3_pointwise/weights"
        string_val: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/gamma"
        string_val: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/beta"
        string_val: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_mean"
        string_val: "MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_variance"
        string_val: "MobilenetV1/Conv2d_4_depthwise/depthwise_weights"
        string_val: "MobilenetV1/Conv2d_4_depthwise/BatchNorm/gamma"
        string_val: "MobilenetV1/Conv2d_4_depthwise/BatchNorm/beta"
        string_val: "MobilenetV1/Conv2d_4_depthwise/BatchNorm/moving_mean"
        string_val: "MobilenetV1/Conv2d_4_depthwise/BatchNorm/moving_variance"
        string_val: "MobilenetV1/Conv2d_4_pointwise/weights"
        string_val: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/gamma"
        string_val: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/beta"
        string_val: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_mean"
        string_val: "MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_variance"
        string_val: "MobilenetV1/Conv2d_5_depthwise/depthwise_weights"
        string_val: "MobilenetV1/Conv2d_5_depthwise/BatchNorm/gamma"
        string_val: "MobilenetV1/Conv2d_5_depthwise/BatchNorm/beta"
        string_val: "MobilenetV1/Conv2d_5_depthwise/BatchNorm/moving_mean"
        string_val: "MobilenetV1/Conv2d_5_depthwise/BatchNorm/moving_variance"
        string_val: "MobilenetV1/Conv2d_5_pointwise/weights"
        string_val: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/gamma"
        string_val: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/beta"
        string_val: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_mean"
        string_val: "MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_variance"
        string_val: "MobilenetV1/Conv2d_6_depthwise/depthwise_weights"
        string_val: "MobilenetV1/Conv2d_6_depthwise/BatchNorm/gamma"
        string_val: "MobilenetV1/Conv2d_6_depthwise/BatchNorm/beta"
        string_val: "MobilenetV1/Conv2d_6_depthwise/BatchNorm/moving_mean"
        string_val: "MobilenetV1/Conv2d_6_depthwise/BatchNorm/moving_variance"
        string_val: "MobilenetV1/Conv2d_6_pointwise/weights"
        string_val: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/gamma"
        string_val: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/beta"
        string_val: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_mean"
        string_val: "MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_variance"
        string_val: "MobilenetV1/Conv2d_7_depthwise/depthwise_weights"
        string_val: "MobilenetV1/Conv2d_7_depthwise/BatchNorm/gamma"
        string_val: "MobilenetV1/Conv2d_7_depthwise/BatchNorm/beta"
        string_val: "MobilenetV1/Conv2d_7_depthwise/BatchNorm/moving_mean"
        string_val: "MobilenetV1/Conv2d_7_depthwise/BatchNorm/moving_variance"
        string_val: "MobilenetV1/Conv2d_7_pointwise/weights"
        string_val: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/gamma"
        string_val: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/beta"
        string_val: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_mean"
        string_val: "MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_variance"
        string_val: "MobilenetV1/Conv2d_8_depthwise/depthwise_weights"
        string_val: "MobilenetV1/Conv2d_8_depthwise/BatchNorm/gamma"
        string_val: "MobilenetV1/Conv2d_8_depthwise/BatchNorm/beta"
        string_val: "MobilenetV1/Conv2d_8_depthwise/BatchNorm/moving_mean"
        string_val: "MobilenetV1/Conv2d_8_depthwise/BatchNorm/moving_variance"
        string_val: "MobilenetV1/Conv2d_8_pointwise/weights"
        string_val: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/gamma"
        string_val: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/beta"
        string_val: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_mean"
        string_val: "MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_variance"
        string_val: "MobilenetV1/Conv2d_9_depthwise/depthwise_weights"
        string_val: "MobilenetV1/Conv2d_9_depthwise/BatchNorm/gamma"
        string_val: "MobilenetV1/Conv2d_9_depthwise/BatchNorm/beta"
        string_val: "MobilenetV1/Conv2d_9_depthwise/BatchNorm/moving_mean"
        string_val: "MobilenetV1/Conv2d_9_depthwise/BatchNorm/moving_variance"
        string_val: "MobilenetV1/Conv2d_9_pointwise/weights"
        string_val: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/gamma"
        string_val: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/beta"
        string_val: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_mean"
        string_val: "MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_variance"
        string_val: "MobilenetV1/Conv2d_10_depthwise/depthwise_weights"
        string_val: "MobilenetV1/Conv2d_10_depthwise/BatchNorm/gamma"
        string_val: "MobilenetV1/Conv2d_10_depthwise/BatchNorm/beta"
        string_val: "MobilenetV1/Conv2d_10_depthwise/BatchNorm/moving_mean"
        string_val: "MobilenetV1/Conv2d_10_depthwise/BatchNorm/moving_variance"
        string_val: "MobilenetV1/Conv2d_10_pointwise/weights"
        string_val: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/gamma"
        string_val: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/beta"
        string_val: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_mean"
        string_val: "MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_variance"
        string_val: "MobilenetV1/Conv2d_11_depthwise/depthwise_weights"
        string_val: "MobilenetV1/Conv2d_11_depthwise/BatchNorm/gamma"
        string_val: "MobilenetV1/Conv2d_11_depthwise/BatchNorm/beta"
        string_val: "MobilenetV1/Conv2d_11_depthwise/BatchNorm/moving_mean"
        string_val: "MobilenetV1/Conv2d_11_depthwise/BatchNorm/moving_variance"
        string_val: "MobilenetV1/Conv2d_11_pointwise/weights"
        string_val: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/gamma"
        string_val: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/beta"
        string_val: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_mean"
        string_val: "MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_variance"
        string_val: "MobilenetV1/Conv2d_12_depthwise/depthwise_weights"
        string_val: "MobilenetV1/Conv2d_12_depthwise/BatchNorm/gamma"
        string_val: "MobilenetV1/Conv2d_12_depthwise/BatchNorm/beta"
        string_val: "MobilenetV1/Conv2d_12_depthwise/BatchNorm/moving_mean"
        string_val: "MobilenetV1/Conv2d_12_depthwise/BatchNorm/moving_variance"
        string_val: "MobilenetV1/Conv2d_12_pointwise/weights"
        string_val: "MobilenetV1/Conv2d_12_pointwise/BatchNorm/gamma"
        string_val: "MobilenetV1/Conv2d_12_pointwise/BatchNorm/beta"
        string_val: "MobilenetV1/Conv2d_12_pointwise/BatchNorm/moving_mean"
        string_val: "MobilenetV1/Conv2d_12_pointwise/BatchNorm/moving_variance"
        string_val: "MobilenetV1/Conv2d_13_depthwise/depthwise_weights"
        string_val: "MobilenetV1/Conv2d_13_depthwise/BatchNorm/gamma"
        string_val: "MobilenetV1/Conv2d_13_depthwise/BatchNorm/beta"
        string_val: "MobilenetV1/Conv2d_13_depthwise/BatchNorm/moving_mean"
        string_val: "MobilenetV1/Conv2d_13_depthwise/BatchNorm/moving_variance"
        string_val: "MobilenetV1/Conv2d_13_pointwise/weights"
        string_val: "MobilenetV1/Conv2d_13_pointwise/BatchNorm/gamma"
        string_val: "MobilenetV1/Conv2d_13_pointwise/BatchNorm/beta"
        string_val: "MobilenetV1/Conv2d_13_pointwise/BatchNorm/moving_mean"
        string_val: "MobilenetV1/Conv2d_13_pointwise/BatchNorm/moving_variance"
        string_val: "MobilenetV1/Logits/Conv2d_1c_1x1/weights"
        string_val: "MobilenetV1/Logits/Conv2d_1c_1x1/biases"
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 138
      }
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "init_ops/report_uninitialized_variables/boolean_mask/Shape"
  input: "init_ops/report_uninitialized_variables/boolean_mask/strided_slice/stack"
  input: "init_ops/report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  input: "init_ops/report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/boolean_mask/Prod"
  op: "Prod"
  input: "init_ops/report_uninitialized_variables/boolean_mask/strided_slice"
  input: "init_ops/report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 138
      }
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "init_ops/report_uninitialized_variables/boolean_mask/Shape_1"
  input: "init_ops/report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  input: "init_ops/report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  input: "init_ops/report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/boolean_mask/Shape_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 138
      }
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "init_ops/report_uninitialized_variables/boolean_mask/Shape_2"
  input: "init_ops/report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  input: "init_ops/report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  input: "init_ops/report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/boolean_mask/concat/values_1"
  op: "Pack"
  input: "init_ops/report_uninitialized_variables/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/boolean_mask/concat"
  op: "ConcatV2"
  input: "init_ops/report_uninitialized_variables/boolean_mask/strided_slice_1"
  input: "init_ops/report_uninitialized_variables/boolean_mask/concat/values_1"
  input: "init_ops/report_uninitialized_variables/boolean_mask/strided_slice_2"
  input: "init_ops/report_uninitialized_variables/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/boolean_mask/Reshape"
  op: "Reshape"
  input: "init_ops/report_uninitialized_variables/Const"
  input: "init_ops/report_uninitialized_variables/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 138
          }
        }
      }
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "init_ops/report_uninitialized_variables/LogicalNot"
  input: "init_ops/report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 138
          }
        }
      }
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/boolean_mask/Where"
  op: "Where"
  input: "init_ops/report_uninitialized_variables/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "init_ops/report_uninitialized_variables/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/boolean_mask/Gather"
  op: "Gather"
  input: "init_ops/report_uninitialized_variables/boolean_mask/Reshape"
  input: "init_ops/report_uninitialized_variables/boolean_mask/Squeeze"
  device: "/device:CPU:0"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "init_ops/init_1"
  op: "NoOp"
}
node {
  name: "init_ops/init_all_tables"
  op: "NoOp"
}
node {
  name: "init_ops/group_deps"
  op: "NoOp"
  input: "^init_ops/init_1"
  input: "^init_ops/init_all_tables"
}
node {
  name: "Merge/MergeSummary"
  op: "MergeSummary"
  input: "parallel_read/filenames/fraction_of_32_full"
  input: "parallel_read/fraction_of_32_full"
  input: "distort_image/image_with_bounding_boxes"
  input: "distort_image/images_with_distorted_bounding_box"
  input: "distort_image/cropped_resized_image"
  input: "distort_image/final_distorted_image"
  input: "batch/fraction_of_80_full"
  input: "losses/total_loss"
  input: "training/learning_rate"
  input: "training/accuracy"
  attr {
    key: "N"
    value {
      i: 10
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_step/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "train_step/FloorMod/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 10
      }
    }
  }
}
node {
  name: "train_step/FloorMod"
  op: "FloorMod"
  input: "global_step/read"
  input: "train_step/FloorMod/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_step/Equal/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "train_step/Equal"
  op: "Equal"
  input: "train_step/FloorMod"
  input: "train_step/Equal/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
versions {
  producer: 26
}
